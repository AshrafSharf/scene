{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/LoaderContainer.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderOwnerEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TextureEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "clearVertices",
    "invalidateVertices",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_available",
    "push",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "TransformEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transform",
    "addEventListener",
    "INVALIDATE_MATRIX3D",
    "event",
    "_onInvalidateMatrix3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "_onInvalidateColorTransform",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "colorTransform",
    "alphaMultiplier",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "SCENE_TRANSFORM",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateMatrix3D",
    "_width",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "position",
    "matrix3D",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "adapter",
    "disposeValues",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "movePivot",
    "dx",
    "dy",
    "dz",
    "reset",
    "visible",
    "clearMatrix3D",
    "clearColorTransform",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "removeEventListener",
    "hasEventListener",
    "_pImplicitPartition",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "clear",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_iController",
    "updateController",
    "appendTranslation",
    "_iIsRoot",
    "append",
    "_matrix3DDirty",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "splice",
    "indexOf",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "prepend",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "index",
    "Uint16Array",
    "setThickness",
    "thickness",
    "Math",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "getImageAt",
    "texture",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "Short3Attributes",
    "SubGeometryEvent",
    "_numElements",
    "_invalidateVertices",
    "clearIndices",
    "invalidateIndicies",
    "_invalidateIndices",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "attributesView",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "RenderableOwnerEvent",
    "style",
    "_iIndex",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_style",
    "invalidateRenderOwner",
    "_uvTransform",
    "uvTransform",
    "invalidateGeometry",
    "INVALIDATE_GEOMETRY",
    "INVALIDATE_RENDER_OWNER",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "moveDown",
    "moveTo",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "sqrt",
    "identity",
    "elements",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "getInstance",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "RenderOwnerEvent",
    "DefaultMaterialManager",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_updateDimensions",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "INVALIDATE_TEXTURE",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "getTextureAt",
    "getDefaultSampler",
    "rect",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RenderOwnerEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "SamplerCube",
    "ErrorBase",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "_iInvalidateRenderOwners",
    "bakeTransformations",
    "_meshes",
    "pop",
    "isAsset",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "getNewSubMesh",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "SingleCubeTexture",
    "Skybox",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "_subGeometry",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "renderOwner",
    "_renderOwner",
    "INVALIDATE_ANIMATION",
    "_renderableOwner",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TextureEvent",
    "TextureEvent",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "Sampler2D",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateRenderOwners",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "getClass",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "subMeshClass",
    "classPool",
    "newSubMesh",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<CurveSubMesh> = new Array<CurveSubMesh>();\n\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic subGeometry:CurveSubGeometry;\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tCurveSubMesh._available.push(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<LineSubMesh> = new Array<LineSubMesh>();\n\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic subGeometry:LineSubGeometry;\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tLineSubMesh._available.push(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\t\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_INDICES, this._pIndices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_INDICES, this._pIndices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tpublic _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parentMesh.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this.parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic parentMesh:Mesh;\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this.parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.parentMesh = parentMesh;\n\t\tthis.style = style;\n\t\tthis.material = material;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.style = null;\n\t\tthis.parentMesh = null;\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this.parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<TriangleSubMesh> = new Array<TriangleSubMesh>();\n\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic subGeometry:TriangleSubGeometry;\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tTriangleSubMesh._available.push(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i].clear();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:RenderOwnerEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:RenderOwnerEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:RenderOwnerEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tvar rect:Rectangle = sampler.imageRect || image.rect;\n\t\t\tthis._billboardWidth = rect.width;\n\t\t\tthis._billboardHeight = rect.height;\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateRenderOwner();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\tprivate _style:Style;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh.invalidateGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i) {\n\t\t\t\tthis._subMeshes[i].clear();\n\t\t\t\tthis._subMeshes[i].dispose();\n\t\t\t}\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateRenderOwners();\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tif (this.isAsset(Mesh))\n\t\t\tnewInstance.geometry = this._geometry;\n\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.clear();\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subMesh:ISubMesh = SubMeshPool.getNewSubMesh(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateGeometry();\n\t}\n\n\n\tpublic _iInvalidateRenderOwners()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateRenderOwner();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i].clear();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateRenderOwners();\n\t}\n}\n\nexport = Mesh;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:AssetEvent;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.disposeValues();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public disposeValues()\n    {\n        super.disposeValues();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public clear()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            } else {\n                instance.clear();\n            }\n        }\n\n        super.clear();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone.transform.matrix3D = this.transform.matrix3D\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GeometryEvent\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nclass RenderOwnerEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderOwnerEvent\n\t{\n\t\treturn new RenderOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderOwnerEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderableOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderableOwner\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_GEOMETRY:string = \"invalidateGeometry\";\n\n\tprivate _renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderableOwner:IRenderableOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderableOwner():IRenderableOwner\n\t{\n\t\treturn this._renderableOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableOwnerEvent\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderableOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryEvent\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.TextureEvent\n* @see away3d.core.base.Geometry\n*/\nclass TextureEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new TextureEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TextureEvent\n\t{\n\t\treturn new TextureEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = TextureEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner> = new Array<IRenderableOwner>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateRenderOwners()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\tthis.invalidateRenderOwners();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static getNewSubMesh(subGeometry:SubGeometryBase, parentMesh:Mesh, material:MaterialBase = null):ISubMesh\n\t{\n\t\tvar subMeshClass:ISubMeshClass = SubMeshPool.classPool[subGeometry.assetType];\n\n\t\tif (!subMeshClass._available.length)\n\t\t\treturn new subMeshClass(subGeometry, parentMesh, material);\n\n\t\tvar newSubMesh:ISubMesh = subMeshClass._available.pop();\n\n\t\tnewSubMesh.subGeometry = subGeometry;\n\t\tnewSubMesh.parentMesh = parentMesh;\n\t\tnewSubMesh.material = material;\n\n\t\treturn newSubMesh;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass, assetClass:IAssetClass)\n\t{\n\t\tSubMeshPool.classPool[assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh, LineSubGeometry);\n\t\tSubMeshPool.registerClass(TriangleSubMesh, TriangleSubGeometry);\n\t\tSubMeshPool.registerClass(CurveSubMesh, CurveSubGeometry);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\"\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
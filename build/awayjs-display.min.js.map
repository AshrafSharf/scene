{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "box",
    "min",
    "ceil",
    "sqrt",
    "width",
    "height",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "positions",
    "posDim",
    "dimensions",
    "k",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "numVertices",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "child_depths",
    "getChildDepths",
    "sessionID_depths",
    "end_index",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "targetFrame_first_sessionID",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "key",
    "parseInt",
    "addChildAtDepth",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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YAAY,aAAe,OAChC11E,MAAK01E,YAAY,iBAAmB,KACpC11E,MAAK01E,YAAY,QAAU,KAC3B11E,MAAK01E,YAAY,QAAU,KAC3B11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,cAAgB,OACjC11E,MAAK01E,YAAY,oBAAsB,OACvC11E,MAAK01E,YAAY,gBAAkB,OACnC11E,MAAK01E,YAAY,kBAAoB,OACrC11E,MAAK01E,YAAY,YAAc,OAC/B11E,MAAK01E,YAAY,aAAe,KAChC11E,MAAK01E,YAAY,SAAW,KAC5B11E,MAAK01E,YAAY,eAAiB,OAClC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,QAAU,KAC3B11E,MAAK01E,YAAY,cAAgB,OACjC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,cAAgB,OACjC11E,MAAK01E,YAAY,eAAiB,KAClC11E,MAAK01E,YAAY,qBAAuB,KACxC11E,MAAK01E,YAAY,kBAAoB,OACrC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,SAAW,OAC5B11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,iBAAmB,QACpC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,QAAU,QAC3B11E,MAAK01E,YAAY,UAAY,QAC7B11E,MAAK01E,YAAY,SAAW,QAC5B11E,MAAK01E,YAAY,iBAAmB,QACpC11E;KAAK01E,YAAY,kBAAoB,QACrC11E,MAAK01E,YAAY,YAAc,QAC/B11E,MAAK01E,YAAY,SAAW,QAC5B11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,OAAS,QAC1B11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,UAAY,QAC7B11E,MAAK01E,YAAY,eAAiB,OAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,QAAU,QA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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate miny:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\n\tprivate buildGrid(box:Box):void\n\t{\n\t\tthis.minx = box.x;\n\t\tthis.miny = box.y;\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tthis.devisions = Math.min(Math.ceil(Math.sqrt(this._numVertices)), 32);\n\n\t\tthis.conversionX = this.devisions/box.width;\n\t\tthis.conversionY = this.devisions/box.height;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(this.devisions * this.devisions);\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - this.minx)*this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - this.miny)*this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - this.minx)*this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - this.miny)*this.conversionY);\n\n\n\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\tvar index:number = i + j*this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index] || (this.cells[index] = new Array<number>());\n\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (this.numVertices > 150) {\n\n\t\t\tif (this.cells == null)\n\t\t\t\tthis.buildGrid(box);\n\n\t\t\tvar cell:number = this.getCell(x, y);\n\n\t\t\tif (cell == -1)\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < this._numVertices; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (this._inheritColorTransform && this._pParent) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = !this._maskMode;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds():Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar child_depths = target_mc.getChildDepths();\n\t\tvar sessionID_depths:Object = {};\n\t\tvar i:number;\n\t\tvar end_index:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\t\tvar depth:number;\n\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc._children[i];\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\tsessionID_depths[child._depthID] = child._sessionID;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar targetFrame_first_sessionID:number=0;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\t\t\tvar start_index:number;\n\t\t\tvar idx:number;\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\n\t\t\t\t\tdelete child_depths[depth];\n\t\t\t\t\tdelete sessionID_depths[depth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\n\t\t\t\t\tidx = i*2;\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\n\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\n\t\t\t\t\tchild_depths[depth] = target;\n\t\t\t\t\tsessionID_depths[depth] = i;\n\t\t\t\t}\n\t\t\t\tif(k==target_keyframe_idx){\n\t\t\t\t\ttargetFrame_first_sessionID=start_index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tdepth = child._depthID;\n\t\t\tif (sessionID_depths[depth] == child._sessionID)\n\t\t\t\tdelete sessionID_depths[depth];\n\t\t\telse\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t}\n\n\t\t// we need to addchild the objects that was added befor targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\n\t\tfor (var key in sessionID_depths) {\n\t\t\tif(parseInt(key)<targetFrame_first_sessionID){\n\t\t\t\tchild = child_depths[key];\n\t\t\t\tchild._sessionID = sessionID_depths[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\t\tfor (var key in sessionID_depths) {\n\t\t\tif(parseInt(key)>=targetFrame_first_sessionID) {\n\t\t\t\tchild = child_depths[key];\n\t\t\t\tchild._sessionID = sessionID_depths[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 201:\n\t\t\t\t\t\t\ttarget.masks = null;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _active_depths:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._active_depths[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this._active_depths[depth];\n\t}\n\n\tpublic getChildDepths():Object\n\t{\n\t\treturn this._active_depths;\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\t//check to make sure _active_depths wasn't modified with a new child\n\t\tif (this._active_depths[child._depthID] == this)\n\t\t\tdelete this._active_depths[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._active_depths[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._active_depths[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\t(this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.geometry = this._geometry;\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\n\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0, box))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n\n    private _isPlaying:boolean;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Object;\n    private _active_session_ids:Object;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._active_session_ids = {};\n        this._potentialInstances = {};\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number;\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        if (this._currentFrameIndex == value)\n            return;\n\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n\n            var skip_script:boolean = false;\n\n            if (value < 0) {\n                value = 0;\n            } else if (value >= this._timeline.numFrames) {\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n        }\n\n        this._currentFrameIndex = value;\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._active_session_ids[sessionID];\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        super.addChildAtDepth(child, depth, true);\n\n        this._active_session_ids[child._sessionID] = child;\n\n        return child;\n    }\n\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject = super.removeChildAtInternal(index);\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        delete this._active_session_ids[child._sessionID];\n\n        child._sessionID = -1;\n\n        return child;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n\n    public iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != this._timeline.numFrames - 1 || this.loop)) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else { // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n        }\n\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len:number = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\n\t\t\t\tvar line_width:number = 0;\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar font_chars_scale:Array<number> =[];\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\tif(this_char == null) {\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\n\t\t\t\t}\n\t\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t\t}\n\t\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\n\t\t\t\t}\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\t\tchar_scale = font_chars_scale[i];\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
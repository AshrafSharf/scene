{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-display/lib/animators/nodes/animationnodebase.ts","awayjs-display/lib/base/alignmentmode.ts","awayjs-display/lib/base/blendmode.ts","awayjs-display/lib/base/capsstyle.ts","awayjs-display/lib/base/displayobject.ts","awayjs-display/lib/base/geometry.ts","awayjs-display/lib/base/gradienttype.ts","awayjs-display/lib/base/graphicspathwinding.ts","awayjs-display/lib/base/graphics.ts","awayjs-display/lib/base/interpolationmethod.ts","awayjs-display/lib/base/jointstyle.ts","awayjs-display/lib/base/lightbase.ts","awayjs-display/lib/base/linescalemode.ts","awayjs-display/lib/base/linesubgeometry.ts","awayjs-display/lib/base/linesubmesh.ts","awayjs-display/lib/base/loaderinfo.ts","awayjs-display/lib/base/orientationmode.ts","awayjs-display/lib/base/pixelsnapping.ts","awayjs-display/lib/base/spreadmethod.ts","awayjs-display/lib/base/subgeometrybase.ts","awayjs-display/lib/base/submeshbase.ts","awayjs-display/lib/base/transform.ts","awayjs-display/lib/base/triangleculling.ts","awayjs-display/lib/base/trianglesubgeometry.ts","awayjs-display/lib/base/trianglesubmesh.ts","awayjs-display/lib/containers/displayobjectcontainer.ts","awayjs-display/lib/containers/loader.ts","awayjs-display/lib/containers/scene.ts","awayjs-display/lib/containers/view.ts","awayjs-display/lib/controllers/controllerbase.ts","awayjs-display/lib/controllers/firstpersoncontroller.ts","awayjs-display/lib/controllers/followcontroller.ts","awayjs-display/lib/controllers/hovercontroller.ts","awayjs-display/lib/controllers/lookatcontroller.ts","awayjs-display/lib/controllers/springcontroller.ts","awayjs-display/lib/display/contextmode.ts","awayjs-display/lib/entities/billboard.ts","awayjs-display/lib/entities/camera.ts","awayjs-display/lib/entities/directionallight.ts","awayjs-display/lib/entities/lightprobe.ts","awayjs-display/lib/entities/linesegment.ts","awayjs-display/lib/entities/mesh.ts","awayjs-display/lib/entities/pointlight.ts","awayjs-display/lib/entities/shape.ts","awayjs-display/lib/entities/skybox.ts","awayjs-display/lib/entities/textfield.ts","awayjs-display/lib/errors/casterror.ts","awayjs-display/lib/events/cameraevent.ts","awayjs-display/lib/events/displayobjectevent.ts","awayjs-display/lib/events/geometryevent.ts","awayjs-display/lib/events/lightevent.ts","awayjs-display/lib/events/materialevent.ts","awayjs-display/lib/events/mouseevent.ts","awayjs-display/lib/events/rendererevent.ts","awayjs-display/lib/events/resizeevent.ts","awayjs-display/lib/events/sceneevent.ts","awayjs-display/lib/events/stageevent.ts","awayjs-display/lib/events/subgeometryevent.ts","awayjs-display/lib/managers/mousemanager.ts","awayjs-display/lib/materials/cssmaterialbase.ts","awayjs-display/lib/materials/lightsources.ts","awayjs-display/lib/materials/materialbase.ts","awayjs-display/lib/materials/lightpickers/lightpickerbase.ts","awayjs-display/lib/materials/lightpickers/staticlightpicker.ts","awayjs-display/lib/materials/shadowmappers/cascadeshadowmapper.ts","awayjs-display/lib/materials/shadowmappers/cubemapshadowmapper.ts","awayjs-display/lib/materials/shadowmappers/directionalshadowmapper.ts","awayjs-display/lib/materials/shadowmappers/neardirectionalshadowmapper.ts","awayjs-display/lib/materials/shadowmappers/shadowmapperbase.ts","awayjs-display/lib/partition/cameranode.ts","awayjs-display/lib/partition/directionallightnode.ts","awayjs-display/lib/partition/entitynode.ts","awayjs-display/lib/partition/lightprobenode.ts","awayjs-display/lib/partition/nodebase.ts","awayjs-display/lib/partition/nullnode.ts","awayjs-display/lib/partition/partition.ts","awayjs-display/lib/partition/pointlightnode.ts","awayjs-display/lib/partition/skyboxnode.ts","awayjs-display/lib/pick/pickingcollisionvo.ts","awayjs-display/lib/pick/raycastpicker.ts","awayjs-display/lib/pool/cssbillboardrenderable.ts","awayjs-display/lib/pool/csslinesegmentrenderable.ts","awayjs-display/lib/pool/cssrenderablebase.ts","awayjs-display/lib/pool/cssskyboxrenderable.ts","awayjs-display/lib/pool/entitylistitempool.ts","awayjs-display/lib/pool/entitylistitem.ts","awayjs-display/lib/pool/renderablepool.ts","awayjs-display/lib/prefabs/prefabbase.ts","awayjs-display/lib/prefabs/primitivecapsuleprefab.ts","awayjs-display/lib/prefabs/primitiveconeprefab.ts","awayjs-display/lib/prefabs/primitivecubeprefab.ts","awayjs-display/lib/prefabs/primitivecylinderprefab.ts","awayjs-display/lib/prefabs/primitiveplaneprefab.ts","awayjs-display/lib/prefabs/primitivepolygonprefab.ts","awayjs-display/lib/prefabs/primitiveprefabbase.ts","awayjs-display/lib/prefabs/primitivesphereprefab.ts","awayjs-display/lib/prefabs/primitivetorusprefab.ts","awayjs-display/lib/render/cssdefaultrenderer.ts","awayjs-display/lib/render/cssrendererbase.ts","awayjs-display/lib/sort/renderablemergesort.ts","awayjs-display/lib/text/antialiastype.ts","awayjs-display/lib/text/gridfittype.ts","awayjs-display/lib/text/textfieldautosize.ts","awayjs-display/lib/text/textfieldtype.ts","awayjs-display/lib/text/textformatalign.ts","awayjs-display/lib/text/textformat.ts","awayjs-display/lib/text/textinteractionmode.ts","awayjs-display/lib/text/textlinemetrics.ts","awayjs-display/lib/traverse/cssentitycollector.ts","awayjs-display/lib/traverse/collectorbase.ts","awayjs-display/lib/traverse/entitycollector.ts","awayjs-display/lib/traverse/raycastcollector.ts","awayjs-display/lib/traverse/shadowcastercollector.ts","awayjs-display/lib/utils/cast.ts"],"names":[],"mappings":"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","file":"awayjs-display.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;","/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;","/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;","/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;","import AxisAlignedBoundingBox\t= require(\"awayjs-core/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport BlendMode\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport LoaderInfo\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToStage     Dispatched when a display object is added to the on\n *                         stage display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromStage Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Stage\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Stage.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tprivate _boundsVisible:boolean;\n\tprivate _depth:number;\n\tprivate _height:number;\n\tprivate _width:number;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\tprivate _partitionNode:EntityNode;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _pBounds:BoundingVolumeBase;\n\tpublic _pBoundsInvalid:boolean = true;\n\tprivate _worldBounds:BoundingVolumeBase;\n\tprivate _worldBoundsInvalid:boolean = true;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._pBounds;\n\t}\n\n\tpublic set bounds(value:BoundingVolumeBase)\n\t{\n\t\tif (this._pBounds == value)\n\t\t\treturn;\n\n\t\tthis._pBounds = value;\n\n\t\tthis._worldBounds = value.clone();\n\n\t\tthis.pInvalidateBounds();\n\n\t\tif (this._boundsVisible)\n\t\t\tthis._partitionNode._iUpdateEntityBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth == val;\n\n\t\tthis._pScaleZ = val/this.bounds.aabb.depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._height;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height == val;\n\n\t\tthis._pScaleY = val/this.bounds.aabb.height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tif (this._pScene && this._explicitPartition)\n\t\t\tthis._pScene.iUnregisterPartition(this._explicitPartition);\n\n\t\tthis._explicitPartition = value;\n\n\t\tif (this._pScene && value)\n\t\t\tthis._pScene.iRegisterPartition(value);\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partitionNode():EntityNode\n\t{\n\t\tif (!this._partitionNode)\n\t\t\tthis._partitionNode = this.pCreateEntityPartitionNode();\n\n\t\treturn this._partitionNode;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Stage object is the Stage object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._boundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (value == this._boundsVisible)\n\t\t\treturn;\n\n\t\tthis._boundsVisible = value;\n\n\t\tthis._partitionNode.boundsVisible = value;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._width;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width == val;\n\n\t\tthis._pScaleX = val/this.bounds.aabb.width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get worldBounds():BoundingVolumeBase\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the bounds of the entity, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._worldBoundsInvalid) {\n\t\t\tthis._worldBoundsInvalid = false;\n\t\t\tthis._worldBounds.transformFrom(this.bounds, this.sceneTransform);\n\t\t}\n\n\t\treturn this._worldBounds;\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);//_transformComponents = new Vector.<Vector3D>(3, true);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\tthis._pBounds = this.pCreateDefaultBoundingVolume();\n\n\t\tthis._worldBounds = this.pCreateDefaultBoundingVolume();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Stage coordinates, or Stage coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Stage(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Stage.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Stage(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The x\n\t * and y values that you assign to the Point object represent global\n\t * coordinates because they are relative to the origin(0,0) of the main\n\t * display area. Then pass the Point object to the\n\t * <code>globalToLocal3D()</code> method as the <code>point</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A two dimensional Point object representing global x and y\n\t *              coordinates.\n\t * @return A Vector3D object with coordinates relative to the\n\t *         three-dimensional display object.\n\t */\n\tpublic globalToLocal3D(point:Point):Vector3D\n\t{\n\t\treturn new Vector3D(); //TODO\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Stage, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Stage).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tvar localRayPosition:Vector3D = this.inverseSceneTransform.transformVector(rayPosition);\n\t\tvar localRayDirection:Vector3D = this.inverseSceneTransform.deltaTransformVector(rayDirection);\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._iPickingCollisionVO;\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(localRayPosition, localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.localRayPosition = localRayPosition;\n\t\tpickingCollisionVO.localRayDirection = localRayDirection;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a two-dimensional point in the Stage\n\t * (global) coordinates.\n\t *\n\t * <p>For example, you can only use two-dimensional coordinates(x,y) to draw\n\t * with the <code>display.Graphics</code> methods. To draw a\n\t * three-dimensional object, you need to map the three-dimensional\n\t * coordinates of a display object to two-dimensional coordinates. First,\n\t * create an instance of the Vector3D class that holds the x-, y-, and z-\n\t * coordinates of the three-dimensional display object. Then pass the\n\t * Vector3D object to the <code>local3DToGlobal()</code> method as the\n\t * <code>point3d</code> parameter. The method returns a two-dimensional Point\n\t * object that can be used with the Graphics API to draw the\n\t * three-dimensional object.</p>\n\t *\n\t * @param point3d A Vector3D object containing either a three-dimensional\n\t *                point or the coordinates of the three-dimensional display\n\t *                object.\n\t * @return A two-dimensional point representing a three-dimensional point in\n\t *         two-dimensional space.\n\t */\n\tpublic local3DToGlobal(point3d:Vector3D):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Stage(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Stage(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Stage instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Stage.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition);\n\t\t\tthis._iSetScene(value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null);\n\n\t\t\tthis._iSetScene(null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t// point lights should be using sphere bounds\n\t\t// directional lights should be using null bounds\n\t\treturn new AxisAlignedBoundingBox();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tthis._pBoundsInvalid = true;\n\t\tthis._worldBoundsInvalid = true;\n\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tthis._worldBoundsInvalid = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._width = this._pBounds.aabb.width*this._pScaleX;\n\t\tthis._height = this._pBounds.aabb.height*this._pScaleY;\n\t\tthis._depth = this._pBounds.aabb.depth*this._pScaleZ;\n\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\t// test to see if we're switching roots while we're already using a scene partition\n\t\t/*\n\t\tif (value == null)\n\t\t\tthis._oldScene = this._pScene;\n\n\t\tif (this._explicitPartition && this._oldScene && this._oldScene != this._pScene)\n\t\t\tthis.partition = null;\n\n\t\tif (value)\n\t\t\tthis._oldScene = null;\n\n\t\t// end of stupid partition test code\n\t\t//*/\n\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateScene(value);\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tif (this._pScene) {\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\t\t//unregister entity from current scene\n\t\t\tthis._pScene.iUnregisterEntity(this);\n\t\t}\n\n\t\tthis._pScene = value;\n\n\t\tif (value) {\n\t\t\tvalue.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\t\t//register entity with new scene\n\t\t\tvalue.iRegisterEntity(this);\n\t\t}\n\n\t\tthis.notifySceneChange();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (this._listenToSceneChanged) {\n\t\t\tif (!this._scenechanged)\n\t\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\t\tthis.dispatchEvent(this._scenechanged);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePartition()\n\t{\n\t\tif (this._iAssignedPartition)\n\t\t\tthis._iAssignedPartition.iMarkForUpdate(this);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n}\n\nexport = DisplayObject;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends NamedAssetBase implements IAsset\n{\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.GEOMETRY;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\tpublic getSubGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;","/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;","/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;","/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;","/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;","/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;","import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\n\t\tthis._pSubMeshClass = LineSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;","import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;","class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;","/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;","/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends NamedAssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSubMeshClass:ISubMeshClass;\n\n\tpublic get subMeshClass():ISubMeshClass\n\t{\n\t\treturn this._pSubMeshClass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport IAnimator\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;","import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n","/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = TriangleSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tsuper._pUpdateScene(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateScene(value);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;","import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;","import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = new Partition(new NodeBase());\n\t}\n\n\tpublic traversePartitions(traverser:ICollector)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\twhile (i < len) {\n\t\t\tthis._iCollectionMark++;\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t\t}\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iRegisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iMarkForUpdate(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iUnregisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iRemoveEntity(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:ICollector;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this.scene.partition;\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():ICollector\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pTargetObject._iAssignedPartition && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iAssignedPartition.iMarkForUpdate(this._pTargetObject);\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;","import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;","class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n}\n\nexport = ContextMode;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(0, 0, 0, this._billboardWidth, this._billboardHeight, 0);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pBoundsInvalid = true;\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyBillboard(this);\n\t}\n}\n\nexport = Billboard;","import BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new CameraNode(this);\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t\tthis._pBounds.nullify();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t/**\n\t *\n\t * @returns {away.bounds.NullBounds}\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//directional lights are to be considered global, hence always in view\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new DirectionalLightNode(this);\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(bounds.aabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = DirectionalLight;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new LightProbeNode(this);\n\t}\n\n\t//@override\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t//@override\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = LightProbe;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(this._startPosition.x, this._startPosition.y, this._startPosition.z, this._endPosition.x, this._endPosition.y, this._endPosition.z);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = LineSegment;","﻿import UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.bounds = this.bounds.clone();\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tvar i:number, j:number, p:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tj = numSubGeoms;\n\t\t\twhile (j--) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\ti = boundingPositions.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBounds.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t\t} else {\n\t\t\tthis._pBounds.fromExtremes(0, 0, 0, 0, 0, 0);\n\t\t}\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n}\n\nexport = Mesh;","import BoundingSphere\t\t\t\t= require(\"awayjs-core/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis.pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new PointLightNode(this);\n\t}\n\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromSphere(new Vector3D(), this._pFallOff);\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//point lights are culled based on their falloff radius\n\t\treturn new BoundingSphere();\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = bounds.aabb;\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = PointLight;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(material:MaterialBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\t}\n\n/**\n * The material with which to render the Skybox.\n */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material)\n\t\t\tthis._material.iRemoveOwner(<IMaterialOwner> this);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tthis._material.iAddOwner(<IMaterialOwner> this);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\t// dead end\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():SkyboxNode\n\t{\n\t\treturn new SkyboxNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn <BoundingVolumeBase> new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\n\t}\n}\n\nexport = Skybox;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends DisplayObject\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\n\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The material owner inside which the event took place.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.materialOwner = this.materialOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass StageEvent extends Event\n{\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = StageEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.materialOwner = collider.materialOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;","/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IStage\t\t\t\t\t\t= require(\"awayjs-display/lib/base/IStage\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IMaterialData\t\t\t\t= require(\"awayjs-display/lib/pool/IMaterialData\");\nimport IMaterialPassData\t\t\t= require(\"awayjs-display/lib/pool/IMaterialPassData\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IAsset\n{\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _materialPassData:Array<IMaterialPassData> = new Array<IMaterialPassData>();\n\tprivate _materialData:Array<IMaterialData> = new Array<IMaterialData>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pScreenPassesInvalid:boolean = true;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IMaterialOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _numPasses:number = 0;\n\tprivate _passes:Array<IMaterialPass>;\n\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IMaterialOwner>();\n\t\tthis._passes = new Array<IMaterialPass>();\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tthis._pClearScreenPasses();\n\n\t\tlen = this._materialData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialData[i].dispose();\n\n\t\tthis._materialData = new Array<IMaterialData>();\n\n\t\tlen = this._materialPassData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].dispose();\n\n\t\tthis._materialPassData = new Array<IMaterialPassData>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t * Sets the render state for a pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param pass The pass data to activate.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivatePass(pass:IMaterialPassData, renderer:IRenderer, camera:Camera) // ARCANE\n\t{\n\t\tpass.materialPass._iActivate(pass, renderer, camera);\n\t}\n\n\t/**\n\t * Clears the render state for a pass. This needs to be called before activating another pass.\n\t * @param pass The pass to deactivate.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @internal\n\t */\n\tpublic _iDeactivatePass(pass:IMaterialPassData, renderer:IRenderer) // ARCANE\n\t{\n\t\tpass.materialPass._iDeactivate(pass, renderer);\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling renderPass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRenderPass(pass:IMaterialPassData, renderable:IRenderable, stage:IStage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.collectLights(renderable);\n\n\t\tpass.materialPass._iRender(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IMaterialOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IMaterialOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes an IMaterialOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\t}\n\n\t/**\n\t * A list of the IMaterialOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IMaterialOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * The amount of passes used by the material.\n\t *\n\t * @private\n\t */\n\tpublic _iNumScreenPasses():number\n\t{\n\t\treturn this._numPasses;\n\t}\n\n\t/**\n\t * A list of the screen passes used in this material\n\t *\n\t * @private\n\t */\n\tpublic get _iScreenPasses():Array<IMaterialPass>\n\t{\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\t/**\n\t * Flags that the screen passes have become invalid and need possible re-ordering / adding / deleting\n\t */\n\tpublic _pInvalidateScreenPasses()\n\t{\n\t\tthis._pScreenPassesInvalid = true;\n\t}\n\n\t/**\n\t * Removes a pass from the material.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemoveScreenPass(pass:IMaterialPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\n\t\tthis._numPasses--;\n\t}\n\n\t/**\n\t * Removes all passes from the material\n\t */\n\tpublic _pClearScreenPasses()\n\t{\n\t\tfor (var i:number = 0; i < this._numPasses; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = this._numPasses = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the material\n\t * @param pass\n\t */\n\tpublic _pAddScreenPass(pass:IMaterialPass)\n\t{\n\t\tthis._passes[this._numPasses++] = pass;\n\n\t\tpass.lightPicker = this._pLightPicker;\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\tpublic _iAddMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.push(materialData);\n\n\t\treturn materialData;\n\t}\n\n\tpublic _iRemoveMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.splice(this._materialData.indexOf(materialData), 1);\n\n\t\treturn materialData;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t}\n\t\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateMaterial();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateAnimation();\n\t}\n\t\n\tprivate invalidateMaterial()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateMaterial();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(camera:IEntity)\n\t{\n\t\tsuper(camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(directionalLight:IEntity)\n\t{\n\t\tsuper(directionalLight);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\n\tprivate _entity:IEntity;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper();\n\t\tthis._entity = entity;\n\t\tthis._iNumEntities = 1;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.worldBounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.isIntersectingRay(rayPosition, rayDirection);\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t//return this._entity.bounds.boundingEntity;\n\t}\n}\n\nexport = EntityNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(lightProbe:IEntity)\n\t{\n\t\tsuper(lightProbe);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _boundsChildrenVisible:boolean;\n\tprivate _explicitBoundsVisible:boolean;\n\tprivate _implicitBoundsVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\tpublic _pBoundsPrimitive:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._explicitBoundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (this._explicitBoundsVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitBoundsVisible = value;\n\n\t\tthis._iUpdateImplicitBoundsVisible(this._iParent? this._iParent.boundsChildrenVisible : false);\n\n\t}\n\n\tpublic get boundsChildrenVisible():boolean\n\t{\n\t\treturn this._boundsChildrenVisible;\n\t}\n\n\tpublic set boundsChildrenVisible(value:boolean)\n\t{\n\t\tif (this._boundsChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._boundsChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._implicitBoundsVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._implicitBoundsVisible)\n\t\t\t\tthis._pBoundsPrimitive.partitionNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitBoundsVisible(this.boundsChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitBoundsVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitBoundsVisible(value:boolean)\n\t{\n\t\tif (this._implicitBoundsVisible == this._explicitBoundsVisible || value)\n\t\t\treturn;\n\n\t\tthis._implicitBoundsVisible = this._explicitBoundsVisible || value;\n\n\t\tthis._iUpdateEntityBounds();\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsBoundsVisible():boolean\n\t{\n\t\treturn this._implicitBoundsVisible;\n\t}\n\n//\t\tpublic _pUpdateNumEntities(value:number)\n//\t\t{\n//\t\t\tvar diff:number = value - this._pNumEntities;\n//\t\t\tvar node:NodeBase = this;\n//\n//\t\t\tdo {\n//\t\t\t\tnode._pNumEntities += diff;\n//\t\t\t} while ((node = node._iParent) != null);\n//\t\t}\n\n\tpublic _iUpdateEntityBounds()\n\t{\n\t\tif (this._pBoundsPrimitive) {\n\t\t\tthis._pBoundsPrimitive.dispose();\n\t\t\tthis._pBoundsPrimitive = null;\n\t\t}\n\n\t\tif (this._implicitBoundsVisible)\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\t}\n}\n\nexport = NodeBase;","/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:ICollector)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n}\n\nexport = Partition;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pointLight:IEntity)\n\t{\n\t\tsuper(pointLight);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(skyBox:IEntity)\n\t{\n\t\tsuper(skyBox);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:ICollector):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? new Vector3D() : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:RenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.material.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;","import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderableClass\");\n\n/**\n * @class away.pool.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _pools:Object = new Object();\n\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(materialOwner:IMaterialOwner):IRenderable\n\t{\n\t\treturn <IRenderable> (this._pool[materialOwner.id] || (this._pool[materialOwner.id] = materialOwner._iAddRenderable(new this._renderableClass(this, materialOwner))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialOwner:IMaterialOwner)\n\t{\n\t\tmaterialOwner._iRemoveRenderable(this._pool[materialOwner.id]);\n\n\t\tthis._pool[materialOwner.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderablePool\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass):RenderablePool\n\t{\n\t\tvar pool:RenderablePool = RenderablePool._pools[renderableClass.id];\n\n\t\tif (pool != undefined)\n\t\t\treturn pool;\n\n\t\treturn <RenderablePool> (RenderablePool._pools[renderableClass.id] = new RenderablePool(renderableClass));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tpublic static disposePool(renderableClass:any)\n\t{\n\t\tif (RenderablePool._pools[renderableClass.id])\n\t\t\tRenderablePool._pools[renderableClass.id] = undefined;\n\t}\n}\n\nexport = RenderablePool;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// central vertex\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = -1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = -1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = 1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\tthis._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _lineSegmentRenderablePool:RenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\tthis._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ICollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._renderableHead = null;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase = <CSSMaterialBase> renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;","import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on material id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.materialId;\n\t\t\t\tvar mb:number = headB.materialId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;","/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;","/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;","/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;","/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;","/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;","/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\t/**\n\t * The name of the font for text in this text format, as a string. The\n\t * default value is <code>null</code>, which means that Flash Player uses\n\t * Times New Roman font for the text.\n\t */\n\tpublic font:string;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n}\n\nexport = TextFormat;","/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;","/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;","import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase implements ICollector\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase implements ICollector\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"],"sourceRoot":"./"}
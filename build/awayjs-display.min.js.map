{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
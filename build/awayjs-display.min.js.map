{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_loaderInfo",
    "_maskMode",
    "_pUpdateImplicitMaskId",
    "_iAssignedMaskId",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "_explicitMasks",
    "maskMode",
    "_pUpdateImplicitMasks",
    "_iAssignedMasks",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_pImplicitMasks",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iMasksConfig",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "end_index",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "key",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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11E,MAAK01E,YAAY,YAAc,OAC/B11E,MAAK01E,YAAY,aAAe,KAChC11E,MAAK01E,YAAY,SAAW,KAC5B11E,MAAK01E,YAAY,eAAiB,OAClC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,QAAU,KAC3B11E,MAAK01E,YAAY,cAAgB,OACjC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,cAAgB,OACjC11E;KAAK01E,YAAY,eAAiB,KAClC11E,MAAK01E,YAAY,qBAAuB,KACxC11E,MAAK01E,YAAY,kBAAoB,OACrC11E,MAAK01E,YAAY,aAAe,OAChC11E,MAAK01E,YAAY,SAAW,OAC5B11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,iBAAmB,QACpC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,QAAU,QAC3B11E,MAAK01E,YAAY,UAAY,QAC7B11E,MAAK01E,YAAY,SAAW,QAC5B11E,MAAK01E,YAAY,iBAAmB,QACpC11E,MAAK01E,YAAY,kBAAoB,QACrC11E,MAAK01E,YAAY,YAAc,QAC/B11E,MAAK01E,YAAY,SAAW,QAC5B11E,MAAK01E,YAAY,eAAiB,QAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,OAAS,QAC1B11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,UAAY,QAC7B11E,MAAK01E,YAAY,eAAiB,OAClC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,QAAU,QAC3B11E,MAAK01E,YAAY,cAAgB,QACjC11E,MAAK01E,YAAY,WAAa,OAC9B11E,MAAK01E,YAAY,UAAY,OAC7B11E,MAAK01E,YAAY,SAAW,QAC5B11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,aAAe,QAChC11E,MAAK01E,YAAY,cAAgB,QACjC11E,MAAK01E,YAAY,UAAY,QAC7B11E,MAAK01E,YAAY,cA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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._pUpdateImplicitMaskId(this._pParent? this._pParent._iAssignedMaskId() : -1);\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\n\t\tthis._pUpdateImplicitMasks(this._pParent? this._pParent._iAssignedMasks() : null);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\n\t\t//newInstance.name = this.name;\n\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.masks = this._explicitMasks? this._explicitMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitMaskId(value._iAssignedMaskId());\n\t\t\tthis._pUpdateImplicitMasks(value._iAssignedMasks());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitMaskId(-1);\n\t\t\tthis._pUpdateImplicitMasks(null);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:PartitionBase, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tthis._pImplicitMaskId = (value != -1)? value : this._explicitMaskId;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tthis._pImplicitMasks = (value != null)? (this._explicitMasks != null)? value.concat([this._explicitMasks]) : value.concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar target_childs_dic:Object = {};\n\t\tvar target_sessionIDs_dic:Object = {};\n\t\tvar i:number;\n\t\tvar end_index:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\t\tvar depth:number;\n\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc._children[i];\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\tdepth = child._depthID;\n\t\t\t\ttarget_childs_dic[depth] = child;\n\t\t\t\ttarget_sessionIDs_dic[depth] = child._sessionID;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\t\t\tvar start_index:number;\n\t\t\tvar idx:number;\n\n\t\t\tif ((frame_recipe & 2) == 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\n\t\t\t\t\tdelete target_childs_dic[depth];\n\t\t\t\t\tdelete target_sessionIDs_dic[depth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((frame_recipe & 4) == 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\n\t\t\t\t\tidx = i*2;\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\n\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\n\t\t\t\t\ttarget_childs_dic[depth] = target;\n\t\t\t\t\ttarget_sessionIDs_dic[depth] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((frame_recipe & 8) == 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tdepth = child._depthID;\n\t\t\tif (target_sessionIDs_dic[depth] == child._sessionID)\n\t\t\t\tdelete target_childs_dic[depth];\n\t\t\telse\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t}\n\n\t\tfor (var key in target_childs_dic) {\n\t\t\tchild = target_childs_dic[key];\n\t\t\tchild._sessionID = target_sessionIDs_dic[key];\n\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1) == 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateSceneTransform();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t// mask the mc with a list of objects\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++){\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]))) {\n\t\t\t\t\t\t\t\t\tmasks[m] = mask;\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\n\t\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.masks = masks;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateSceneTransform();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 200:// displaytransform\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _active_depths:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._active_depths[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tsuper._pUpdateImplicitMaskId(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMaskId(this._pImplicitMaskId);\n\t}\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tsuper._pUpdateImplicitMasks(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMasks(this._pImplicitMasks);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:PartitionBase, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._active_depths[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._active_depths[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._active_depths[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iSetScene(this);\n\t\tthis._iIsRoot = true;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this._children[i].clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(super._hitTestPointInternal(x, y, shapeFlag, masksFlag))\n\t\t\treturn true;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\tthis._tempPoint.setTo(x,y);\n\t\tvar local:Point = this.globalToLocal(this._tempPoint);\n\n\n\t\tif(this._geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\t//early out for non-shape tests\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\n\t\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0))\n\t\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Object;\n    private _active_session_ids:Object;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._active_session_ids = {};\n        this._potentialInstances = {};\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex():number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            var skip_script:boolean=false;\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames){\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._active_session_ids[sessionID];\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        super.addChildAtDepth(child, depth, true);\n\n        this._active_session_ids[child._sessionID] = child;\n\n\n        return child;\n    }\n\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject = super.removeChildAtInternal(index);\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        delete this._active_session_ids[child._sessionID];\n\n        child._sessionID = -1;\n\n        return child;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n\n        FrameScriptManager.execute_intervals();\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop)\n                advance = false;\n\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n\n            if (advance) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else if (oldFrameIndex != this._currentFrameIndex){ // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n        }\n\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len:number = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tget textColor(){\n\t\treturn this._textColor;\n\t}\n\tset textColor(value:number){\n\t\tthis._textColor=value;\n\t\tif(this.colorTransform==null){\n\t\t\tthis.colorTransform=new ColorTransform();\n\t\t}\n\t\tthis.colorTransform.color=value;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\n\t\t\t\tvar line_width:number = 0;\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar font_chars_scale:Array<number> =[];\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\tif(this_char == null) {\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\n\t\t\t\t}\n\t\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t\t}\n\t\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\n\t\t\t\t}\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\t\tchar_scale = font_chars_scale[i];\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len:number = this.numChildren;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
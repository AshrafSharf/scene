{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "childHit",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "hit",
    "sub",
    "curve",
    "hittestMesh",
    "px",
    "py",
    "posDim",
    "curveDim",
    "curves",
    "k",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "w",
    "uu",
    "vv",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "numElements",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean = false;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = this.name;\n\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = this.name;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\t\treturn child;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag);\n\t\t\tif(childHit) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 0)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 0)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\t//thought I would need the global hit point converted into local space, but not sure how to hook it in\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tvar hit:boolean = false;\n\n\t\tif(this.geometry)\n\t\t{\n\t\t\tvar box:Box = this.getBox();\n\t\t\tif(box.left > local.x || box.right < local.x || box.top  > local.y ||  box.bottom < local.y) return false;\n\n\n\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++)\n\t\t\t{\n\t\t\t\tvar sub:SubGeometryBase = this.geometry.subGeometries[j];\n\t\t\t\tvar curve:CurveSubGeometry = <CurveSubGeometry>sub;\n\t\t\t\tif(curve) hit = this.hittestMesh(local.x, local.y, curve);\n\t\t\t\tif(hit) return true;\n\t\t\t}\n\t\t}\n\n\t\thit = super.hitTestPoint(x, y, shapeFlag);\n\t\tif(hit) return true;\n\n\t\treturn false;\n\t}\n\tprivate hittestMesh(px:number, py:number, sub:CurveSubGeometry):boolean\n\t{\n\t\tvar posDim:number = sub.positions.dimensions;\n\t\tvar curveDim:number = sub.curves.dimensions;\n\t\tvar indices:Uint16Array = sub.indices.get(sub.indices.count);\n\t\tvar positions:Float32Array = sub.positions.get(sub.positions.count);\n\t\tvar curves:Float32Array = sub.curves.get(sub.curves.count);\n\n\t\tfor(var k:number = 0; k < sub.indices.length; k+=3)\n\t\t{\n\t\t\tvar id0:number = indices[k + 2];\n\t\t\tvar id1:number = indices[k + 1];\n\t\t\tvar id2:number = indices[k + 0];\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1 * posDim];\n\t\t\tvar by:number = positions[id1 * posDim + 1];\n\t\t\tvar cx:number = positions[id2 * posDim];\n\t\t\tvar cy:number = positions[id2 * posDim + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - px;\n\t\t\tvar dy:number = ay - py;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - px;\n\t\t\tdy = by - py;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - px;\n\t\t\tdy = cy - py;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\t//check if nmot solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = px - ax;\n\t\t\t\tvar v2y:number = py - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._textFormat==null){\n\t\t\treturn;\n\t\t}\n\t\tif(this._text==\"\"){\n\t\t\treturn;\n\t\t}\n\t\tvar indices:Array<number> = new Array<number>();\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar tri_idx_offset:number=0;\n\t\tvar tri_cnt:number=0;\n\t\tvar x_offset:number=0;\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tfor (var i = 0; i < this.text.length; i++) {\n\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\n\t\t\tif(this_char!= null) {\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\ttri_cnt = 0;\n\t\t\t\t\tvar indices2:Uint16Array = this_subGeom.indices.get(this_subGeom.numElements);\n\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\n\t\t\t\t\t\tindices[k++] = indices2[v] + tri_idx_offset;\n\t\t\t\t\t\ttri_cnt++;\n\t\t\t\t\t}\n\t\t\t\t\ttri_idx_offset += tri_cnt;\n\t\t\t\t\tfor (v = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t}\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\tvar kerning_value:number=0;\n\t\t\t\t\tif(prev_char!=null){\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setIndices(indices);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n        this._iCopyToMesh(clone);\n        clone.textFormat = clone.textFormat;\n        clone.textColor = clone.textColor;\n        clone.text = clone.text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
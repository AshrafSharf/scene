{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "bitFlag",
    "dif",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "partition",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "mouseEnabled",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "child_depths",
    "getChildDepths",
    "sessionID_depths",
    "end_index",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "targetFrame_first_sessionID",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "key",
    "parseInt",
    "addChildAtDepth",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localTouchPoint",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gCAAA,SAAAjB,EAAAkB,EAAAJ,SCEMK,qDAAqD,SAASnB,EAAQkB,EAAOJ,SAE7EM,iDAAiD,SAASpB,EAAQkB,EAAOJ,SAEzEO,8CAA8C,SAASrB,EAAQkB,EAAOJ,SAEtEQ,0CAA0C,SAAStB,EAAQkB,EAAOJ,SAElES,wDAAwD,SAASvB,EAAQkB,EAAOJ,GACtF,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCdtB,IAAOG,GAASjC,EAAc,oCDoB9B,ICfMkC,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAApB,KAAAU,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cDkBJM,IClBP,WAEC,MAAOb,MAAKc,cDmBNC,WAAY,KACZC,aAAc,MCNdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDUJM,ICVP,WAEC,MAAOJ,GAAkBS,WDWnBH,WAAY,KACZC,aAAc,MCzCPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmCLf,GAAAJ,QAAlBoB,IDeNU,oCAAoCC,YAAYC,yCAAyC,SAAS9C,EAAQkB,EAAOJ,GAIpH,GEzDMiC,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEA7B,GAAuBJ,QAAdiC,OF2DHG,4CAA4C,SAASlD,EAAQkB,EAAOJ,GAC1E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GG/EtB,IAAOqB,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAIrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CHiFrC,IG1EMuD,GAAgB,SAAApB,GAASX,EAAzB+B,EAAgBpB,EAgGrB,SAhGKoB,GAgGOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EA9FC/B,MAAAgC,aAAsB,CACtBhC,MAAAiC,UAAoB,IAMpBjC,MAAAkC,eAAyB,KAEzBlC,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAoGjBpC,MAAAqC,UAAmB,EAd1BrC,MAAKsC,WAAatC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAId,GAAiB1B,KAAKuC,qBAAuB,GAAIb,EAE3J1B,MAAKyC,QAAUzC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAIb,GAAiB3B,KAAKuC,qBAAuB,GAAIZ,EAExJ3B,MAAKgC,aAAehC,KAAKsC,WAAWI,MAvFrC/B,OAAAC,eAAWkB,EAAAvB,UAAA,aH6EJM,IG7EP,WAEC,MAAOiB,GAAiBZ,WH8ElBH,WAAY,KACZC,aAAc,MG5ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,eH+EJM,IG/EP,WAEC,MAAOb,MAAKgC,cHgFNjB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,iBHiFJM,IGjFP,WAEC,MAAOb,MAAKkC,gBHkFNS,IG/EP,SAAyBC,GAExB,GAAI5C,KAAKkC,gBAAkBU,EAC1B,MAED5C,MAAKkC,eAAiBU,CAEtB,IAAIA,EACH5C,KAAKiC,UAAY,MH8EZlB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH+EJM,IG/EP,WAEC,MAAOb,MAAKmC,SHgFNpB,WAAY,KACZC,aAAc,MG3ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHiFJM,IGjFP,WAEC,MAAOb,MAAKoC,SHkFNrB,WAAY,KACZC,aAAc,MG7ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,aHmFJM,IGnFP,WAEC,MAAOb,MAAKsC,YHoFNvB,WAAY,KACZC,aAAc,MG/ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHqFJM,IGrFP,WAEC,MAAOb,MAAKyC,SHsFN1B,WAAY,KACZC,aAAc,MG/ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,OHqFJM,IGrFP,WAEC,GAAIb,KAAKiC,UACRjC,KAAK6C,OAAO7C,KAAK8C,KAElB,OAAO9C,MAAK8C,MHqFN/B,WAAY,KACZC,aAAc,MGrEdc,GAAAvB,UAAAwC,qBAAP,WAEC,MAAO/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cAazBF,GAAAvB,UAAAyC,QAAR,SAAgBC,EAAUC,GAEzB,GAAIC,GAAiBC,KAAKC,OAAOJ,EAAIjD,KAAKsD,MAAQtD,KAAKuD,YACvD,IAAIC,GAAiBJ,KAAKC,OAAOH,EAAIlD,KAAKyD,MAAQzD,KAAK0D,YAGvD,IAAGP,EAAU,GAAKA,EAAUnD,KAAKqC,WAAamB,EAAU,GAAKA,EAAUxD,KAAKqC,UAAW,OAAQ,CAE/F,OAAQc,GAAUK,EAAUxD,KAAKqC,UAE1BP,GAAAvB,UAAAoD,UAAR,WH4DO,GGxDFC,GAAyB5D,KAAK4D,UAAU/C,IAAIb,KAAKgC,aACrD,IAAI6B,GAAgB7D,KAAK4D,UAAUE,UACnC9D,MAAKsD,KAAOS,OAAOC,SACnBhE,MAAKiE,MAAQF,OAAOC,SACpBhE,MAAKyD,KAAOM,OAAOC,SACnBhE,MAAKkE,MAAQH,OAAOC,SACpB,KAAI,GAAIG,GAAW,EAAGA,EAAIP,EAAUrE,OAAQ4E,GAAG,EAC/C,CACC,GAAIlB,GAAWW,EAAUO,EACzB,IAAIjB,GAAWU,EAAUO,EAAI,EAE7B,IAAGlB,EAAIjD,KAAKsD,KAAMtD,KAAKsD,KAAOL,CAC9B,IAAGA,EAAIjD,KAAKiE,KAAMjE,KAAKiE,KAAOhB,CAC9B,IAAGC,EAAIlD,KAAKyD,KAAMzD,KAAKyD,KAAOP,CAC9B,IAAGA,EAAIlD,KAAKkE,KAAMlE,KAAKkE,KAAOhB,EAG/B,GAAIkB,GAAepE,KAAKiE,KAAOjE,KAAKsD,IACpC,IAAIe,GAAgBrE,KAAKkE,KAAOlE,KAAKyD,IH2D/B,IGvDFa,GAAsB,EAC1BtE,MAAKqC,UAAYe,KAAKmB,KAAKnB,KAAKoB,KAAKxE,KAAKyE,aAC1CzE,MAAKqC,UAAYe,KAAKsB,IAAI1E,KAAKqC,UAAWiC,EAC1C,IAAIK,GAAkB3E,KAAKqC,UAAYrC,KAAKqC,SAC5C,IAAIuC,GAAmBR,EAAMpE,KAAKqC,SAClC,IAAIwC,GAAoBR,EAAOrE,KAAKqC,SAEpCrC,MAAKuD,YAAc,EAAEqB,CACrB5E,MAAK0D,YAAc,EAAEmB,CAErB,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJtF,MAAKuF,MAAQ,GAAIC,OAAqBb,EAEtC,KAAI,GAAIR,GAAW,EAAGA,EAAInE,KAAKgC,aAAcmC,GAAG,EAAG,CAClDW,EAAMX,EAAI,CACVY,GAAMZ,EAAI,CACVa,GAAMb,EAAI,CAEVc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHmDrB,IGhDL4B,GAAcrC,KAAKsB,IAAIO,EAAIE,EAAIE,GAAIrF,KAAKsD,IAC5C,IAAIoC,GAAetC,KAAKuC,IAAIV,EAAIE,EAAIE,GAAIrF,KAAKsD,IAC7C,IAAIsC,GAAaxC,KAAKsB,IAAIQ,EAAIE,EAAIE,GAAItF,KAAKyD,IAC3C,IAAIoC,GAAgBzC,KAAKuC,IAAIT,EAAIE,EAAIE,GAAItF,KAAKyD,IAE9C,IAAIqC,GAAqB1C,KAAKC,MAAMoC,EAAOzF,KAAKuD,YAChD,IAAIwC,GAAqB3C,KAAKC,MAAMuC,EAAM5F,KAAK0D,YAE/C,IAAIsC,GAAqB5C,KAAKC,MAAMqC,EAAQ1F,KAAKuD,YACjD,IAAI0C,GAAqB7C,KAAKC,MAAMwC,EAAS7F,KAAK0D,YAGlD,KAAK,GAAI1E,GAAa8G,EAAa9G,GAAKgH,EAAahH,IACrD,CACC,IAAK,GAAIkH,GAAaH,EAAaG,GAAKD,EAAaC,IACrD,CACC,GAAIC,GAAenH,EAAIkH,EAAIlG,KAAKqC,SAChC,IAAI+D,GAAsBpG,KAAKuF,MAAMY,EACrC,IAAGC,GAAS,KACZ,CACCA,EAAQ,GAAIZ,MACZxF,MAAKuF,MAAMY,GAASC,EAGrBA,EAAMC,KAAKvB,EAAKC,EAAKC,MAKlBlD,GAAAvB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GACvC,GAAI1C,GAAgB7D,KAAK4D,UAAUE,UACnC,IAAI0C,GAAkBxG,KAAKyG,OAAO3C,UAElC,IAAIF,GAAyB5D,KAAK4D,UAAU/C,IAAIb,KAAKgC,aACrD,IAAIyE,GAAsBzG,KAAKyG,OAAO5F,IAAIb,KAAKgC,aAE/C,IAAI8C,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJ,IAAGtF,KAAKyE,YAAc,IAAI,CAGzB,GAAIzE,KAAKuF,OAAS,KAAM,CACvBvF,KAAK2D,YAEN,GAAI+C,GAAc1G,KAAKgD,QAAQC,EAAGC,EAClC,IAAIwD,IAAS,EAAG,MAAO,MAEvB,IAAIN,GAAsBpG,KAAKuF,MAAMmB,EACrC,IAAIN,GAAS,KAAM,MAAO,MAE1B,IAAIO,GAAmBP,EAAM7G,MAC7B,KAAK,GAAI4E,GAAW,EAAGA,EAAIwC,EAAWxC,GAAK,EAAG,CAC7CW,EAAMsB,EAAMjC,EACZY,GAAMqB,EAAMjC,EAAI,EAChBa,GAAMoB,EAAMjC,EAAI,EAEhBc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHqClB,IGhCR+C,GAAY3B,EAAKhC,CACrB,IAAI4D,GAAY3B,EAAKhC,CHkCT,IG/BR4D,GAAY1B,EAAKF,CACrB,IAAI6B,KAAc5B,EAAKF,EHiCX,IG7BR+B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EAAG,QAEbJ,GAAKzB,EAAKlC,CACV4D,GAAKzB,EAAKlC,CACV4D,GAAKxB,EAAKF,CACV2B,KAAO1B,EAAKF,EAEZ6B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEbJ,GAAKvB,EAAKpC,CACV4D,GAAKvB,EAAKpC,CACV4D,GAAK5B,EAAKI,CACVyB,KAAO9B,EAAKI,EAEZ2B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEb,IAAIC,GAAgBR,EAAO3B,EAAM0B,EAEjC,IAAIS,GAAU,EAAG,CAEhB,GAAIC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAarE,EAAIgC,CACrB,IAAIsC,GAAarE,EAAIgC,CAErB,IAAIsC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CH4B1B,IGxBXG,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIzH,GAAW0H,EAAKA,EAAKC,CAEzB,IAAIC,GAAYjE,EAAUkB,EAAMjB,EAAS,EACzC,IAAI5D,EAAI,GAAK4H,IAAO,EAAG,CACtB,aACM,IAAI5H,EAAI,GAAK4H,GAAM,EAAG,CAC5B,UAGF,MAAO,MAER,MAAO,OAIR,IAAI,GAAI1D,GAAW,EAAGA,EAAInE,KAAKgC,aAAcmC,GAAG,EAChD,CACCW,EAAMX,EAAI,CACVY,GAAMZ,EAAI,CACVa,GAAMb,EAAI,CAEVc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHsBrB,IGjBL+C,GAAY3B,EAAKhC,CACrB,IAAI4D,GAAY3B,EAAKhC,CHmBZ,IGhBL4D,GAAY1B,EAAKF,CACrB,IAAI6B,KAAc5B,EAAKF,EHkBd,IGdL+B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EAAG,QAEbJ,GAAKzB,EAAKlC,CACV4D,GAAKzB,EAAKlC,CACV4D,GAAKxB,EAAKF,CACV2B,KAAO1B,EAAKF,EAEZ6B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEbJ,GAAKvB,EAAKpC,CACV4D,GAAKvB,EAAKpC,CACV4D,GAAK5B,EAAKI,CACVyB,KAAO9B,EAAKI,EAEZ2B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEb,IAAIC,GAAgBR,EAAO3B,EAAM0B,EAEjC,IAAIS,GAAU,EAAG,CAEhB,GAAIC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAarE,EAAIgC,CACrB,IAAIsC,GAAarE,EAAIgC,CAErB,IAAIsC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CHa7B,IGTRG,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIzH,GAAW0H,EAAKA,EAAKC,CAEzB,IAAIC,GAAYjE,EAAUkB,EAAMjB,EAAS,EACzC,IAAI5D,EAAI,GAAK4H,IAAO,EAAG,CACtB,aACM,IAAI5H,EAAI,GAAK4H,GAAM,EAAG,CAC5B,UAGF,MAAO,MAER,MAAO,OASD/F,GAAAvB,UAAAuH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAU/H,KAAKsC,WAClB,MAED,IAAIyF,YAAkBrG,GAAkB,CACvC1B,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAAgCyF,MAC/B,IAAIA,EAAQ,CAClB/H,KAAKsC,WAAWK,IAAIoF,EAAQC,OACtB,CACNhI,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAIZ,GAAiB1B,KAAKuC,qBAG7CvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC,IAAI1C,KAAKkC,eACRlC,KAAKkI,qBAAqBlI,KAAK8C,KAEhC9C,MAAKmI,mBAELnI,MAAKkI,qBAAqBlI,KAAKsC,WAE/BtC,MAAKoI,eAAepI,KAAKsC,WAAW+F,IAAM,MASpCvG,GAAAvB,UAAA+H,UAAP,SAAiBP,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,GAAU/H,KAAKyC,QAClB,MAED,IAAIsF,YAAkBpG,GAAkB,CACvC3B,KAAKiI,sBAAsBjI,KAAKyC,QAChCzC,MAAKyC,QAA6BsF,MAC5B,IAAIA,EAAQ,CAClB/H,KAAKyC,QAAQE,IAAIoF,EAAQC,OACnB,CACNhI,KAAKiI,sBAAsBjI,KAAKyC,QAChCzC,MAAKyC,QAAU,GAAId,GAAiB3B,KAAKuC,qBAG1CvC,KAAKkI,qBAAqBlI,KAAKyC,QAE/BzC,MAAKoI,eAAepI,KAAKyC,QAAQ4F,IAAM,MAUjCvG,GAAAvB,UAAAsC,OAAP,SAAckF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKhI,KAAKkC,eAAgB,CACzB,GAAI6F,GAAU/H,KAAK8C,KAClB,MAED,IAAIiF,YAAkBpG,GAAkB,CACvC3B,KAAKiI,sBAAsBjI,KAAK8C,KAChC9C,MAAK8C,KAA0BiF,MACzB,IAAIA,EAAQ,CAClB,IAAK/H,KAAK8C,KACT9C,KAAK8C,KAAO,GAAInB,GAAiB3B,KAAKuC,oBAEvCvC,MAAK8C,KAAKH,IAAIoF,EAAQC,OAChB,IAAIhI,KAAK8C,KAAM,CACrB9C,KAAKiI,sBAAsBjI,KAAK8C,KAChC9C,MAAK8C,KAAO,IACZ,aAEK,CACN9C,KAAK8C,KAAOjB,EAAiB0G,YAAYvI,KAAKwI,UAAWxI,KAAK8C,KAAM9C,KAAKuC,oBAAqBvC,KAAKgC,cAGpGhC,KAAKkI,qBAAqBlI,KAAK8C,KAE/B9C,MAAKoI,eAAepI,KAAK8C,KAAKuF,IAAM,MAO9BvG,GAAAvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAWrB,SAChBjB,MAAKsC,WAAa,IAElBtC,MAAKyC,QAAQxB,SACbjB,MAAKyC,QAAU,IAEf,IAAIzC,KAAK8C,KAAM,CACd9C,KAAK8C,KAAK7B,SACVjB,MAAK8C,KAAO,MASPhB,GAAAvB,UAAAkI,MAAP,WAEC,GAAIA,GAAyB,GAAI3G,GAAiB9B,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBkG,QAAU,KAG/GA,GAAMC,cAAgB,KAEtB,IAAI1I,KAAK2I,QACRF,EAAMG,WAAW5I,KAAK2I,QAAQF,QAE/B,IAAIzI,KAAK6I,IACRJ,EAAM5F,OAAO7C,KAAK6I,IAAIJ,QAGvBA,GAAMC,cAAgB1I,KAAKkC,cAE3B,OAAOuG,GAGD3G,GAAAvB,UAAAuI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCnH,EAAiBoH,SAASF,EAAQC,EAAQhJ,KAAK6I,IAAK7I,KAAK6I,IAAInG,OAYvDZ,GAAAvB,UAAA2I,MAAP,SAAaA,GAEZrH,EAAiBqH,MAAMA,EAAOlJ,KAAK4D,UAAW5D,KAAKgC,cAG7CF,GAAAvB,UAAA4I,oBAAP,SAA2BC,GAE1BvH,EAAiBsH,oBAAoBC,EAAWpJ,KAAK4D,UAAW,KAAM,KAAM5D,KAAK4D,UAAUlB,OAGrFZ,GAAAvB,UAAA8I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBI,mBAAmB1J,KAAMuJ,EAAUC,EAAoBC,GAnkBjE3H,GAAAZ,UAAmB,0BAqkBlC,OAAAY,IAvkB+BF,EAykBLnC,GAAAJ,QAAjByC,IHtCN6H,8CAA8CvI,UAAUwI,8CAA8CxI,UAAUyI,0CAA0C,0CAA0CC,4CAA4C,8CAA8CC,wCAAwC,SAASxL,EAAQkB,EAAOJ,GACjW,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GIrjBtB,IAAOyB,GAAgBvD,EAAa,2CAEpC,IAAOyL,GAAWzL,EAAc,sCJgkBhC,IIljBM0L,GAAY,SAAAvJ,GAASX,EAArBkK,EAAYvJ,EA8BjB,SA9BKuJ,GA8BOC,EAA8BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1D7I,EAAApB,KAAAU,KAEAA,MAAKoK,aAAeD,CACpBnK,MAAKqK,aAAeH,CACpBlK,MAAKuJ,SAAWA,EAzBjB5I,OAAAC,eAAWqJ,EAAA1J,UAAA,aJ0jBJM,II1jBP,WAEC,MAAOoJ,GAAa/I,WJ2jBdH,WAAY,KACZC,aAAc,MItjBrBL,QAAAC,eAAWqJ,EAAA1J,UAAA,eJ4jBJM,II5jBP,WAEC,MAAOb,MAAKqK,cJ6jBNtJ,WAAY,KACZC,aAAc,MIziBdiJ,GAAA1J,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CAiK,GAAA/I,UAAmB,sBAEnB+I,GAAAK,WAAyBxI,CA0CxC,OAAAmI,IA9C2BD,EAgD3BvK,GAAsBJ,QAAb4K,IJijBNxI,2CAA2C,2CAA2C8I,sCAAsC,wCAAwCC,yCAAyC,SAASjM,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKvnBtB,IAAOoK,GAAGlM,EAAiB,2BAC3B,IAAOmM,GAAcnM,EAAc,sCACnC,IAAOoM,GAAMpM,EAAgB,8BAC7B,IAAOqM,GAAUrM,EAAe,kCAChC,IAAOsM,GAAQtM,EAAgB,gCAC/B,IAAOuM,GAAavM,EAAc,qCAClC,IAAOwM,GAAKxM,EAAgB,6BAE5B,IAAOyM,GAAQzM,EAAgB,gCAC/B,IAAOiC,GAASjC,EAAe,oCAM/B,IAAO0M,GAAsB1M,EAAY,iDACzC,IAAO2M,GAAU3M,EAAe,uCAIhC,IAAO+C,GAAa/C,EAAc,wCAElC,IAAO4M,GAAe5M,EAAc,0CAEpC,IAAO6M,GAAS7M,EAAe,oCAI/B,IAAO8M,GAAkB9M,EAAa,6CAItC,IAAO+M,GAAkB/M,EAAa,+CL0uBtC,IKlmBMgN,GAAa,SAAA7K,GAASX,EAAtBwL,EAAa7K,EAuxClB,SAvxCK6K,KAyxCJ7K,EAAApB,KAAAU,KAtxCOA,MAAAwL,cAA6B,GAAIhG,MAQjCxF,MAAAyL,kBAA4B,IAE5BzL,MAAA0L,qBAA+B,IAMhC1L,MAAA2L,iBAA4B,GAAId,EAChC7K,MAAA4L,WAAqB,KACrB5L,MAAA6L,cAAwB,KACxB7L,MAAA8L,YAAqB,CACrB9L,MAAA+L,UAAmB,KAQlB/L,MAAAgM,UAAqB,GAAInB,EAGzB7K,MAAAiM,uBAAkC,GAAIpB,EAEtC7K,MAAAkM,eAA0B,GAAIlB,EAE9BhL,MAAAmM,oBAA8B,IAC9BnM,MAAAoM,iBAA0B,CAE3BpM,MAAAqM,qBAA+B,IAC/BrM,MAAAsM,kBAA2B,CAE3BtM,MAAAuM,kBAAyC,GAAI/G,MAC5CxF,MAAAwM,sBAAgC,IACjCxM,MAAAyM,uBAAiC,IAEjCzM,MAAA0M,yBAA0C,GAAIhC,EAc7C1K,MAAA2M,WAAoB,CACpB3M,MAAA4M,WAAoB,CACpB5M,MAAA6M,WAAoB,CACpB7M,MAAA8M,QAAmB,GAAI9B,EACvBhL,MAAA+M,OAAkB,GAAIlC,EAMtB7K,MAAAgN,SAAkB,CAMlBhN,MAAAiN,OAAgB,CAChBjN,MAAAkN,OAAgB,CAChBlN,MAAAmN,OAAgB,CAChBnN,MAAAoN,QAAiB,CACjBpN,MAAAqN,QAAiB,CACjBrN,MAAAsN,QAAiB,CACjBtN,MAAAuN,GAAY,CACZvN,MAAAwN,GAAY,CACZxN,MAAAyN,GAAY,CACZzN,MAAA0N,OAAkB,GAAI1C,EACtBhL,MAAA2N,YAAuB,GAAI3C,EAC3BhL,MAAA4N,mBAA8B,GAAI/C,EAClC7K,MAAA6N,WAAqB,IAErB7N,MAAA8N,KAAgB,GAAI9C,EACpBhL,MAAA+N,KAAgB,GAAI/C,EACpBhL,MAAAgO,KAAgB,GAAIhD,EACpBhL,MAAAiO,KAAgB,GAAIjD,EAWrBhL,MAAAkO,cAAmC,GAAI1I,MACtCxF,MAAAmO,aAAiC,GAAI3I,MAIlCxF,MAAAoO,uBAAiC,KACpCpO,MAAAqO,UAAoB,KAKpBrO,MAAAsO,cAAyB,GAAItD,EA+B9BhL,MAAAuO,cAAuBjN,EAAcC,kBAmIrCvB,MAAAwO,aAAuB,IA0VvBxO,MAAAyO,gBAAyBtD,EAAgBuD,OA6qB/C1O,MAAK2O,qBAAuB,GAAInJ,OAAgB,EAEhDxF,MAAK2O,qBAAqB,GAAK3O,KAAK8N,IACpC9N,MAAK2O,qBAAqB,GAAK3O,KAAK+N,IACpC/N,MAAK2O,qBAAqB,GAAK3O,KAAKgO,IACpChO,MAAK2O,qBAAqB,GAAK3O,KAAKiO,IAGpCjO,MAAK4O,WAAa,GAAIxD,GAAUpL,KAEhCA,MAAKgM,UAAU6C,UAEf7O,MAAK+M,OAAO+B,YAAY,GAAI,EAAG,EAG/B9O,MAAK+O,YAAc7D,EAAW8D,iBAlrC/BrO,OAAAC,eAAW2K,EAAAhL,UAAA,WL6jBJM,IK7jBP,WAEC,MAAOb,MAAKiP,UL8jBNtM,IK3jBP,SAAmBC,GAElB5C,KAAKiP,SAAWrM,GL4jBV7B,WAAY,KACZC,aAAc,MK1jBlBL,QAAAC,eAAW2K,EAAAhL,UAAA,yBL6jBPM,IK7jBJ,WAEI,MAAOb,MAAKoO,wBL8jBZzL,IK3jBJ,SAAiCC,GAE7B5C,KAAKoO,uBAAyBxL,CAEpC5C,MAAKkP,kCAAkCjE,EAAuBkE,kBL2jBxDpO,WAAY,KACZC,aAAc,MK9iBrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLujBJM,IKvjBP,WAEO,MAAOb,MAAKoP,wBAAyBpP,KAAKoP,wBAAwBC,gBAAkB,GLwjBpF1M,IKrjBJ,SAAiBC,GAEnB,IAAK5C,KAAKoP,wBACTpP,KAAKsP,iBAAmB,GAAI5E,EAEvB1K,MAAKoP,wBAAwBC,gBAAkBzM,GLqjB/C7B,WAAY,KACZC,aAAc,MKthBrBL,QAAAC,eAAW2K,EAAAhL,UAAA,cL4hBJM,IK5hBP,WAEC,MAAOb,MAAK+O,aL6hBNpM,IK1hBP,SAAsBC,GAErB,GAAI5C,KAAK+O,aAAenM,EACvB,MAED5C,MAAK+O,YAAcnM,CAEnB5C,MAAKuP,oBAEL,IAAIC,GAAaxP,KAAKmO,aAAa5O,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKmO,aAAanP,GAAGyQ,gBLwhBhB1O,WAAY,KACZC,aAAc,MK5crBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLydJM,IKzdP,WAEC,MAAOb,MAAK0P,SAASC,MAAM3P,KAAK4P,QL0d1BjN,IKvdP,SAAiBkN,GAEhB,GAAI7P,KAAK8P,QAAUD,EAClB,MAED7P,MAAK8P,OAASD,CAEd7P,MAAK+P,WAAWF,EAAI7P,KAAK0P,SAASC,QLsd5B5O,WAAY,KACZC,aAAc,MKjdrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULudJM,IKvdP,WAECb,KAAK8M,QAAQ7J,EAAIjD,KAAKgQ,SACtBhQ,MAAK8M,QAAQ5J,EAAIlD,KAAKiQ,SACtBjQ,MAAK8M,QAAQvG,EAAIvG,KAAKkQ,SAEtB,OAAOlQ,MAAK8M,SLudNnK,IKpdP,SAAkBC,GAEjB5C,KAAKgQ,UAAYpN,EAAMK,CACvBjD,MAAKiQ,UAAYrN,EAAMM,CACvBlD,MAAKkQ,UAAYtN,EAAM2D,GLqdjBxF,WAAY,KACZC,aAAc,MKnXrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULgdJM,IKhdP,WAEC,MAAOb,MAAK0P,SAASrL,OAAOrE,KAAKmQ,QLid3BxN,IK9cP,SAAkBkN,GAEjB,GAAI7P,KAAKoQ,SAAWP,EACnB,MAED7P,MAAKoQ,QAAUP,CAEf7P,MAAKqQ,WAAWR,EAAI7P,KAAK0P,SAASrL,SL6c5BtD,WAAY,KACZC,aAAc,MKncrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL8cJM,IK9cP,WAEC,GAAIb,KAAKsQ,SACR,MAAOtQ,MAAKsQ,SAASC,cAAcvQ,KAEpC,OAAO,IL8cDe,WAAY,KACZC,aAAc,MKzcrBL,QAAAC,eAAW2K,EAAAhL,UAAA,yBL+cJM,IK/cP,WAEC,GAAIb,KAAKwQ,4BAA6B,CACrCxQ,KAAKiM,uBAAuBwE,SAASzQ,KAAK0Q,eAC1C1Q,MAAKiM,uBAAuB0E,QAC5B3Q,MAAKwQ,4BAA8B,MAEpC,MAAOxQ,MAAKiM,wBLgdNlL,WAAY,KACZC,aAAc,MK3crBL,QAAAC,eAAW2K,EAAAhL,UAAA,YLidJM,IKjdP,WAEC,MAAOb,MAAK4L,YLkdN7K,WAAY,KACZC,aAAc,MK7crBL,QAAAC,eAAW2K,EAAAhL,UAAA,eLmdJM,IKndP,WAEC,MAAOb,MAAK6L,eLodN9K,WAAY,KACZC,aAAc,MKrcrBL,QAAAC,eAAW2K,EAAAhL,UAAA,cLqdJM,IKrdP,WAEC,MAAOb,MAAK4Q,aLsdN7P,WAAY,KACZC,aAAc,MKnbrBL,QAAAC,eAAW2K,EAAAhL,UAAA,YLsbJM,IKtbP,WAEC,MAAOb,MAAKqO,WLubN1L,IKpbP,SAAoBC,GAEnB,GAAI5C,KAAKqO,WAAazL,EACrB,MAED5C,MAAKqO,UAAYzL,CAEjB5C,MAAKoM,gBAAkBxJ,EAAO5C,KAAKqI,IAAM,CAEzCrI,MAAK6Q,mBLkbC9P,WAAY,KACZC,aAAc,MKjarBL,QAAAC,eAAW2K,EAAAhL,UAAA,gBLobJM,IKpbP,WAEC,MAAOb,MAAKwM,uBLqbN7J,IKlbP,SAAwBC,GAEvB,GAAI5C,KAAKwM,uBAAyB5J,EACjC,MAED5C,MAAKwM,sBAAwB5J,GLkbvB7B,WAAY,KACZC,aAAc,MKxarBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULkbJM,IKlbP,WAEC,MAAOb,MAAK8Q,SLmbN/P,WAAY,KACZC,aAAc,MK1arBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULobJM,IKpbP,WAEC,MAAOb,MAAK+Q,SLqbNhQ,WAAY,KACZC,aAAc,MKzarBL,QAAAC,eAAW2K,EAAAhL,UAAA,QLsbJM,IKtbP,WAEO,MAAOb,MAAKgR,QLubZrO,IKpbJ,SAAgBC,GAEZ5C,KAAKgR,OAASpO,GLqbd7B,WAAY,KACZC,aAAc,MKharBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULibJM,IKjbP,WAEC,MAAOb,MAAKsQ,ULkbNvP,WAAY,KACZC,aAAc,MK7arBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLmbJM,IKnbP,WAEC,MAAOb,MAAKiR,oBLobNtO,IKjbP,SAAqBC,GAEpB,GAAI5C,KAAKiR,oBAAsBrO,EAC9B,MAED5C,MAAKiR,mBAAqBrO,CAE1B5C,MAAKkR,WAAWlR,KAAKmR,QAASnR,KAAKsQ,SAAUtQ,KAAKsQ,SAASc,oBAAsB,KAEjFpR,MAAKqR,cAAc,GAAI/F,GAAmBA,EAAmBgG,kBAAmBtR,QL+a1Ee,WAAY,KACZC,aAAc,MK1arBL,QAAAC,eAAW2K,EAAAhL,UAAA,mBLgbJM,IKhbP,WAEC,MAAOb,MAAKuR,mBLibN5O,IK9aP,SAA2BC,GAE1B5C,KAAKuR,kBAAoB3O,GL+anB7B,WAAY,KACZC,aAAc,MK1arBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLgbJM,IKhbP,WAEC,MAAOb,MAAK0N,QLibN/K,IK7aP,SAAiB6O,GAEhB,GAAIxR,KAAK0N,OAAOzK,GAAKuO,EAAMvO,GAAKjD,KAAK0N,OAAOxK,GAAKsO,EAAMtO,GAAKlD,KAAK0N,OAAOnH,GAAKiL,EAAMjL,EAClF,MAEDvG,MAAK0N,OAAOzK,EAAIuO,EAAMvO,CACtBjD,MAAK0N,OAAOxK,EAAIsO,EAAMtO,CACtBlD,MAAK0N,OAAOnH,EAAIiL,EAAMjL,CAEtBvG,MAAKyR,mBL4aC1Q,WAAY,KACZC,aAAc,MKhZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,QL6aJM,IK7aP,WAEC,MAAOb,MAAK0R,OL8aN3Q,WAAY,KACZC,aAAc,MK3ZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLqaJM,IKraP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAK2M,WAAW/B,EAAWiH,oBLqa5BlP,IKlaP,SAAqBkN,GAEpB,GAAI7P,KAAKgQ,WAAaH,EACrB,MAED7P,MAAK2M,WAAakD,EAAIjF,EAAWkH,kBAEjC9R,MAAK+R,sBLiaChR,WAAY,KACZC,aAAc,MKxZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLkaJM,IKlaP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAK4M,WAAWhC,EAAWiH,oBLka5BlP,IK/ZP,SAAqBkN,GAEpB,GAAI7P,KAAKiQ,WAAaJ,EACrB,MAED7P,MAAK4M,WAAaiD,EAAIjF,EAAWkH,kBAEjC9R,MAAK+R,sBL8ZChR,WAAY,KACZC,aAAc,MKrZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aL+ZJM,IK/ZP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAK6M,WAAWjC,EAAWiH,oBL+Z5BlP,IK5ZP,SAAqBkN,GAEpB,GAAI7P,KAAKkQ,WAAaL,EACrB,MAED7P,MAAK6M,WAAagD,EAAIjF,EAAWkH,kBAEjC9R,MAAK+R,sBL2ZChR,WAAY,KACZC,aAAc,MK7VrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULwWJM,IKxWP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKoN,SLwWNzK,IKrWP,SAAkBkN,GAGjB7P,KAAKgS,OAAS,IAEdhS,MAAKiS,WAAWpC,ILqWV9O,WAAY,KACZC,aAAc,MK3VrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULsWJM,IKtWP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKqN,SLsWN1K,IKnWP,SAAkBkN,GAGjB7P,KAAKoQ,QAAU,IAEfpQ,MAAKqQ,WAAWR,ILmWV9O,WAAY,KACZC,aAAc,MKxVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULoWJM,IKpWP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKsN,SLoWN3K,IKjWP,SAAkBkN,GAGjB7P,KAAK8P,OAAS,IAEd9P,MAAK+P,WAAWF,ILiWV9O,WAAY,KACZC,aAAc,MK3VrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLkWJM,IKlWP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKiN,QLkWNtK,IK/VP,SAAiBkN,GAEhB,GAAI7P,KAAKkS,OAASrC,EACjB,MAED7P,MAAKiN,OAAS4C,CAEd7P,MAAKmS,kBL8VCpR,WAAY,KACZC,aAAc,MKxVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL+VJM,IK/VP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKkN,QL+VNvK,IK5VP,SAAiBkN,GAEhB,GAAI7P,KAAKoS,OAASvC,EACjB,MAED7P,MAAKkN,OAAS2C,CAEd7P,MAAKmS,kBL2VCpR,WAAY,KACZC,aAAc,MKrVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL4VJM,IK5VP,WAEC,GAAIb,KAAK2R,eACR3R,KAAK4R,gBAEN,OAAO5R,MAAKmN,QL4VNxK,IKzVP,SAAiBkN,GAEhB,GAAI7P,KAAKqS,OAASxC,EACjB,MAED7P,MAAKmN,OAAS0C,CAEd7P,MAAKmS,kBLwVCpR,WAAY,KACZC,aAAc,MKnVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLyVJM,IKzVP,WAEC,MAAOb,MAAKmR,SL0VNpQ,WAAY,KACZC,aAAc,MKrVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,iBL2VJM,IK3VP,WAEC,GAAIb,KAAKsS,oBAAqB,CAC7B,IAAKtS,KAAK6N,YAAc7N,KAAKuO,eAAiBjN,EAAcE,YAAa,CACxExB,KAAKkM,eAAiBlM,KAAK0Q,eAAe6B,gBAAgBvS,KAAK2N,iBAEzD,CACN3N,KAAK0Q,eAAe8B,aAAa,EAAGxS,KAAKkM,gBAG1ClM,KAAKsS,oBAAsB,MAE5B,MAAOtS,MAAKkM,gBL2VNnL,WAAY,KACZC,aAAc,MKzVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,kBL4VJM,IK5VP,WAEC,GAAIb,KAAKyS,wBAA0BxH,EAAuByH,gBACzD1S,KAAK2S,uBAEN,OAAO3S,MAAK2L,kBL4VN5K,WAAY,KACZC,aAAc,MK/TrBL,QAAAC,eAAW2K,EAAAhL,UAAA,wBLqUJM,IKrUP,WAEC,MAAOb,MAAK4S,uBLsUN7R,WAAY,KACZC,aAAc,MKjUrBL,QAAAC,eAAW2K,EAAAhL,UAAA,gBLuUJM,IKvUP,WAEC,MAAOb,MAAK6S,eLwUNlQ,IKrUP,SAAwBC,GAEvB,GAAIA,GAAS5C,KAAK6S,cACjB,MAED7S,MAAK6S,cAAgBjQ,CAErB,IAAI4M,GAAaxP,KAAKmO,aAAa5O,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKmO,aAAanP,GAAG8T,aAAe9S,KAAK6S,eLoUpC9R,WAAY,KACZC,aAAc,MK5RrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLqUJM,IKrUP,WAEC,MAAOb,MAAK4O,YLsUN7N,WAAY,KACZC,aAAc,MK/TrBL,QAAAC,eAAW2K,EAAAhL,UAAA,WLuUJM,IKvUP,WAEC,MAAOb,MAAKmM,qBLwUNxJ,IKrUP,SAAmBC,GAElB,GAAI5C,KAAKmM,qBAAuBvJ,EAC/B,MAED5C,MAAKmM,oBAAsBvJ,CAE3B5C,MAAKkP,kCAAkCjE,EAAuB8H,ULoUxDhS,WAAY,KACZC,aAAc,MKlUrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLqUJM,IKrUP,WAEC,MAAOb,MAAKgT,gBLsUNrQ,IKnUP,SAAiBC,GAEhB,GAAI5C,KAAKgT,gBAAkBpQ,EAC1B,MAED5C,MAAKgT,eAAiBpQ,CAGtB,IAAIA,GAAS,MAAQA,EAAMrD,OAAQ,CAClC,GAAIiQ,GAAa5M,EAAMrD,MACvB,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/B4D,EAAM5D,GAAGiU,SAAW,KAGtBjT,KAAKkP,kCAAkCjE,EAAuBiI,QLiUxDnS,WAAY,KACZC,aAAc,MKrTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLkUJM,IKlUP,WAEC,MAAOb,MAAK0P,SAAStL,MAAMpE,KAAKmT,QLmU1BxQ,IKhUP,SAAiBkN,GAEhB,GAAI7P,KAAKgS,QAAUnC,EAClB,MAED7P,MAAKgS,OAASnC,CAEd7P,MAAKiS,WAAWpC,EAAI7P,KAAK0P,SAAStL,QL+T5BrD,WAAY,KACZC,aAAc,MKnTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KLgUJM,IKhUP,WAEC,MAAOb,MAAKuN,ILiUN5K,IK9TP,SAAakN,GAEZ,GAAI7P,KAAKuN,IAAMsC,EACd,MAED7P,MAAKuN,GAAKvN,KAAKgM,UAAUoH,QAAQ,IAAMvD,CAEvC7P,MAAKqT,sBL6TCtS,WAAY,KACZC,aAAc,MKjTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KL8TJM,IK9TP,WAEC,MAAOb,MAAKwN,IL+TN7K,IK5TP,SAAakN,GAEZ,GAAI7P,KAAKwN,IAAMqC,EACd,MAED7P,MAAKwN,GAAKxN,KAAKgM,UAAUoH,QAAQ,IAAMvD,CAEvC7P,MAAKqT,sBL2TCtS,WAAY,KACZC,aAAc,MKtSrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KL4TJM,IK5TP,WAEC,MAAOb,MAAKyN,IL6TN9K,IK1TP,SAAakN,GAEZ,GAAI7P,KAAKyN,IAAMoC,EACd,MAED7P,MAAKyN,GAAKzN,KAAKgM,UAAUoH,QAAQ,IAAMvD,CAEvC7P,MAAKqT,sBLyTCtS,WAAY,KACZC,aAAc,MKpTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,WL0TJM,IK1TP,WAEC,MAAOb,MAAKgN,UL2TNrK,IKxTP,SAAmBC,GAElB5C,KAAKgN,SAAWpK,GLyTV7B,WAAY,KACZC,aAAc,MKxRduK,GAAAhL,UAAA+S,iBAAP,SAAwBC,EAAaC,GAEpC9S,EAAAH,UAAM+S,iBAAgBhU,KAAAU,KAACuT,EAAMC,EAE7B,QAAQD,GACP,IAAKjI,GAAmBmI,iBACvBzT,KAAK0T,yBAA2B,IAChC,MACD,KAAKpI,GAAmBqI,iBACvB3T,KAAK4T,yBAA2B,IAChC,MACD,KAAKtI,GAAmBuI,aACvB7T,KAAK8T,qBAAuB,IAC5B,MACD,KAAKxI,GAAmByI,cACvB/T,KAAKgU,sBAAwB,IAC7B,MACD,KAAK1I,GAAmB2I,cACvBjU,KAAKkU,sBAAwB,IAC7B,MACD,KAAK5I,GAAmB6I,uBACvBnU,KAAKoU,+BAAiC,IACtC,QAOI7I,GAAAhL,UAAAkI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEZ,IAAKA,EACJA,EAAc,GAAI9I,EAEnB8I,GAAY7C,MAAQxR,KAAKwR,KACzB6C,GAAYC,WAAatU,KAAKsU,UAG9BD,GAAYpB,SAAWjT,KAAKqO,SAC5BgG,GAAYE,MAAQvU,KAAKgT,eAAgBhT,KAAKgT,eAAewB,SAAW,IAExE,IAAIxU,KAAKiP,SACRoF,EAAYI,QAAUzU,KAAKiP,SAASxG,MAAM4L,EAE3C,IAAIrU,KAAK4O,WAAW8F,eACnBL,EAAYjL,UAAUsL,eAAiB1U,KAAK4O,WAAW8F,eAAejM,OAEvE,OAAO4L,GAMD9I,GAAAhL,UAAAU,QAAP,WAEC,GAAIjB,KAAK2U,OACR3U,KAAK2U,OAAOC,YAAY5U,KAEzB,OAAOA,KAAKkO,cAAc3O,OACzBS,KAAKkO,cAAc,GAAGjN,UAMjBsK,GAAAhL,UAAAsU,aAAP,WAEC7U,KAAKiB,UA2BCsK,GAAAhL,UAAAuU,UAAP,SAAiBC,GAEhB,MAAO/U,MAAKgV,QAqBNzJ,GAAAhL,UAAA0U,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAO/U,MAAKgV,QAGNzJ,GAAAhL,UAAAmP,OAAP,SAAcqF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAI/U,KAAKkV,eACRlV,KAAKkV,eAAeC,YAGrB,IAAInV,KAAKyL,kBAAmB,CAC3BzL,KAAKoV,mBAGL,IAAIpV,KAAKgS,QAAU,KAClBhS,KAAKiS,WAAWjS,KAAKgS,OAAOhS,KAAKqV,YAAYjR,MAE9C,IAAIpE,KAAKoQ,SAAW,KACnBpQ,KAAKqQ,WAAWrQ,KAAKoQ,QAAQpQ,KAAKqV,YAAYhR,OAE/C,IAAIrE,KAAK8P,QAAU,KAClB9P,KAAK+P,WAAW/P,KAAK8P,OAAO9P,KAAKqV,YAAY1F,OAG/C,GAAIoF,GAAyB,MAAQA,GAAyB/U,KAC7D,MAAOA,MAAKqV,WAEb,IAAIN,GAAyB/U,KAAKsQ,SACjC,MAAOtQ,MAAKsU,WAAWgB,aAAatV,KAAKqV,iBAEzC,OAAON,GAAsBQ,sBAAsBD,aAAatV,KAAK0Q,eAAe4E,aAAatV,KAAKqV,cAGjG9J,GAAAhL,UAAAiV,UAAP,SAAiBT,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAI/U,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErB,IAAInV,KAAK0L,qBACR1L,KAAKyV,sBAEN,OAAOzV,MAAK0V,eAoBNnK,GAAAhL,UAAAoV,cAAP,SAAqBC,EAAaC,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjC7V,KAAKsO,cAAcwH,MAAMF,EAAM3S,EAAG2S,EAAM1S,EAAG,EAC3C,IAAI6S,GAAe/V,KAAKuV,sBAAsBhD,gBAAgBvS,KAAKsO,cAAetO,KAAKsO,cAEvF,KAAKuH,EACJA,EAAS,GAAI9K,EAEd8K,GAAO5S,EAAI8S,EAAI9S,CACf4S,GAAO3S,EAAI6S,EAAI7S,CAEf,OAAO2S,GAqBDtK,GAAAhL,UAAAyV,gBAAP,SAAuBC,GAEtB,MAAOjW,MAAKuV,sBAAsBhD,gBAAgB0D,GAW5C1K,GAAAhL,UAAA2V,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAIzG,QACrB,KAAI0G,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAItL,GAAMqL,EAAOnT,EAAEmT,EAAOlT,EAC9C,IAAIoT,GAAmB,GAAIvL,GAAMqL,EAAOnT,EAAEmT,EAAOlT,EAAEkT,EAAO/R,OAC1D,IAAIkS,GAAiB,GAAIxL,GAAMqL,EAAOnT,EAAEmT,EAAOhS,MAAMgS,EAAOlT,EAC5D,IAAIsT,GAAoB,GAAIzL,GAAMqL,EAAOnT,EAAEmT,EAAOhS,MAAMgS,EAAOlT,EAAEkT,EAAO/R,OAExEgS,GAAUrW,KAAK2V,cAAcQ,EAAIM,cAAcJ,GAC/CC,GAAatW,KAAK2V,cAAcQ,EAAIM,cAAcH,GAClDC,GAAWvW,KAAK2V,cAAcQ,EAAIM,cAAcF,GAChDC,GAAcxW,KAAK2V,cAAcQ,EAAIM,cAAcD,GAEnD,IAAIE,GAAU1W,KAAK0P,QACnB,KAAIgH,EAAK,MAAO,MAGhB,IAAGL,EAAQpT,GAAKyT,EAAIjR,MAAQ4Q,EAAQpT,GAAKyT,EAAIjR,MAAQ4Q,EAAQnT,GAAKwT,EAAI9Q,KAAOyQ,EAAQnT,GAAKwT,EAAI7Q,OAAQ,MAAO,KAC7G,IAAGyQ,EAAWrT,GAAKyT,EAAIjR,MAAQ6Q,EAAWrT,GAAKyT,EAAIjR,MAAQ6Q,EAAWpT,GAAKwT,EAAI9Q,KAAO0Q,EAAWpT,GAAKwT,EAAI7Q,OAAQ,MAAO,KACzH,IAAG0Q,EAAStT,GAAKyT,EAAIjR,MAAQ8Q,EAAStT,GAAKyT,EAAIjR,MAAQ8Q,EAASrT,GAAKwT,EAAI9Q,KAAO2Q,EAASrT,GAAKwT,EAAI7Q,OAAQ,MAAO,KACjH,IAAG2Q,EAAYvT,GAAKyT,EAAIjR,MAAQ+Q,EAAYvT,GAAKyT,EAAIjR,MAAQ+Q,EAAYtT,GAAKwT,EAAI9Q,KAAO4Q,EAAYtT,GAAKwT,EAAI7Q,OAAQ,MAAO,KLgQvH,IK7PF8Q,GAAaJ,EAASrT,EAAImT,EAAQnT,CACtC,IAAI0T,KAAeL,EAAStT,EAAIoT,EAAQpT,EAExC,IAAI4T,GAAaL,EAAYtT,EAAIqT,EAASrT,CAC1C,IAAI4T,KAAeN,EAAYvT,EAAIsT,EAAStT,EAE5C,IAAI8T,GAAaT,EAAWpT,EAAIsT,EAAYtT,CAC5C,IAAI8T,KAAeV,EAAWrT,EAAIuT,EAAYvT,EAE9C,IAAIgU,GAAaZ,EAAQnT,EAAIoT,EAAWpT,CACxC,IAAIgU,KAAeb,EAAQpT,EAAIqT,EAAWrT,EAE1C,IAAIkU,GAAaT,EAAIjR,KAAO4Q,EAAQpT,CACpC,IAAImU,GAAaV,EAAI9Q,IAAMyQ,EAAQnT,CACnC,IAAImU,GAAaX,EAAIjR,KAAO8Q,EAAStT,CACrC,IAAIqU,GAAaZ,EAAI9Q,IAAM2Q,EAASrT,CACpC,IAAIqU,GAAab,EAAIjR,KAAO+Q,EAAYvT,CACxC,IAAIuU,GAAad,EAAI9Q,IAAM4Q,EAAYtT,CACvC,IAAIuU,GAAaf,EAAIjR,KAAO6Q,EAAWrT,CACvC,IAAIyU,GAAahB,EAAI9Q,IAAM0Q,EAAWpT,CAEtC,IAAIyU,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAIhR,MAAQ2Q,EAAQpT,CAC1BmU,GAAMV,EAAI9Q,IAAMyQ,EAAQnT,CACxBmU,GAAMX,EAAIhR,MAAQ6Q,EAAStT,CAC3BqU,GAAMZ,EAAI9Q,IAAM2Q,EAASrT,CACzBqU,GAAMb,EAAIhR,MAAQ8Q,EAAYvT,CAC9BuU,GAAMd,EAAI9Q,IAAM4Q,EAAYtT,CAC5BuU,GAAMf,EAAIhR,MAAQ4Q,EAAWrT,CAC7ByU,GAAMhB,EAAI9Q,IAAM0Q,EAAWpT,CAE3ByU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAIjR,KAAO4Q,EAAQpT,CACzBmU,GAAMV,EAAI7Q,OAASwQ,EAAQnT,CAC3BmU,GAAMX,EAAIjR,KAAO8Q,EAAStT,CAC1BqU,GAAMZ,EAAI7Q,OAAS0Q,EAASrT,CAC5BqU,GAAMb,EAAIjR,KAAO+Q,EAAYvT,CAC7BuU,GAAMd,EAAI7Q,OAAS2Q,EAAYtT,CAC/BuU,GAAMf,EAAIjR,KAAO6Q,EAAWrT,CAC5ByU,GAAMhB,EAAI7Q,OAASyQ,EAAWpT,CAE9ByU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAIhR,MAAQ2Q,EAAQpT,CAC1BmU,GAAMV,EAAI7Q,OAASwQ,EAAQnT,CAC3BmU,GAAMX,EAAIhR,MAAQ6Q,EAAStT,CAC3BqU,GAAMZ,EAAI7Q,OAAS0Q,EAASrT,CAC5BqU,GAAMb,EAAIhR,MAAQ8Q,EAAYvT,CAC9BuU,GAAMd,EAAI7Q,OAAS2Q,EAAYtT,CAC/BuU,GAAMf,EAAIhR,MAAQ4Q,EAAWrT,CAC7ByU,GAAMhB,EAAI7Q,OAASyQ,EAAWpT,CAE9ByU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDvM,GAAAhL,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAU6U,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,MAElE,MAAO,OAGDzM,GAAAhL,UAAA0X,OAAP,WAEC,MAAOjY,MAAKoM,kBAAoB,EAS1Bb,GAAAhL,UAAA2X,OAAP,SAAcrC,EAAiBsC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAASnN,EAASwN,WAElBL,GAAOM,WAERJ,GAAQxC,EAAO6C,SAAS1Y,KAAKsU,WAAW2B,SACxCoC,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAM/Y,OAAS,IAAM,CACxB+Y,EAAMrV,EAAIkV,EAAOjV,CACjBoV,GAAMpV,EAAIiV,EAAOlV,CACjBqV,GAAM/R,EAAI,CACV+R,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMzN,EAAc8N,kBAEpBL,GAAI,GAAKD,EAAMrV,CACfsV,GAAI,GAAKD,EAAMpV,CACfqV,GAAI,GAAKD,EAAM/R,CACfgS,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMnV,CACfsV,GAAI,GAAKH,EAAMlV,CACfqV,GAAI,GAAKH,EAAM7R,CACfgS,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMpV,CACfsV,GAAI,GAAKF,EAAMnV,CACfqV,GAAI,IAAMF,EAAM9R,CAChBgS,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAIhO,EACrBgO,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjChZ,MAAKgQ,UAAY+I,EAAI9V,EAAE2H,EAAWiH,kBAClC7R,MAAKiQ,UAAY8I,EAAI7V,EAAE0H,EAAWiH,kBAClC7R,MAAKkQ,UAAY6I,EAAIxS,EAAEqE,EAAWiH,mBA0B5BtG,GAAAhL,UAAAkW,cAAP,SAAqBb,EAAaC,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjC7V,KAAKsO,cAAcwH,MAAMF,EAAM3S,EAAG2S,EAAM1S,EAAG,EAC3C,IAAI6S,GAAe/V,KAAK0Q,eAAe6B,gBAAgBvS,KAAKsO,cAAetO,KAAKsO,cAEhF,KAAKuH,EACJA,EAAS,GAAI9K,EAEd8K,GAAO5S,EAAI8S,EAAI9S,CACf4S,GAAO3S,EAAI6S,EAAI7S,CAEf,OAAO2S,GA4BDtK,GAAAhL,UAAA0Y,gBAAP,SAAuBhD,GAEtB,MAAOjW,MAAK0Q,eAAe6B,gBAAgB0D,GAWrC1K,GAAAhL,UAAA2Y,OAAP,SAActS,EAAWC,EAAWsS,GAEnC,GAAInZ,KAAKuN,IAAM3G,GAAM5G,KAAKwN,IAAM3G,GAAM7G,KAAKyN,IAAM0L,EAChD,MAEDnZ,MAAKiD,EAAI2D,CACT5G,MAAKkD,EAAI2D,CACT7G,MAAKuG,EAAI4S,EAUH5N,GAAAhL,UAAA6Y,UAAP,SAAiBxS,EAAWC,EAAWsS,GAEtC,GAAIvS,GAAM,GAAKC,GAAM,GAAKsS,GAAM,EAC/B,MAEDnZ,MAAK0N,OAAOzK,GAAK2D,CACjB5G,MAAK0N,OAAOxK,GAAK2D,CACjB7G,MAAK0N,OAAOnH,GAAK4S,CAEjBnZ,MAAKyR,kBAQClG,GAAAhL,UAAA8Y,MAAP,SAAaC,GAEZtZ,KAAKuZ,OAAOvO,EAASwO,OAAQF,GAGvB/N,GAAAhL,UAAAkZ,MAAP,WAECzZ,KAAK0Z,QAAU,IAEf,IAAG1Z,KAAKsU,WACPtU,KAAKsU,WAAWzF,UAEjB,IAAG7O,KAAKsP,iBACPtP,KAAKsP,iBAAiBqK,OAGvB3Z,MAAKuU,MAAQ,IAEbvU,MAAKiT,SAAW,MAKV1H,GAAAhL,UAAAqZ,wBAAP,SAA+BC,GAE9B,GAAI7Z,KAAKyO,iBAAmBtD,EAAgB2O,aAAc,CACzD,GAAIC,GAAwBF,EAAOnJ,eAAesI,WAClD,IAAI9P,GAAiB6Q,EAAM,EAC3BA,GAAM,GAAK/Z,KAAKga,aAChB9Q,GAAMjG,EAAIjD,KAAKmT,MACfjK,GAAMhG,EAAIlD,KAAKmQ,MACfjH,GAAM3C,EAAIvG,KAAK4P,MACf5P,MAAK4N,mBAAmBqM,UAAUF,EAGlC,KAAK/Z,KAAK6N,YAAc7N,KAAKuO,eAAiBjN,EAAcE,YAC3DxB,KAAK4N,mBAAmBsM,oBAAoBla,KAAK0N,OAAOzK,EAAEjD,KAAKmT,QAASnT,KAAK0N,OAAOxK,EAAElD,KAAKmQ,QAASnQ,KAAK0N,OAAOnH,EAAEvG,KAAK4P,OAExH,OAAO5P,MAAK4N,mBAGb,MAAO5N,MAAK0Q,eAQNnF,GAAAhL,UAAA4Z,KAAP,SAAYb,GAEXtZ,KAAKuZ,OAAOvO,EAASoP,OAAQd,GASvB/N,GAAAhL,UAAAgZ,OAAP,SAAcc,EAAef,GAE5B,GAAIT,GAAa,GAAIhO,EACrBgO,GAAEyB,gBAAgBhB,EAAOe,EAEzB,IAAItB,GAAeF,EAAEG,YAAY,EAEjChZ,MAAKgQ,WAAa+I,EAAI9V,EAAE2H,EAAWiH,kBACnC7R,MAAKiQ,WAAa8I,EAAI7V,EAAE0H,EAAWiH,kBACnC7R,MAAKkQ,WAAa6I,EAAIxS,EAAEqE,EAAWiH,mBAU7BtG,GAAAhL,UAAAga,SAAP,SAAgBtV,EAAWC,EAAW2C,GAErC7H,KAAKgQ,UAAY/K,CACjBjF,MAAKiQ,UAAY/K,CACjBlF,MAAKkQ,UAAYrI,EAMX0D,GAAAhL,UAAAia,oBAAP,SAA2BjH,EAAaC,GAEvC9S,EAAAH,UAAMia,oBAAmBlb,KAAAU,KAACuT,EAAMC,EAEhC,IAAIxT,KAAKya,iBAAiBlH,GACzB,MAED,QAAQA,GACP,IAAKjI,GAAmBmI,iBACvBzT,KAAK0T,yBAA2B,KAChC,MACD,KAAKpI,GAAmBqI,iBACvB3T,KAAK4T,yBAA2B,KAChC,MACD,KAAKtI,GAAmBuI,aACvB7T,KAAK8T,qBAAuB,KAC7B,KAAKxI,GAAmByI,cACvB/T,KAAKgU,sBAAwB,KAC7B,MACD,KAAK1I,GAAmB2I,cACvBjU,KAAKkU,sBAAwB,KAC7B,MACD,KAAK5I,GAAmB6I,uBACvBnU,KAAKoU,+BAAiC,IACtC,QAUI7I,GAAAhL,UAAAma,UAAP,SAAiBL,EAAeM,GAE/B,GAAI1X,GAAWoX,EAAKpX,EAAGC,EAAWmX,EAAKnX,EAAGqD,EAAW8T,EAAK9T,CAC1D,IAAIiJ,GAAamL,EAASvX,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAElDvG,MAAKiD,GAAKA,EAAEuM,CACZxP,MAAKkD,GAAKA,EAAEsM,CACZxP,MAAKuG,GAAKA,EAAEiJ,EASNjE,GAAAhL,UAAAqa,eAAP,SAAsBP,EAAeM,GAEpC,GAAI1X,GAAWoX,EAAKpX,EAAGC,EAAWmX,EAAKnX,EAAGqD,EAAW8T,EAAK9T,CAC1D,IAAIiJ,GAAamL,EAASvX,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAElDvG,MAAKsU,WAAW4F,mBAAmBjX,EAAEuM,EAAKtM,EAAEsM,EAAKjJ,EAAEiJ,EAEnDxP,MAAKgM,UAAUwG,aAAa,EAAGxS,KAAK8N,KAEpC9N,MAAKiD,EAAIjD,KAAK8N,KAAK7K,CACnBjD,MAAKkD,EAAIlD,KAAK8N,KAAK5K,CACnBlD,MAAKuG,EAAIvG,KAAK8N,KAAKvH,EAQbgF,GAAAhL,UAAAsa,IAAP,SAAWvB,GAEVtZ,KAAKuZ,OAAOvO,EAASwN,OAAQc,GAW9B3Y,QAAAC,eAAW2K,EAAAhL,UAAA,uBL4KJM,IK5KP,WAEC,MAAOb,MAAK8a,qBL6KN/Z,WAAY,KACZC,aAAc,MKtKrBL,QAAAC,eAAW2K,EAAAhL,UAAA,cL8KJM,IK9KP,WAEC,GAAIb,KAAK+a,eACR/a,KAAKgb,kBAEN,IAAIhb,KAAKib,YACRjb,KAAKkb,eAEN,OAAOlb,MAAKgM,WL6KNrJ,IK1KP,SAAsBkN,GAErB,IAAK,GAAI7Q,GAAW,EAAGA,EAAI,GAAIA,IAC9BgB,KAAKgM,UAAUoH,QAAQpU,GAAK6Q,EAAIuD,QAAQpU,EAEzCgB,MAAKiD,EAAI4M,EAAIuD,QAAQ,GACrBpT,MAAKkD,EAAI2M,EAAIuD,QAAQ,GACrBpT,MAAKuG,EAAIsJ,EAAIuD,QAAQ,GAErBpT,MAAK2R,eAAiB,IAEtB3R,MAAKkP,kCAAkCjE,EAAuByH,kBLwKxD3R,WAAY,KACZC,aAAc,MKtKrBL,QAAAC,eAAW2K,EAAAhL,UAAA,oBLyKJM,IKzKP,WAEC,MAAOb,MAAKoP,yBL0KNzM,IKvKP,SAA4BC,GAE3B5C,KAAKoP,wBAA0BxM,CAE/B5C,MAAKkP,kCAAkCjE,EAAuBkE,kBLuKxDpO,WAAY,KACZC,aAAc,MKlKrBL,QAAAC,eAAW2K,EAAAhL,UAAA,wBLwKJM,IKxKP,WAEC,IAAKb,KAAKmb,qBACTnb,KAAKmb,qBAAuB,GAAI9P,GAAmBrL,KAEpD,OAAOA,MAAKmb,sBLwKNpa,WAAY,KACZC,aAAc,MKnKduK,GAAAhL,UAAA6a,WAAP,SAAkBxY,GAEjB5C,KAAKsQ,SAAW1N,CAEV,IAAIA,EACT5C,KAAKkR,WAAWtO,EAAMuO,QAASvO,EAAMwO,yBAErCpR,MAAKkR,WAAW,KAAM,KAEvBlR,MAAKkP,kCAAkCjE,EAAuBoQ,KAGxD9P,GAAAhL,UAAA2O,kCAAP,SAAyCoM,GAExC,GAAIC,IAAcvb,KAAKyS,wBAA0B6I,GAAWA,CAC5D,KAAKC,EACJ,MAAO,KAERvb,MAAKyS,yBAA2B6I,CAEhC,IAAIC,EAAMtQ,EAAuByH,gBAAiB,CACjD1S,KAAKwQ,4BAA8B,IACnCxQ,MAAKsS,oBAAsB,IAE3B,IAAItS,KAAKwb,SACRxb,KAAKyb,qBAEN,IAAIzb,KAAKsQ,SACRtQ,KAAKsQ,SAASf,oBAEf,IAAIvP,KAAKoU,+BACRpU,KAAK0b,cAAc1b,KAAK2b,yBAA2B3b,KAAK2b,uBAAyB,GAAIrQ,GAAmBA,EAAmB6I,uBAAwBnU,QAGrJ,MAAO,OAMDuL,GAAAhL,UAAA2Q,WAAP,SAAkB0K,EAAaC,GAE9B,GAAIC,GAAuB9b,KAAKmR,SAAWyK,CAE3C,IAAI5b,KAAKmR,SAAWnR,KAAK8a,oBAAqB,CAE7C9a,KAAKmR,QAAQ4K,sBAAsB/b,KAAK8a,oBAGxC9a,MAAK8a,oBAAoBkB,mBAAmBhc,MAI7CA,KAAK8a,oBAAsB9a,KAAKiR,oBAAsB4K,CAGtD,IAAIC,EACH9b,KAAKmR,QAAUyK,CAEhB,IAAI5b,KAAKmR,SAAWnR,KAAK8a,oBAAqB,CAE7C9a,KAAKmR,QAAQ8K,oBAAoBjc,KAAK8a,oBAGtC9a,MAAK8a,oBAAoBoB,iBAAiBlc,MAG3C,GAAI8b,GAAgB9b,KAAKkU,sBACvBlU,KAAK0b,cAAc1b,KAAKmc,gBAAkBnc,KAAKmc,cAAgB,GAAI7Q,GAAmBA,EAAmB2I,cAAejU,QAMpHuL,GAAAhL,UAAAya,iBAAP,WAEC,GAAIhb,KAAK2R,eACR3R,KAAK4R,gBAEN5R,MAAK8N,KAAK7K,EAAIjD,KAAKuN,EACnBvN,MAAK8N,KAAK5K,EAAIlD,KAAKwN,EACnBxN,MAAK8N,KAAKvH,EAAIvG,KAAKyN,EAEnBzN,MAAK+N,KAAK9K,EAAIjD,KAAK2M,UACnB3M;KAAK+N,KAAK7K,EAAIlD,KAAK4M,UACnB5M,MAAK+N,KAAKxH,EAAIvG,KAAK6M,UAEnB7M,MAAKgO,KAAK/K,EAAIjD,KAAKiN,MACnBjN,MAAKgO,KAAK9K,EAAIlD,KAAKkN,MACnBlN,MAAKgO,KAAKzH,EAAIvG,KAAKmN,MAEnBnN,MAAKiO,KAAKhL,EAAIjD,KAAKoN,OACnBpN,MAAKiO,KAAK/K,EAAIlD,KAAKqN,OACnBrN,MAAKiO,KAAK1H,EAAIvG,KAAKsN,OAEnBtN,MAAKgM,UAAUiO,UAAUja,KAAK2O,qBAE9B3O,MAAK+a,eAAiB,MAGhBxP,GAAAhL,UAAA2a,cAAP,WAEC,IAAKlb,KAAK6N,WAAY,CACrB7N,KAAK2N,YAAY1K,EAAIjD,KAAK0N,OAAOzK,EAAEjD,KAAKoN,OACxCpN,MAAK2N,YAAYzK,EAAIlD,KAAK0N,OAAOxK,EAAElD,KAAKqN,OACxCrN,MAAK2N,YAAYpH,EAAIvG,KAAK0N,OAAOnH,EAAEvG,KAAKsN,OACxCtN,MAAKgM,UAAUkO,oBAAoBla,KAAK2N,YAAY1K,GAAIjD,KAAK2N,YAAYzK,GAAIlD,KAAK2N,YAAYpH,EAC9F,IAAIvG,KAAKuO,eAAiBjN,EAAcE,YACvCxB,KAAKgM,UAAUoQ,kBAAkBpc,KAAK0N,OAAOzK,EAAGjD,KAAK0N,OAAOxK,EAAGlD,KAAK0N,OAAOnH,GAG7EvG,KAAKib,YAAc,MAMb1P,GAAAhL,UAAAoS,sBAAP,WAEC,GAAI3S,KAAKqc,aACRrc,KAAKqc,aAAaC,kBAEnB,IAAItc,KAAKsQ,WAAatQ,KAAKsQ,SAASiM,SAAU,CAC7Cvc,KAAK2L,iBAAiB8E,SAASzQ,KAAKsQ,SAASI,eAC7C1Q,MAAK2L,iBAAiB6Q,QAAQxc,KAAKsU,gBAC7B,CACNtU,KAAK2L,iBAAiB8E,SAASzQ,KAAKsU,YAGrCtU,KAAKyc,eAAiB,KACtBzc,MAAK0c,eAAiB,KACtB1c,MAAK2c,WAAa,KAClB3c,MAAK4c,YAAc,KAEnB5c,MAAKyS,yBAA2BxH,EAAuByH,gBAGjDnH,GAAAhL,UAAAsc,gBAAP,SAAuBC,GAEtB9c,KAAKkO,cAAc7H,KAAKyW,EAExB,OAAOA,GAIDvR,GAAAhL,UAAAwc,mBAAP,SAA0BD,GAEzB,GAAI3W,GAAenG,KAAKkO,cAAc8O,QAAQF,EAE9C9c,MAAKkO,cAAc+O,OAAO9W,EAAO,EAEjC,OAAO2W,GAYDvR,GAAAhL,UAAA8I,gBAAP,SAAuBI,EAAkCyT,GAExD,MAAO,OAMD3R,GAAAhL,UAAA4c,iBAAP,WAEC,GAAInd,KAAKqc,aACRrc,KAAKqc,aAAae,QL2Hb,IKxHF5N,GAAaxP,KAAKwL,cAAcjM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAKqR,cAAcrR,KAAKwL,cAAcxM,GAEvCgB,MAAKwL,cAAcjM,OAAS,EAMtBgM,GAAAhL,UAAA8c,YAAP,WAEC,GAAIrd,KAAKyS,wBAA0BxH,EAAuB8H,QACzD/S,KAAKsd,gBAEN,OAAOtd,MAAKqM,qBAMNd,GAAAhL,UAAAgd,iBAAP,WAEC,GAAIvd,KAAKyS,wBAA0BxH,EAAuBuS,QACzDxd,KAAKyd,eAEN,OAAOzd,MAAKsM,iBAMNf,GAAAhL,UAAAmd,gBAAP,WAEC,GAAI1d,KAAKyS,wBAA0BxH,EAAuBiI,MACzDlT,KAAK2d,cAEN,OAAO3d,MAAK4d,gBAGNrS,GAAAhL,UAAAsd,cAAP,WAEC,GAAI7d,KAAKyS,wBAA0BxH,EAAuBiI,MACzDlT,KAAK2d,cAEN,OAAO3d,MAAKuM,kBAGNhB,GAAAhL,UAAAud,yBAAP,WAEC,GAAI9d,KAAKyS,wBAA0BxH,EAAuBkE,gBACzDnP,KAAK+d,uBAEN,OAAO/d,MAAK0M,yBAONnB,GAAAhL,UAAAyd,iBAAP,WAEC,GAAIhe,KAAKyS,wBAA0BxH,EAAuBgT,cACzDje,KAAKke,qBAEN,OAAOle,MAAKyM,wBAA0BzM,KAAKwM,sBAGrCjB,GAAAhL,UAAA4d,eAAP,SAAsBC,IAUd7S,GAAAhL,UAAA8d,mBAAR,WAEC,GAAIre,KAAK+a,eACR,MAED/a,MAAK+a,eAAiB,IAEtB/a,MAAKkP,kCAAkCjE,EAAuByH,iBAMxDnH,GAAAhL,UAAAkb,oBAAP,WAEC,GAAIjM,GAAaxP,KAAKmO,aAAa5O,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKmO,aAAanP,GAAGyc,sBAMflQ,GAAAhL,UAAAkR,gBAAR,WAECzR,KAAK6N,WAAc7N,KAAK0N,OAAOzK,GAAK,GAAOjD,KAAK0N,OAAOxK,GAAK,GAAOlD,KAAK0N,OAAOnH,GAAK,CAEpF,IAAIvG,KAAKib,YACR,MAEDjb,MAAKib,YAAc,IAEnBjb,MAAKqe,qBAME9S,GAAAhL,UAAA8S,mBAAR,WAEC,GAAIrT,KAAKyc,eACR,MAEDzc,MAAKyc,eAAiB,IAEtBzc,MAAKkP,kCAAkCjE,EAAuByH,gBAE9D,KAAK1S,KAAK6N,WACT7N,KAAKyR,iBAEN,IAAIzR,KAAK0T,yBACR1T,KAAK0b,cAAc1b,KAAKse,mBAAqBte,KAAKse,iBAAmB,GAAIhT,GAAmBA,EAAmBmI,iBAAkBzT,QAM3HuL,GAAAhL,UAAAwR,mBAAR,SAA2BwM,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAE1B,GAAIA,EACHve,KAAKqe,oBAEN,IAAIre,KAAK0c,eACR,MAED1c,MAAK0c,eAAiB,IAEtB,IAAI1c,KAAK4T,yBACR5T,KAAK0b,cAAc1b,KAAKwe,mBAAqBxe,KAAKwe,iBAAmB,GAAIlT,GAAmBA,EAAmBqI,iBAAkB3T,QAM3HuL,GAAAhL,UAAA4R,eAAR,SAAuBoM,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEtB,GAAIA,EACHve,KAAKqe,oBAEN,IAAIre,KAAK2c,WACR,MAED3c,MAAK2c,WAAa,IAElB,IAAI3c,KAAK8T,qBACR9T,KAAK0b,cAAc1b,KAAKye,eAAiBze,KAAKye,aAAe,GAAInT,GAAmBA,EAAmBuI,aAAc7T,QAM/GuL,GAAAhL,UAAAme,gBAAR,SAAwBH,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEvB,GAAIA,EACHve,KAAKqe,oBAEN,IAAIre,KAAK4c,YACR,MAED5c,MAAK4c,YAAc,IAEnB,IAAI5c,KAAKgU,sBACRhU,KAAK0b,cAAc1b,KAAK2e,gBAAkB3e,KAAK2e,cAAgB,GAAIrT,GAAmBA,EAAmByI,cAAe/T,QAInHuL,GAAAhL,UAAAqe,gBAAP,SAAuBC,GAEtB7e,KAAKmO,aAAa9H,KAAKwY,EAEvB,OAAOA,GAIDtT,GAAAhL,UAAAue,mBAAP,SAA0BD,GAEzB,GAAI1Y,GAAenG,KAAKmO,aAAa6O,QAAQ6B,EAE7C7e,MAAKmO,aAAa8O,OAAO9W,EAAO,EAEhC,OAAO0Y,GAGDtT,GAAAhL,UAAAgP,mBAAP,WAECvP,KAAKyL,kBAAoB,IACzBzL,MAAK0L,qBAAuB,IAE5B,IAAI1L,KAAKwb,SACRxb,KAAKyb,qBAEN,IAAIzb,KAAKsQ,SACRtQ,KAAKsQ,SAASf,qBAGThE,GAAAhL,UAAA6U,kBAAP,WAECpV,KAAKyL,kBAAoB,KAEzB,IAAIzL,KAAKqV,aAAe,KACvBrV,KAAKqV,YAAc,GAAI5K,GAGlBc,GAAAhL,UAAAkV,qBAAP,WAECzV,KAAK0L,qBAAuB,KAE5B,IAAI1L,KAAK0V,gBAAkB,KAC1B1V,KAAK0V,eAAiB,GAAI/K,GAGpBY,GAAAhL,UAAAmb,cAAR,SAAsBqD,GAGrB/e,KAAKwL,cAAcnF,KAAK0Y,GAGjBxT,GAAAhL,UAAAqR,eAAR,WAEC5R,KAAK2R,eAAiB,KAEtB,IAAIqN,GAA2Bhf,KAAKgM,UAAUgN,WAC9C,IAAID,EAEJA,GAAMiG,EAAS,EAEf,IAAIhf,KAAK2M,YAAcoM,EAAI9V,GAAKjD,KAAK4M,YAAcmM,EAAI7V,GAAKlD,KAAK6M,YAAckM,EAAIxS,EAAG,CACrFvG,KAAK2M,WAAaoM,EAAI9V,CACtBjD,MAAK4M,WAAamM,EAAI7V,CACtBlD,MAAK6M,WAAakM,EAAIxS,CAEtBvG,MAAK+R,mBAAmB,OAGzBgH,EAAMiG,EAAS,EAEf,IAAIhf,KAAKiN,QAAU8L,EAAI9V,GAAKjD,KAAKkN,QAAU6L,EAAI7V,GAAKlD,KAAKmN,QAAU4L,EAAIxS,EAAG,CACzEvG,KAAKiN,OAAS8L,EAAI9V,CAClBjD,MAAKkN,OAAS6L,EAAI7V,CAClBlD,MAAKmN,OAAS4L,EAAIxS,CAElBvG,MAAKmS,eAAe,OAGrB4G,EAAMiG,EAAS,EAEfhf,MAAKgS,OAAS,IACdhS,MAAKoQ,QAAU,IACfpQ,MAAK8P,OAAS,IAEd,IAAI9P,KAAKoN,SAAW2L,EAAI9V,GAAKjD,KAAKqN,SAAW0L,EAAI7V,GAAKlD,KAAKsN,SAAWyL,EAAIxS,EAAG,CAC5EvG,KAAKoN,QAAU2L,EAAI9V,CACnBjD,MAAKqN,QAAU0L,EAAI7V,CACnBlD,MAAKsN,QAAUyL,EAAIxS,CAEnBvG,MAAK0e,gBAAgB,QAIfnT,GAAAhL,UAAA0R,WAAR,SAAmBpC,GAElB,GAAI7P,KAAKmT,QAAUtD,EAClB,MAED7P,MAAKoN,QAAUyC,CAEf7P,MAAK0e,kBAGEnT,GAAAhL,UAAA8P,WAAR,SAAmBR,GAElB,GAAI7P,KAAKmQ,QAAUN,EAClB,MAED7P,MAAKqN,QAAUwC,CAEf7P,MAAK0e,kBAGEnT,GAAAhL,UAAAwP,WAAR,SAAmBF,GAElB,GAAI7P,KAAK4P,QAAUC,EAClB,MAED7P,MAAKsN,QAAUuC,CAEf7P,MAAK0e,kBAGCnT,GAAAhL,UAAA2d,oBAAP,WAECle,KAAKyM,uBAA0BzM,KAAa,SAAGA,KAAKsQ,SAAS2O,eAAiBjf,KAAKsQ,SAAS7D,uBAAyB,IAGrH,IAAIzM,KAAKyM,wBAA0BzM,KAAKsQ,WAAatQ,KAAKuR,kBACzDvR,KAAKuR,kBAAqBvR,KAAKsQ,SAASiB,iBAEzCvR,MAAKyS,yBAA2BxH,EAAuBgT,cAGhD1S,GAAAhL,UAAA+c,eAAR,WAECtd,KAAKqM,qBAAwBrM,KAAa,SAAGA,KAAKmM,qBAAuBnM,KAAKsQ,SAAS+M,cAAgBrd,KAAKmM,mBAE5GnM,MAAKyS,yBAA2BxH,EAAuB8H,QAGhDxH,GAAAhL,UAAAkd,cAAR,WAECzd,KAAKsM,iBAAoBtM,KAAKsQ,UAAYtQ,KAAKsQ,SAASiN,qBAAuB,EAAIvd,KAAKsQ,SAASiN,mBAAqBvd,KAAKoM,eAE3HpM,MAAKyS,yBAA2BxH,EAAuBuS,QAGhDjS,GAAAhL,UAAAod,aAAR,WAEC3d,KAAK4d,gBAAmB5d,KAAKsQ,UAAYtQ,KAAKsQ,SAASoN,kBAAqB1d,KAAKgT,gBAAkB,KAAOhT,KAAKsQ,SAASoN,kBAAkBlJ,QAAQxU,KAAKgT,iBAAmBhT,KAAKsQ,SAASoN,kBAAkBlJ,SAAYxU,KAAKgT,gBAAkB,MAAQhT,KAAKgT,gBAAkB,IAE5QhT,MAAKuM,kBAAkBhN,OAAS,CAEhC,IAAIS,KAAK4d,iBAAmB5d,KAAK4d,gBAAgBre,OAAQ,CACxD,GAAI2f,GAAmBlf,KAAK4d,gBAAgBre,MAC5C,IAAI4f,EACJ,IAAIC,EACJ,IAAIC,EACJ,KAAK,GAAIrgB,GAAW,EAAGA,EAAIkgB,EAAWlgB,IAAK,CAC1CogB,EAAmBpf,KAAK4d,gBAAgB5e,EACxCmgB,GAAcC,EAAiB7f,MAC/B8f,GAAmB,GAAI7Z,MACvB,KAAK,GAAIU,GAAW,EAAGA,EAAIiZ,EAAajZ,IACvCmZ,EAAiBhZ,KAAK+Y,EAAiBlZ,GAAGmC,GAE3CrI,MAAKuM,kBAAkBlG,KAAKgZ,IAI9Brf,KAAKyS,yBAA2BxH,EAAuBiI,MAGhD3H,GAAAhL,UAAAwd,sBAAR,WAEC,GAAI/d,KAAKoO,wBAA0BpO,KAAKsQ,SAAU,CACjDtQ,KAAK0M,yBAAyB+D,SAASzQ,KAAKsQ,SAASwN,2BACrD,IAAI9d,KAAKoP,wBACRpP,KAAK0M,yBAAyB8P,QAAQxc,KAAKoP,6BACtC,CACN,GAAIpP,KAAKoP,wBACRpP,KAAK0M,yBAAyB+D,SAASzQ,KAAKoP,6BAE5CpP,MAAK0M,yBAAyBiN,QAGhC3Z,KAAKyS,yBAA2BxH,EAAuBkE,gBAGjD5D,GAAAhL,UAAAsQ,gBAAP,WAEC,GAAI7Q,KAAKiT,SACRjT,KAAKsf,cAAgBtf,KAAKqO,SAE3BrO,MAAKkP,kCAAkCjE,EAAuBuS,SAEhE,OAAAjS,IAzlF4B/K,EA2lFLf,GAAAJ,QAAdkM,ILINgU,2BAA2Bne,UAAUoe,sCAAsCpe,UAAUqe,kCAAkCre,UAAUse,gCAAgCte,UAAUue,qCAAqCve,UAAUwe,6BAA6Bxe,UAAUye,8BAA8Bze,UAAU0e,gCAAgC1e,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwC0e,iDAAiD,iDAAiDC,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,+CAA+C,+CAA+CC,6CAA6C,+CAA+CC,oCAAoC,SAAS9hB,EAAQkB,EAAOJ,GACthC,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM3wFtB,IAAOG,GAASjC,EAAc,oCAG9B,IAAO+hB,GAAa/hB,EAAa,0CN0xFjC,IM1wFMgiB,GAAQ,SAAA7f,GAASX,EAAjBwgB,EAAQ7f,EAsBb,SAtBK6f,KAwBJ7f,EAAApB,KAAAU,KAEAA,MAAKwgB,eAAiB,GAAIhb,OApB3B7E,OAAAC,eAAW2f,EAAAhgB,UAAA,aN8wFJM,IM9wFP,WAEC,MAAO0f,GAASrf,WN+wFVH,WAAY,KACZC,aAAc,MM1wFrBL,QAAAC,eAAW2f,EAAAhgB,UAAA,iBNgxFJM,IMhxFP,WAEC,MAAOb,MAAKwgB,gBNixFNzf,WAAY,KACZC,aAAc,MMrwFduf,GAAAhgB,UAAA4I,oBAAP,SAA2BC,GAE1B,GAAIoG,GAAaxP,KAAKwgB,eAAejhB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAKwgB,eAAexhB,GAAGmK,oBAAoBC,GAOtCmX,GAAAhgB,UAAAkgB,eAAP,SAAsBvW,GAErBlK,KAAKwgB,eAAena,KAAK6D,EAEzBA,GAAYwW,eAAiB1gB,IAE7B,IAAIA,KAAKya,iBAAiB6F,EAAcK,oBACvC3gB,KAAKqR,cAAc,GAAIiP,GAAcA,EAAcK,mBAAoBzW,GAExElK,MAAK4gB,kBAAkB1W,GAOjBqW,GAAAhgB,UAAAsgB,kBAAP,SAAyB3W,GAExBlK,KAAKwgB,eAAevD,OAAOjd,KAAKwgB,eAAexD,QAAQ9S,GAAc,EAErEA,GAAYwW,eAAiB,IAE7B,IAAI1gB,KAAKya,iBAAiB6F,EAAcQ,sBACvC9gB,KAAKqR,cAAc,GAAIiP,GAAcA,EAAcQ,qBAAsB5W,GAE1ElK,MAAK4gB,kBAAkB1W,GAOjBqW,GAAAhgB,UAAAkI,MAAP,WAEC,GAAIA,GAAiB,GAAI8X,EACzB,IAAI/Q,GAAaxP,KAAKwgB,eAAejhB,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCyJ,EAAMgY,eAAezgB,KAAKwgB,eAAexhB,GAAGyJ,QAE7C,OAAOA,GAOD8X,GAAAhgB,UAAA2I,MAAP,SAAaA,GAEZ,GAAI6X,GAAqB/gB,KAAKwgB,eAAejhB,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI+hB,IAAe/hB,EACzCgB,KAAKwgB,eAAexhB,GAAGkK,MAAMA,GAMxBqX,GAAAhgB,UAAAU,QAAP,WAEC,GAAI8f,GAAqB/gB,KAAKwgB,eAAejhB,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI+hB,IAAe/hB,EAAG,CAC5C,GAAIgiB,GAA0BhhB,KAAKwgB,eAAe,EAClDxgB,MAAK6gB,kBAAkBG,EACvBA,GAAQ/f,WASHsf,GAAAhgB,UAAAuI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAI+X,GAAqB/gB,KAAKwgB,eAAejhB,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI+hB,IAAe/hB,EACzCgB,KAAKwgB,eAAexhB,GAAG8J,QAAQC,EAAQC,GAGlCuX,GAAAhgB,UAAAqgB,kBAAP,SAAyBI,GAExB,GAAIhhB,KAAKya,iBAAiB6F,EAAcW,gBACvCjhB,KAAKqR,cAAc,GAAIiP,GAAcA,EAAcW,eAAgBD,IA1HvDT,GAAArf,UAAmB,kBA4HlC,OAAAqf,IA9HuB/f,EAgIvBf,GAAkBJ,QAATkhB,INmvFNpf,oCAAoCC,UAAU8f,0CAA0C,4CAA4CnB,kDAAkD,SAASxhB,EAAQkB,EAAOJ,GAIjN,GOz4FM4L,GAAsB,WAA5B,QAAMA,MAKSA,EAAAgT,cAAuB,CAKvBhT,GAAA8H,QAAiB,CAKjB9H,GAAAuS,QAAiB,CAKjBvS,GAAAiI,MAAe,CAKfjI,GAAAkE,gBAAyB,EAKzBlE,GAAAyH,gBAAyB,EAKzBzH,GAAAoQ,IAAa,EAC5B,OAAApQ,KAEAxL,GAAgCJ,QAAvB4L,OPs4FHkW,2CAA2C,SAAS5iB,EAAQkB,EAAOJ,SAEnE+hB,wCAAwC,SAAS7iB,EAAQkB,EAAOJ,SAEhEgiB,4CAA4C,SAAS9iB,EAAQkB,EAAOJ,SAEpEiiB,yCAAyC,SAAS/iB,EAAQkB,EAAOJ,SAEjEkiB,oCAAoC,SAAShjB,EAAQkB,EAAOJ,SAE5DmiB,qCAAqC,SAASjjB,EAAQkB,EAAOJ,GACnE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQ77FtB,IAAOohB,GAAmBljB,EAAY,6CAEtC,IAAOmjB,GAAsBnjB,EAAW,uDAGxC,IAAOojB,GAAUpjB,EAAc,uCAG/B,IAAMqjB,GAAS,SAAAlhB,GAASX,EAAlB6hB,EAASlhB,EA6Bd,SA7BKkhB,KA+BJlhB,EAAApB,KAAAU,KA3BOA,MAAA6hB,OAAgB,QAChB7hB,MAAA8hB,QAAiB,CACjB9hB,MAAA+hB,QAAiB,CACjB/hB,MAAAgiB,QAAiB,CAEjBhiB,MAAAiiB,cAAuB,QACvBjiB,MAAAkiB,SAAkB,CACnBliB,MAAAmiB,WAAoB,CACpBniB,MAAAoiB,WAAoB,CACpBpiB,MAAAqiB,WAAoB,CAEnBriB,MAAAsiB,UAAmB,CACpBtiB,MAAAuiB,YAAqB,CACrBviB,MAAAwiB,YAAqB,CACrBxiB,MAAAyiB,YAAqB,CAEpBziB,MAAA0iB,SAAkB,CACnB1iB,MAAA2iB,WAAoB,CACpB3iB,MAAA4iB,WAAoB,CACpB5iB,MAAA6iB,WAAoB,CAEnB7iB,MAAA8iB,cAAwB,MAShCniB,OAAAC,eAAWghB,EAAArhB,UAAA,gBRg7FJM,IQh7FP,WAEC,MAAOb,MAAK8iB,eRi7FNngB,IQ96FP,SAAwBC,GAEvB,GAAI5C,KAAK8iB,eAAiBlgB,EACzB,MAED5C,MAAK8iB,cAAgBlgB,CAErB,IAAIA,EAAO,CACV,GAAI5C,KAAK+iB,eAAiB,KACzB/iB,KAAK+iB,cAAgB/iB,KAAKgjB,qBAE3BhjB,MAAK+iB,cAAcE,MAAQjjB,SACrB,CACNA,KAAK+iB,cAAc9hB,SACnBjB,MAAK+iB,cAAgB,KAGtB/iB,KAAKqR,cAAc,GAAIsQ,GAAWA,EAAWuB,uBR66FvCniB,WAAY,KACZC,aAAc,MQ36Fd4gB,GAAArhB,UAAAyiB,oBAAP,WAEC,KAAM,IAAIvB,GAGX9gB,QAAAC,eAAWghB,EAAArhB,UAAA,YR46FJM,IQ56FP,WAEC,MAAOb,MAAKsiB,WR66FN3f,IQ16FP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAET5C,MAAKsiB,UAAY1f,CACjB5C,MAAKmjB,kBR06FCpiB,WAAY,KACZC,aAAc,MQx6FrBL,QAAAC,eAAWghB,EAAArhB,UAAA,WR26FJM,IQ36FP,WAEC,MAAOb,MAAK0iB,UR46FN/f,IQz6FP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAET5C,MAAK0iB,SAAW9f,CAChB5C,MAAKojB,iBRy6FCriB,WAAY,KACZC,aAAc,MQv6FrBL,QAAAC,eAAWghB,EAAArhB,UAAA,SR06FJM,IQ16FP,WAEC,MAAOb,MAAK6hB,QR26FNlf,IQx6FP,SAAiBC,GAEhB5C,KAAK6hB,OAASjf,CACd5C,MAAK8hB,SAAY9hB,KAAK6hB,QAAU,GAAM,KAAM,GAC5C7hB,MAAK+hB,SAAY/hB,KAAK6hB,QAAU,EAAK,KAAM,GAC3C7hB,MAAKgiB,SAAWhiB,KAAK6hB,OAAS,KAAM,GAEpC7hB,MAAKojB,eACLpjB,MAAKmjB,kBRw6FCpiB,WAAY,KACZC,aAAc,MQt6FrBL,QAAAC,eAAWghB,EAAArhB,UAAA,WRy6FJM,IQz6FP,WAEC,MAAOb,MAAKkiB,UR06FNvf,IQv6FP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET5C,MAAKkiB,SAAWtf,CAChB5C,MAAKqjB,iBRu6FCtiB,WAAY,KACZC,aAAc,MQr6FrBL,QAAAC,eAAWghB,EAAArhB,UAAA,gBRw6FJM,IQx6FP,WAEC,MAAOb,MAAKiiB,eRy6FNtf,IQt6FP,SAAwBC,GAEvB5C,KAAKiiB,cAAgBrf,CACrB5C,MAAKqjB,iBRu6FCtiB,WAAY,KACZC,aAAc,MQr6Fb4gB,GAAArhB,UAAA8iB,cAAR,WAECrjB,KAAKmiB,YAAeniB,KAAKiiB,eAAiB,GAAM,KAAM,IAAKjiB,KAAKkiB,QAChEliB,MAAKoiB,YAAepiB,KAAKiiB,eAAiB,EAAK,KAAM,IAAKjiB,KAAKkiB,QAC/DliB,MAAKqiB,YAAcriB,KAAKiiB,cAAgB,KAAM,IAAKjiB,KAAKkiB,SAGlDN,GAAArhB,UAAA+iB,2BAAP,SAAkCC,EAAgB1J,EAAehE,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI4L,GAIX9gB,QAAAC,eAAWghB,EAAArhB,UAAA,aRq6FJM,IQr6FP,WAEC,MAAO+gB,GAAU1gB,WRs6FXH,WAAY,KACZC,aAAc,MQp6Fb4gB,GAAArhB,UAAA4iB,eAAR,WAECnjB,KAAKuiB,YAAcviB,KAAK8hB,QAAQ9hB,KAAKsiB,SACrCtiB,MAAKwiB,YAAcxiB,KAAK+hB,QAAQ/hB,KAAKsiB,SACrCtiB,MAAKyiB,YAAcziB,KAAKgiB,QAAQhiB,KAAKsiB,UAG9BV,GAAArhB,UAAA6iB,cAAR,WAECpjB,KAAK2iB,WAAa3iB,KAAK8hB,QAAQ9hB,KAAK0iB,QACpC1iB,MAAK4iB,WAAa5iB,KAAK+hB,QAAQ/hB,KAAK0iB,QACpC1iB,MAAK6iB,WAAa7iB,KAAKgiB,QAAQhiB,KAAK0iB,SAGrC/hB,QAAAC,eAAWghB,EAAArhB,UAAA,gBRm6FJM,IQn6FP,WAEC,MAAOb,MAAK+iB,eRo6FNpgB,IQj6FP,SAAwBC,GAEvB5C,KAAK+iB,cAAgBngB,CACrB5C,MAAK+iB,cAAcE,MAAQjjB,MRk6FrBe,WAAY,KACZC,aAAc,MQhlGP4gB,GAAA1gB,UAAmB,eA+KlC,OAAA0gB,IAjLwBF,EAmLxBjiB,GAAmBJ,QAAVuiB,IRs6FN4B,6CAA6CpiB,UAAUqiB,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,2CAA2C,SAASplB,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GStmGtB,IAAOujB,GAAcrlB,EAAc,4CACnC,IAAOslB,GAAetlB,EAAc,6CAEpC,IAAOulB,GAAgBvlB,EAAc,8CAErC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CTymGrC,ISlmGMwlB,GAAe,SAAArjB,GAASX,EAAxBgkB,EAAerjB,EAyDpB,SAzDKqjB,GAyDOhiB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAyD7BhC,MAAKsC,WAAa,GAAIshB,GAAeI,aAAc,EAAGjiB,GA/CvDpB,OAAAC,eAAWmjB,EAAAxjB,UAAA,aTomGJM,ISpmGP,WAEC,MAAOkjB,GAAgB7iB,WTqmGjBH,WAAY,KACZC,aAAc,MShmGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,aTsmGJM,IStmGP,WAEC,MAAOb,MAAKsC,YTumGNvB,WAAY,KACZC,aAAc,MSlmGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,aTwmGJM,ISxmGP,WAEC,MAAOb,MAAKikB,YTymGNljB,WAAY,KACZC,aAAc,MSpmGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,UT0mGJM,IS1mGP,WAEC,IAAKb,KAAKkkB,QACTlkB,KAAKmkB,UAAUnkB,KAAKkkB,QAErB,OAAOlkB,MAAKkkB,ST0mGNnjB,WAAY,KACZC,aAAc,MSrmGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,eT2mGJM,IS3mGP,WAEC,MAAOb,MAAKgC,cT4mGNjB,WAAY,KACZC,aAAc,MShmGd+iB,GAAAxjB,UAAAwC,qBAAP,WAEC,MAAsB/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cASzC+hB,GAAAxjB,UAAAuH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkB6b,GAAgB,CACrC5jB,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAA8ByF,MAC7B,IAAIA,EAAQ,CAClB,GAAI/I,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIvC,GAAyB,GAAIogB,cAAajc,EAAOxI,OAAO,EAC5D,IAAIoJ,GAAsB,GAAIyb,aAAYrc,EAAOxI,OAEjD,OAAOP,EAAI+I,EAAOxI,OAAQ,CACzB,GAAI4G,EAAM,EAAI,EAAG,CAChBvC,EAAUuC,GAAS4B,EAAO/I,EAAI,EAC9B4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAC9B4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,OAC5B,CACN4E,EAAUuC,GAAS4B,EAAO/I,EAC1B4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK4B,EAAO/I,EAAI,GAGnCmH,GAAS,CAET,MAAMD,GAAK,EAAG,CACb,GAAIrH,GAAWsH,EAAM,EAAI,CACzBwC,GAAQhG,KAAK9D,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpDkH,GAAI,CACJlH,IAAK,GAIPgB,KAAKsC,WAAWK,IAAIiB,EAAWoE,EAAO,EAEtChI,MAAK4I,WAAWD,EAASX,OACnB,CACNhI,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAIshB,GAAeI,aAAc,EAAGhkB,KAAKuC,qBAG5DvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC1C,MAAKmI,mBAELnI,MAAKkI,qBAAqBlI,KAAKsC,WAE/BtC,MAAKoI,eAAepI,KAAKsC,WAAW+F,IAAM,MASpC0b,GAAAxjB,UAAA8jB,aAAP,SAAoBtc,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkB+b,GAAkB,CACvC9jB,KAAKikB,WAAgClc,MAC/B,IAAIA,EAAQ,CAClB,IAAK/H,KAAKikB,WACTjkB,KAAKikB,WAAa,GAAIH,GAAiB9jB,KAAKuC,oBAE7C,IAAIvD,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIme,GAAyB,GAAIN,cAAajc,EAAOxI,OAAO,EAE5D,OAAOP,EAAI+I,EAAOxI,OAAQ,CACzB+kB,EAAUne,GAAU/C,KAAKC,MAAM,GAAI8C,EAAQ,IAAO,GAAK4B,EAAO/I,GAAK+I,EAAO/I,EAE1E,MAAMkH,GAAK,EAAG,CACbA,EAAI,CACJlH,KAGDmH,IAGDnG,KAAKikB,WAAWthB,IAAI2hB,EAAWtc,EAAO,OAChC,IAAIhI,KAAKikB,WAAY,CAC3BjkB,KAAKikB,WAAWhjB,SAChBjB,MAAKikB,WAAa,KAGnBjkB,KAAKkI,qBAAqBlI,KAAKikB,WAE/BjkB,MAAKoI,eAAepI,KAAKikB,WAAW5b,IAAM,MAUpC0b,GAAAxjB,UAAA4jB,UAAP,SAAiBpc,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAU/H,KAAKkkB,QAClB,MAED,IAAInc,YAAkB8b,GAAiB,CACtC7jB,KAAKiI,sBAAsBjI,KAAKkkB,QAChClkB,MAAKkkB,QAA4Bnc,MAC3B,CACN,IAAK/H,KAAKkkB,QACTlkB,KAAKkkB,QAAU,GAAIL,GAAgB7jB,KAAKuC,oBAGzC,IAAIvD,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIoe,GAAoB,GAAIC,YAAWzc,EAAOxI,OAAO,EAErD,OAAOP,EAAI+I,EAAOxI,OAAQ,CACzB,GAAI4G,EAAM,EAAI,EAAG,CAChBoe,EAAOpe,GAAS4B,EAAO/I,EAAI,EAC3BulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,EAC/BulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,EAC/BulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,OACzB,CACNulB,EAAOpe,GAAS4B,EAAO/I,EACvBulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,EAC/BulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,EAC/BulB,GAAOpe,EAAQ,GAAK4B,EAAO/I,EAAI,GAIhC,KAAMkH,GAAK,EAAG,CACbA,EAAI,CACJlH,IAAK,EAGNmH,GAAS,EAGVnG,KAAKkkB,QAAQvhB,IAAIoF,EAAQC,EAAO,QAE3B,CAENhI,KAAKkkB,QAAUriB,EAAiB4iB,eAAezkB,KAAKwI,UAAWxI,KAAKkkB,QAASlkB,KAAKuC,oBAAqBvC,KAAKgC,cAG7GhC,KAAKkI,qBAAqBlI,KAAKkkB,QAE/BlkB,MAAKoI,eAAepI,KAAKkkB,QAAQ7b,IAAM,MAMjC0b,GAAAxjB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAa,IAClBtC,MAAKikB,WAAa,IAClBjkB,MAAKkkB,QAAU,KAOTH,GAAAxjB,UAAAkI,MAAP,WAEC,GAAIA,GAAwB,GAAIsb,GAAgB/jB,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBkG,QAAU,KAE7GA,GAAMG,WAAW5I,KAAKwI,UAAUC,QAEhCA,GAAMX,aAAa9H,KAAKsC,WAAWmG,QACnCA,GAAM4b,aAAarkB,KAAKikB,WAAWxb,QACnCA,GAAM0b,UAAUnkB,KAAKkkB,QAAQzb,QAE7B,OAAOA,GAGDsb,GAAAxjB,UAAA8I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBob,kBAAkB1kB,KAAMuJ,EAAUC,EAAoBC,GArQhEsa,GAAA7iB,UAAmB,yBAuQlC,OAAA6iB,IAzQ8BniB,EA2QLnC,GAAAJ,QAAhB0kB,ITkjGNY,4CAA4CvjB,UAAUwjB,6CAA6CxjB,UAAUyjB,8CAA8CzjB,UAAUyI,0CAA0C,0CAA0CC,4CAA4C,8CAA8Cgb,uCAAuC,SAASvmB,EAAQkB,EAAOJ,GACrZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GU/0GtB,IAAO0jB,GAAexlB,EAAa,0CAEnC,IAAOyL,GAAWzL,EAAc,sCV01GhC,IU50GMwmB,GAAW,SAAArkB,GAASX,EAApBglB,EAAWrkB,EA8BhB,SA9BKqkB,GA8BO7a,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzD7I,EAAApB,KAAAU,KAEAA,MAAKoK,aAAeD,CACpBnK,MAAKqK,aAAeH,CACpBlK,MAAKuJ,SAAWA,EAzBjB5I,OAAAC,eAAWmkB,EAAAxkB,UAAA,aVo1GJM,IUp1GP,WAEC,MAAOkkB,GAAY7jB,WVq1GbH,WAAY,KACZC,aAAc,MUh1GrBL,QAAAC,eAAWmkB,EAAAxkB,UAAA,eVs1GJM,IUt1GP,WAEC,MAAOb,MAAKqK,cVu1GNtJ,WAAY,KACZC,aAAc,MUn0Gd+jB,GAAAxkB,UAAAU,QAAP,WAECjB,KAAKuJ,SAAW,IAEhB7I,GAAAH,UAAMU,QAAO3B,KAAAU,MA5CA+kB,GAAA7jB,UAAmB,qBAEnB6jB,GAAAza,WAAyByZ,CA4CxC,OAAAgB,IAhD0B/a,EAkD1BvK,GAAqBJ,QAAZ0lB,IV00GNpB,0CAA0C,0CAA0CpZ,sCAAsC,wCAAwCya,sCAAsC,SAASzmB,EAAQkB,EAAOJ,GACnO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GWn5GtB,IAAO4kB,GAAe1mB,EAAa,yCXu/GnC,IWh5GM2mB,GAAU,SAAAxkB,GAASX,EAAnBmlB,EAAUxkB,EAAhB,SAAMwkB,KAAmBxkB,EAAAykB,MAAAnlB,KAAAolB,WAyBxBzkB,OAAAC,eAAWskB,EAAA3kB,UAAA,SX64GJM,IW74GP,WAEC,MAAOb,MAAKqlB,QX84GNtkB,WAAY,KACZC,aAAc,MWx4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,eX+4GJM,IW/4GP,WAEC,MAAOb,MAAKslB,cXg5GNvkB,WAAY,KACZC,aAAc,MWr4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,cXi5GJM,IWj5GP,WAEC,MAAOb,MAAKulB,aXk5GNxkB,WAAY,KACZC,aAAc,MWh4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,WXm5GJM,IWn5GP,WAEC,MAAOb,MAAKwlB,UXo5GNzkB,WAAY,KACZC,aAAc,MWv4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,eXq5GJM,IWr5GP,WAEC,MAAOb,MAAKylB,cXs5GN1kB,WAAY,KACZC,aAAc,MWl4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,UXu5GJM,IWv5GP,WAEC,MAAOb,MAAK0lB,SXw5GN3kB,WAAY,KACZC,aAAc,MWx4GrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,OXy5GJM,IWz5GP,WAEC,MAAOb,MAAK2lB,MX05GN5kB,WAAY,KACZC,aAAc,MWz5GtB,OAAAkkB,IAnIyBD,EAqIzBxlB,GAAoBJ,QAAX6lB,IX65GNU,yCAAyCxkB,YAAY4e,2CAA2C,SAASzhB,EAAQkB,EAAOJ,GYzoH3H,GAAM8L,GAAe,WAArB,QAAMA,MAKSA,EAAAuD,QAAiB,SAKjBvD,GAAA2O,aAAsB,aAKtB3O,GAAA0a,gBAAyB,gBACxC,OAAA1a,KAEA1L,GAAyBJ,QAAhB8L,OZ2oHHtB,2CAA2C,SAAStL,EAAQkB,EAAOJ,GACzE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Ga/pHtB,IAAOylB,GAAgBvnB,EAAc,8CACrC,IAAOkjB,GAAmBljB,EAAa,6CAGvC,IAAOiC,GAASjC,EAAe,oCAG/B,IAAOwnB,GAAgBxnB,EAAc,6CbiqHrC,IaxpHMqD,GAAe,SAAAlB,GAASX,EAAxB6B,EAAelB,EA4CpB,SA5CKkB,GA4COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KA5COA,MAAAgmB,eAAuC,GAAIxgB,MAI3CxF,MAAAimB,aAAsB,CAMvBjmB,MAAAoI,eAAwB,GAAIzH,OAC5BX,MAAAkmB,iBAA0B,GAAIvlB,OAmCpCX,MAAKuC,oBAAsBR,EAjC5BpB,OAAAC,eAAWgB,EAAArB,UAAA,sBbwpHJM,IaxpHP,WAEC,MAAOb,MAAKuC,qBbypHNxB,WAAY,KACZC,aAAc,MappHrBL,QAAAC,eAAWgB,EAAArB,UAAA,Wb0pHJM,Ia1pHP,WAEC,MAAOb,MAAKwI,Wb2pHNzH,WAAY,KACZC,aAAc,MatpHrBL,QAAAC,eAAWgB,EAAArB,UAAA,eb4pHJM,Ia5pHP,WAEC,MAAOb,MAAKimB,cb6pHNllB,WAAY,KACZC,aAAc,Ma3pHrBL,QAAAC,eAAWgB,EAAArB,UAAA,eb8pHJM,Ia9pHP,WAEC,KAAM,IAAI4gB,Ib+pHJ1gB,WAAY,KACZC,aAAc,Ma/oHdY,GAAArB,UAAA4lB,WAAP,WAEC,GAAI3W,GAAaxP,KAAKgmB,eAAezmB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKgmB,eAAehnB,GAAGmnB,aAMlBvkB,GAAArB,UAAAU,QAAP,WAEC,MAAOjB,KAAKgmB,eAAezmB,OAC1BS,KAAKgmB,eAAe,GAAG/kB,SAExBjB,MAAKwI,UAAUvH,SACfjB,MAAKwI,UAAY,KAWX5G,GAAArB,UAAAqI,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkB+d,GAAkB,CACvC,GAAI9lB,KAAKwI,UACRxI,KAAKomB,sBAENpmB,MAAKwI,UAA+BT,MAC9B,IAAIA,EAAQ,CAClB,IAAK/H,KAAKwI,UACTxI,KAAKwI,UAAY,GAAIsd,EAEtB9lB,MAAKwI,UAAU7F,IAAIoF,EAAQC,OACrB,IAAIhI,KAAKwI,UAAW,CAC1BxI,KAAKwI,UAAUvH,SACfjB,MAAKwI,UAAY,IAEjBxI,MAAKomB,uBAGN,GAAIpmB,KAAKwI,UAAW,CACnBxI,KAAKimB,aAAejmB,KAAKwI,UAAU9F,KAEnC1C,MAAKqmB,0BACC,CACNrmB,KAAKimB,aAAe,GAOfrkB,GAAArB,UAAA4H,kBAAP,WAEC,GAAInI,KAAK0gB,eACR1gB,KAAK0gB,eAAeE,kBAAkB5gB,MAcjC4B,GAAArB,UAAAkI,MAAP,WAEC,KAAM,IAAIgZ,GAGJ7f,GAAArB,UAAA4I,oBAAP,SAA2BC,IASpBxH,GAAArB,UAAA2I,MAAP,SAAaA,IAKNtH,GAAArB,UAAAuI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3BpH,GAAArB,UAAAwC,qBAAP,WAEC,KAAM,IAAI0e,GAGJ7f,GAAArB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GAEvC,KAAM,IAAIkb,GAGH7f,GAAArB,UAAA8lB,oBAAR,WAEC,IAAKrmB,KAAKsmB,gBACTtmB,KAAKsmB,gBAAkB,GAAIP,GAAiBA,EAAiBQ,gBAAiBvmB,KAAKwI,UAEpFxI,MAAKqR,cAAcrR,KAAKsmB,iBAGjB1kB,GAAArB,UAAA6lB,qBAAR,WAECpmB,KAAKqR,cAAc,GAAI0U,GAAiBA,EAAiBS,iBAAkBxmB,KAAKwI,YAG1E5G,GAAArB,UAAA2H,qBAAP,SAA4Bue,GAE3B,IAAKA,GAAkBzmB,KAAKoI,eAAeqe,EAAepe,IACzD,MAEDrI,MAAKoI,eAAeqe,EAAepe,IAAM,IAEzC,KAAKrI,KAAKkmB,iBAAiBO,EAAepe,IACzCrI,KAAKkmB,iBAAiBO,EAAepe,IAAM,GAAI0d,GAAiBA,EAAiBW,iBAAkBD,EAEpGzmB,MAAKqR,cAAcrR,KAAKkmB,iBAAiBO,EAAepe,KAIlDzG,GAAArB,UAAA0H,sBAAP,SAA6Bwe,GAE5B,IAAKA,EACJ,MAEDA,GAAexlB,SAEfjB,MAAKqR,cAAc,GAAI0U,GAAiBA,EAAiBY,kBAAmBF,GAE5EzmB,MAAKoI,eAAeqe,EAAepe,IAAM,IACzCrI,MAAKkmB,iBAAiBO,EAAepe,IAAM,KAGrCzG,GAAArB,UAAAqmB,mBAAP,SAA0BC,GAEzB7mB,KAAKgmB,eAAe3f,KAAKwgB,EAEzB,OAAOA,GAGDjlB,GAAArB,UAAAumB,sBAAP,SAA6BD,GAE5B7mB,KAAKgmB,eAAe/I,OAAOjd,KAAKgmB,eAAehJ,QAAQ6J,GAAgB,EAEvE,OAAOA,GAGDjlB,GAAArB,UAAA8I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,KAAM,IAAIgY,GAEZ,OAAA7f,IA9N8BpB,EAgO9Bf,GAAyBJ,QAAhBuC,IbylHNmlB,8CAA8C3lB,UAAUoiB,6CAA6CpiB,UAAUD,oCAAoCC,UAAU4lB,6CAA6C,+CAA+Czc,uCAAuC,SAAShM,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Gc70HtB,IAAOG,GAASjC,EAAe,oCdy1H/B,Icx0HMyL,GAAW,SAAAtJ,GAASX,EAApBiK,EAAWtJ,EA4EhB,SA5EKsJ,KA8EJtJ,EAAApB,KAAAU,KAzEMA,MAAAinB,QAAiB,CAGhBjnB,MAAAknB,aAAkC,GAAI1hB,OAY9C7E,OAAAC,eAAWoJ,EAAAzJ,UAAA,Ydw0HJM,Icx0HP,WAEC,MAAOb,MAAKoK,aAAa+c,Udy0HnBpmB,WAAY,KACZC,aAAc,Mcp0HrBL,QAAAC,eAAWoJ,EAAAzJ,UAAA,Yd00HJM,Ic10HP,WAEC,MAAOb,MAAKonB,WAAapnB,KAAKoK,aAAab,Ud20HrC5G,Icx0HP,SAAoBC,GAEnB,GAAI5C,KAAKuJ,SACRvJ,KAAKuJ,SAAS8d,aAAarnB,KAE5BA,MAAKonB,UAAYxkB,CAEjB,IAAI5C,KAAKuJ,SACRvJ,KAAKuJ,SAAS+d,UAAUtnB,Odu0HnBe,WAAY,KACZC,aAAc,Mcl0HrBL,QAAAC,eAAWoJ,EAAAzJ,UAAA,kBdw0HJM,Icx0HP,WAEC,MAAOb,MAAKoK,aAAasG,gBdy0HnB3P,WAAY,KACZC,aAAc,Mcp0HrBL,QAAAC,eAAWoJ,EAAAzJ,UAAA,cd00HJM,Ic10HP,WAEC,MAAOb,MAAKoK,cd20HNrJ,WAAY,KACZC,aAAc,Mct0HrBL,QAAAC,eAAWoJ,EAAAzJ,UAAA,ed40HJM,Ic50HP,WAEC,MAAOb,MAAKunB,cAAgBvnB,KAAKoK,aAAaod,ad60HxC7kB,Ic10HP,SAAuBC,GAEtB5C,KAAKunB,aAAe3kB,Gd20Hd7B,WAAY,KACZC,aAAc,Mc9zHdgJ,GAAAzJ,UAAAU,QAAP,WAECjB,KAAKuJ,SAAW,IAEhB,IAAIiG,GAAaxP,KAAKknB,aAAa3nB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKknB,aAAaloB,GAAGiC,SAEtBjB,MAAKknB,aAAe,GAAI1hB,OAQlBwE,GAAAzJ,UAAAqZ,wBAAP,SAA+BC,GAE9B,MAAO7Z,MAAKoK,aAAawP,wBAAwBC,GAG3C7P,GAAAzJ,UAAAsc,gBAAP,SAAuBC,GAEtB9c,KAAKknB,aAAa7gB,KAAKyW,EAEvB,OAAOA,GAID9S,GAAAzJ,UAAAwc,mBAAP,SAA0BD,GAEzB,GAAI3W,GAAenG,KAAKknB,aAAalK,QAAQF,EAE7C9c,MAAKknB,aAAajK,OAAO9W,EAAO,EAEhC,OAAO2W,GAGD9S,GAAAzJ,UAAAknB,+BAAP,WAEC,GAAIjY,GAAaxP,KAAKknB,aAAa3nB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKknB,aAAaloB,GAAG0oB,qBAGhB1d,GAAAzJ,UAAAonB,sBAAP,WAEC,MAAO3nB,MAAKonB,UAEd,OAAApd,IArI0BxJ,EAuI1Bf,GAAqBJ,QAAZ2K,IdozHN7I,oCAAoCC,YAAYwmB,oCAAoC,SAASrpB,EAAQkB,EAAOJ,Geh9H/G,GAAO4L,GAAsB1M,EAAa,iDAK1C,IAAOmM,GAAcnM,EAAe,sCAGpC,IAAOspB,GAAkBtpB,EAAW,iDAGpC,IAAMupB,GAAQ,WA2Cb,QA3CKA,KAyCE9nB,KAAA+nB,aAAoB,CAI1B/nB,MAAKgoB,mBAELhoB,MAAKioB,uBACLjoB,MAAKkoB,UACLloB,MAAKmoB,gBACLnoB,MAAKooB,4BAGCN,EAAAvnB,UAAA8nB,KAAP,WAEC,GAAIroB,KAAKsoB,uBAAyB,MAAQtoB,KAAKuoB,cAAgB,MAAQvoB,KAAKwoB,oBAAsB,KACjG,MAEDxoB,MAAKyoB,uBACLzoB,MAAK0oB,2BACL,IAAIC,GAAY,CAChB,IAAIC,GAAK,CACT,IAAIC,GAAM,CACV,IAAIC,GAAe,CACnB,IAAIC,GAAuB,CAC3B,KAAIH,EAAK,EAAGA,EAAK5oB,KAAK+nB,aAAca,IAAK,CACxC,GAAII,GAAShpB,KAAKwoB,mBAAmB,EAErC,IAAGxoB,KAAKuoB,aAAaK,GAAM,EAC1BG,EAAuBD,CAExB9oB,MAAKyoB,qBAAqBK,GAAgBH,CAC1C3oB,MAAK0oB,yBAAyBI,KAAkBC,CAEhD,KAAIF,EAAM,EAAGA,EAAMG,EAAUH,IAC5B7oB,KAAKgoB,iBAAiBW,KAAeC,GAIjCd,GAAAvnB,UAAA0oB,gBAAP,SAAuBC,GAEtB,GAAGlpB,KAAKmoB,cAAce,IAAiB,KACtC,MAAO,EAER,UAAWlpB,MAAKmoB,cAAce,IAAmB,SAChD,MAAOlpB,MAAKmoB,cAAce,OACvB,CACH,KAAM,IAAIhqB,OAAM,oDAGjB,MAAO,GAED4oB,GAAAvnB,UAAA4oB,gBAAP,SAAuBvmB,EAAcsmB,GAEpClpB,KAAKmoB,cAAce,GAAkBtmB,EAG9BklB,GAAAvnB,UAAA6oB,aAAR,SAAqBC,EAAcC,EAAgBC,GAClD,GAAIvM,GAAUqM,EAAIG,UAAUD,GAAY,GAAGE,OAAOH,EAClD,OAAQtM,IAAW,EAAMA,GAAWuM,GAAY,GAAMvM,EAIhD8K,GAAAvnB,UAAAmpB,4BAAP,SAAmCC,EAAqBC,EAAqBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE5E,GAAG7pB,KAAKmoB,cAAcyB,IAAe,KAAK,CACzC,GAAG5pB,KAAKooB,yBAAyBwB,IAAe,KAAK,CACpD5pB,KAAKmoB,cAAcyB,GAAgBD,EAAUlV,QAAQqV,WAAW9pB,KAAKmoB,cAAcyB,GACnF5pB,MAAKooB,yBAAyBwB,GAAc,KAE7C,GAAGC,EACFhC,EAAmBkC,oBAAoBJ,EAAW3pB,KAAKmoB,cAAcyB,QAErE/B,GAAmBmC,0BAA0BL,EAAW3pB,KAAKmoB,cAAcyB,KAK9EjpB,QAAAC,eAAWknB,EAAAvnB,UAAA,af+4HJM,Ie/4HP,WAEC,MAAOb,MAAKgoB,iBAAiBzoB,Qfg5HvBwB,WAAY,KACZC,aAAc,Me74Hd8mB,GAAAvnB,UAAA0pB,2BAAP,SAAkC5hB,GAEjC,MAAOrI,MAAKioB,qBAAqB5f,GAG3Byf,GAAAvnB,UAAA2pB,8BAAP,SAAqCC,GAEpC,MAAOnqB,MAAKgoB,iBAAiBmC,GAGvBrC,GAAAvnB,UAAA6pB,mBAAP,WAEC,MAAOpqB,MAAKioB,qBAENH,GAAAvnB,UAAA8pB,0BAAP,SAAiChiB,GAEhC,GAAIiiB,GAAyBtqB,KAAKioB,qBAAqB5f,GAAII,OAC3D6hB,GAAWC,KAAK,EAChB,OAAOD,GAGDxC,GAAAvnB,UAAAiqB,uBAAP,SAA8BjqB,GAE7B,GAAI8H,GAAKrI,KAAKioB,qBAAqB1oB,MACnCS,MAAKioB,qBAAqB5f,GAAM9H,EAE1BunB,GAAAvnB,UAAAkqB,YAAP,SAAmBd,EAAqBe,GAEvC,GAAIC,GAAyB3qB,KAAKkoB,QAAQwC,EAC1C,IAAGC,GAAiB,EACnBhB,EAAUiB,kBAAkB5qB,KAAKyoB,qBAAqBkC,GAKjD7C,GAAAvnB,UAAAsqB,UAAP,SAAiBlB,EAAqB/mB,EAAckoB,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,MAEnD,GAAIC,GAAoBpB,EAAUiB,iBAElC,IAAIG,GAAcnoB,EACjB,MAED,IAAIooB,GAA8BrB,EAAUsB,wBAC5C,IAAIC,GAA6BlrB,KAAKgoB,iBAAiBplB,EAEvD,IAAIuoB,GAAoBnrB,KAAKyoB,qBAAqByC,EAElD,IAAIF,EAAuB,GAAKE,EAAqB,CACpDvB,EAAUyB,sBAAsBxoB,EAChC5C,MAAKqrB,mBAAmB1B,GAAYmB,EAAa,KACjD,QAID,GAAIE,GAAwBE,EAC3B,MAED,IAAII,GAAyBtrB,KAAK0oB,yBAAyBwC,Ef83HrD,Ie13HFK,GAAwBL,EAAsBF,CAClD,IAAIQ,GAAoBF,EAAkBN,Cf43HpC,Iez3HFS,GAA6BH,CAEjC,IAAIC,IAAiBC,EACpBC,EAAsBT,EAAuB,CAE9C,IAAIU,GAAe/B,EAAUgC,gBAC7B,IAAIC,KACJ,IAAI5sB,EACJ,IAAI6sB,EACJ,IAAI1nB,EACJ,IAAI2nB,EACJ,IAAInc,EAEJ,IAAI4b,GAAgBE,GAAuBP,EAAoB,EAkB/D,IAAKlsB,EAAI2qB,EAAUxK,YAAc,EAAGngB,GAAK,EAAGA,IAAK,CAChD8sB,EAAQnC,EAAUoC,UAAU/sB,EAC5B,IAAIwsB,EAAU,CACb7B,EAAU/U,YAAYkX,OAChB,IAAIP,EAAc,CACxBK,EAAiBE,EAAM/f,UAAY+f,EAAMhgB,Yf22HrC,Get2HFkgB,KACJ,IAAIC,GAAa,CACjB,IAAIC,GAAmC,CACvC,KAAK/nB,EAAIsnB,EAAqBtnB,GAAK+mB,EAAqB/mB,IAAK,CAC5D,GAAIgoB,GAA2BnsB,KAAKsoB,sBAAsBnkB,EAC1D,IAAIokB,GAAsBvoB,KAAKuoB,aAAapkB,EAC5C,IAAIioB,EACJ,IAAIC,EAEJ,IAAI9D,EAAe,EAAG,CAErB6D,EAAcpsB,KAAKssB,qBAAqBH,EACxCN,GAAYO,EAAcpsB,KAAKusB,sBAAsBJ,IACrD,KAAKntB,EAAIotB,EAAaptB,EAAI6sB,EAAW7sB,IAAK,CACzC2Q,EAAQ3P,KAAKwsB,oBAAoBxtB,GAAK,YAC/B0sB,GAAa/b,SACbic,GAAiBjc,IAI1B,GAAI4Y,EAAe,EAAG,CACrB6D,EAAcpsB,KAAKssB,qBAAqBH,EACxCN,GAAYO,EAAcpsB,KAAKusB,sBAAsBJ,IAGrD,KAAKntB,EAAI6sB,EAAY,EAAG7sB,GAAKotB,EAAaptB,IAAK,CAC9CqtB,EAAMrtB,EAAE,CACR,IAAI6W,GAAuB8T,EAAUU,0BAA0BrqB,KAAKysB,iBAAiBJ,GAErF1c,GAAQ3P,KAAKysB,iBAAiBJ,EAAM,GAAK,KACzCX,GAAa/b,GAASkG,CACtB+V,GAAiBjc,GAAS3Q,EAE3B,GAAGmF,GAAG+mB,EAAoB,CACzBgB,EAA4BE,GAI9B,GAAI7D,EAAe,EAClByD,EAAeC,KAAgBE,EAQjC,IAAKntB,EAAI2qB,EAAUxK,YAAc,EAAGngB,GAAK,EAAGA,IAAK,CAChD8sB,EAAQnC,EAAUoC,UAAU/sB,EAC5B2Q,GAAQmc,EAAM/f,QACd,IAAI6f,EAAiBjc,IAAUmc,EAAMhgB,iBAC7B8f,GAAiBjc,OAExBga,GAAU+C,cAAc1tB,GAO1B,IAAK,GAAI2tB,KAAOf,GAAkB,CACjC,GAAGgB,SAASD,GAAKT,EAA4B,CAC5CJ,EAAQJ,EAAaiB,EACrBb,GAAMhgB,WAAa8f,EAAiBe,EACpChD,GAAUkD,gBAAgBf,EAAOc,SAASD,KAG5C,IAAK7B,GAAeK,GAAcvoB,EACjC5C,KAAK0pB,4BAA4BC,EAAWuB,EAAqB,KAElE,KAAK,GAAIyB,KAAOf,GAAkB,CACjC,GAAGgB,SAASD,IAAMT,EAA6B,CAC9CJ,EAAQJ,EAAaiB,EACrBb,GAAMhgB,WAAa8f,EAAiBe,EACpChD,GAAUkD,gBAAgBf,EAAOc,SAASD,Kfw1HtC,Gen1HFR,EACJ,IAAI3c,GAAawc,EAAezsB,MAChC,KAAK4E,EAAI,EAAGA,EAAIqL,EAAKrL,IAAK,CACzBgoB,EAAoBH,EAAe7nB,EACnCnE,MAAK8sB,cAAcnD,EAAW3pB,KAAKssB,qBAAqBH,GAAoBnsB,KAAKusB,sBAAsBJ,IAGxGxC,EAAUsB,yBAA2BC,EAI/BpD,GAAAvnB,UAAA8qB,mBAAP,SAA0B1B,EAAqBoD,EAA0BlD,GAA1B,GAAAkD,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAlD,QAAA,GAA2B,CAA3BA,EAAA,MAExE,GAAIkB,GAAoBpB,EAAUiB,iBAClC,IAAIoC,GAAmCrD,EAAUsB,wBACjD,IAAIgC,GAA2BjtB,KAAKgoB,iBAAiB+C,EAErD,IAAGgC,GAAe/sB,KAAKyoB,qBAAqBwE,IAAsBlC,EACjE/qB,KAAK0pB,4BAA4BC,EAAWsD,EAAmBpD,EAEhE,IAAGmD,GAA6BC,EAAmB,CAClDtD,EAAUsB,yBAA2BgC,CAErC,IAAId,GAAoBnsB,KAAKsoB,sBAAsB2E,EACnD,IAAI1E,GAAevoB,KAAKuoB,aAAa0E,EAErC,IAAG1E,EAAe,EAAG,CACpB,IAAK,GAAIvpB,GAAW2qB,EAAUxK,YAAc,EAAGngB,GAAK,EAAGA,IACtD2qB,EAAU+C,cAAc1tB,OACnB,IAAIupB,EAAe,EAAG,CAC5BvoB,KAAKktB,wBAAwBvD,EAAW3pB,KAAKssB,qBAAqBH,GAAoBnsB,KAAKusB,sBAAsBJ,MAGlH,GAAG5D,EAAe,EACjBvoB,KAAKmtB,qBAAqBxD,EAAW3pB,KAAKssB,qBAAqBH,GAAoBnsB,KAAKusB,sBAAsBJ,KAE/G,IAAG5D,EAAe,EACjBvoB,KAAK8sB,cAAcnD,EAAW3pB,KAAKssB,qBAAqBH,GAAoBnsB,KAAKusB,sBAAsBJ,OAMnGrE,GAAAvnB,UAAA2sB,wBAAP,SAA+BE,EAA2BhB,EAAoB5c,GAE7E,IAAI,GAAIxQ,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC9BouB,EAAgBC,mBAAmBrtB,KAAKwsB,oBAAoBJ,EAAcptB,GAAK,OAK1E8oB,GAAAvnB,UAAA4sB,qBAAP,SAA4BC,EAA2BhB,EAAoB5c,Gfy0HpE,Ger0HF6c,EACJ,IAAIR,GAAmBO,EAAc5c,CACrC,KAAK,GAAIxQ,GAAW6sB,EAAY,EAAG7sB,GAAKotB,EAAaptB,IAAK,CACzDqtB,EAAMrtB,EAAE,CACR,IAAI6W,GAAuBuX,EAAgB/C,0BAA0BrqB,KAAKysB,iBAAiBJ,GAC3FxW;EAAO/J,WAAa9M,CACpBouB,GAAgBP,gBAAgBhX,EAAQ7V,KAAKysB,iBAAiBJ,EAAM,GAAK,QAIpEvE,GAAAvnB,UAAAusB,cAAP,SAAqBM,EAA2BhB,EAAoB5c,GAEnE,GAAI8d,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI9B,GAAmBO,EAAc5c,CACrC,KAAI,GAAIxQ,GAAWotB,EAAaptB,EAAI6sB,EAAW7sB,IAAK,CACnD,GAAI6W,GAAuBuX,EAAgBQ,oBAAoB5tB,KAAK6tB,oBAAoB7uB,GACxF,IAAI6W,GAAU,KAAM,CACnB8X,EAAO,IAEP,IAAI9X,EAAOpB,SAAWoB,EAAOpB,QAAQqZ,oBACpCH,EAAO,KACRL,GAAkBttB,KAAK+tB,kCAAkC/uB,EACzDuuB,GAAYvtB,KAAKguB,iCAAiChvB,EAClDwuB,GAAkBF,EAAkBC,CACpC,KAAI,GAAIptB,GAAWmtB,EAAiBntB,EAAIqtB,EAAiBrtB,IAAK,CAC7DutB,EAAa1tB,KAAKiuB,qBAAqB9tB,EACvCstB,GAAoBztB,KAAKkuB,sBAAsB/tB,EAC/C,QAAOutB,GACN,IAAK,GAEJ,KAED,KAAK,GACJ,GAAIC,EAAM,CACTF,GAAqB,CACrB,IAAIU,GAAsBtY,EAAOvB,UACjC6Z,GAAW/a,QAAQ,GAAKpT,KAAKouB,8BAA8BX,IAC3DU,GAAW/a,QAAQ,GAAKpT,KAAKouB,8BAA8BX,IAC3DU,GAAW/a,QAAQ,GAAKpT,KAAKouB,8BAA8BX,IAC3DU,GAAW/a,QAAQ,GAAKpT,KAAKouB,8BAA8BX,IAC3DU,GAAW/a,QAAQ,IAAMpT,KAAKouB,8BAA8BX,IAC5DU,GAAW/a,QAAQ,IAAMpT,KAAKouB,8BAA8BX,EAE5D5X,GAAO5S,EAAIkrB,EAAW/a,QAAQ,GAC9ByC,GAAO3S,EAAIirB,EAAW/a,QAAQ,GAE9ByC,GAAOlE,eAAiB,IAExBkE,GAAO3G,kCAAkCjE,EAAuByH,iBAGjE,KAED,KAAK,GACJ,GAAIib,EAAM,CACTF,GAAqB,CACrB,IAAIY,GAAwBxY,EAAOvG,mBAAqBuG,EAAOvG,iBAAmB,GAAI5E,GACtF2jB,GAAOC,cAAgBtuB,KAAKuuB,yBAAyBd,IACrDY,GAAOG,gBAAkBxuB,KAAKuuB,yBAAyBd,IACvDY,GAAOI,eAAiBzuB,KAAKuuB,yBAAyBd,IACtDY,GAAOhf,gBAAkBrP,KAAKuuB,yBAAyBd,IACvDY,GAAOK,UAAY1uB,KAAKuuB,yBAAyBd,IACjDY,GAAOM,YAAc3uB,KAAKuuB,yBAAyBd,IACnDY,GAAOO,WAAa5uB,KAAKuuB,yBAAyBd,IAClDY,GAAOQ,YAAc7uB,KAAKuuB,yBAAyBd,EAEnD5X,GAAO3G,kCAAkCjE,EAAuBkE,iBAGjE,KAED,KAAK,Gf6zHiB,GexzHjB2f,EACJ,IAAIva,GAA6B,GAAI/O,MACrC,IAAIupB,GAAkB/uB,KAAKgvB,sBAAsBvB,IAIjD,KAAI,GAAI5U,GAAW,EAAGA,EAAIkW,EAAUlW,IACnC,GAAIiW,EAAO1B,EAAgBQ,oBAAoB5tB,KAAKgvB,sBAAsBvB,MACzElZ,EAAMlO,KAAKyoB,EAEbjZ,GAAOtB,MAAQA,CAEf,MAED,KAAK,GACJsB,EAAO0U,KAAOvqB,KAAKivB,0BAA0BxB,EAC7CL,GAAgB3Y,QAAQya,qBAAqBrZ,EAE7C,MAED,KAAK,GACJA,EAAO0U,KAAOvqB,KAAKivB,0BAA0BxB,EAEjC5X,GAAQsZ,oBACpB/B,GAAgB3Y,QAAQya,qBAAqBrZ,EAE7C,MAED,KAAK,GACJ,IAAKA,EAAOpB,UAAYoB,EAAOpB,QAAQ2a,uBACtCvZ,EAAO6D,QAAU2V,QAAQ5B,EAE1B,MAED,KAAK,IACJ,GAAIE,EAAM,CACTF,GAAqB,CACrB,IAAIU,GAAsBtY,EAAOvB,UACjC6Z,GAAW/a,QAAQ,GAAKpT,KAAKsvB,oCAAoC7B,IACjEU,GAAW/a,QAAQ,GAAKpT,KAAKsvB,oCAAoC7B,IACjEU,GAAW/a,QAAQ,GAAKpT,KAAKsvB,oCAAoC7B,IACjEU,GAAW/a,QAAQ,GAAKpT,KAAKsvB,oCAAoC7B,EACjE5X,GAAOlE,eAAiB,IAExBkE,GAAO3G,kCAAkCjE,EAAuByH,iBAGjE,KAED,KAAK,IACJ,GAAIib,EAAM,CACTF,GAAqB,CACrB5X,GAAO5S,EAAIjD,KAAKuvB,8BAA8B9B,IAC9C5X,GAAO3S,EAAIlD,KAAKuvB,8BAA8B9B,GAE/C,KAED,KAAK,KACJ5X,EAAO5C,SAAW,IAClB,MAED,KAAK,KACJ4C,EAAOtB,MAAQ,IACf,MAED,SACC,UAOP,OAAAuT,KAEAroB,GAAkBJ,QAATyoB,IfuyHNtI,sCAAsCpe,UAAU2e,iDAAiD,iDAAiDyP,iDAAiD,mDAAmDC,sCAAsC,SAASlxB,EAAQkB,EAAOJ,GAIvT,GgB3zIMqwB,GAAU,WAAhB,QAAMA,MAON,MAAAA,KAEAjwB,GAAoBJ,QAAXqwB,OhByzIHzP,qCAAqC,SAAS1hB,EAAQkB,EAAOJ,GiBn0InE,GAAOwL,GAAQtM,EAAe,gCAC9B,IAAOuM,GAAavM,EAAa,qCAEjC,IAAOyM,GAAQzM,EAAe,gCjB03I9B,IiB/zIM6M,GAAS,WAkNd,QAlNKA,GAkNOukB,GA5ML3vB,KAAA4vB,UAAqB,GAAI5kB,EA8M/BhL,MAAK6vB,eAAiBF,EAzMvBhvB,OAAAC,eAAWwK,EAAA7K,UAAA,cjB6zIJM,IiB7zIP,WAEC,GAAIivB,GAAoBhlB,EAAcilB,WAAW/vB,KAAK6vB,eAAevb,WACrEwb,GAASE,QAET,OAAOF,IjB6zID/uB,WAAY,KACZC,aAAc,MiBrzIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,kBjB8zIJM,IiB9zIP,WAEC,MAAOb,MAAK6vB,eAAevgB,kBjB+zIrB3M,IiB5zIP,SAA0BkN,GAEzB7P,KAAK6vB,eAAevgB,iBAAmBO,GjB6zIjC9O,WAAY,KACZC,aAAc,MiBpzIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,8BjB8zIJM,IiB9zIP,WAEC,MAAOb,MAAKiwB,6BjB+zINlvB,WAAY,KACZC,aAAc,MiBlzIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,sBjBg0IJM,IiBh0IP,WAEC,MAAOb,MAAKkwB,qBjBi0INnvB,WAAY,KACZC,aAAc,MiB5zIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,cjBk0IJM,IiBl0IP,WAEC,GAAIivB,GAAoBhlB,EAAcqlB,MAAMnwB,KAAK6vB,eAAevb,WAChEwb,GAASE,QAET,OAAOF,IjBk0ID/uB,WAAY,KACZC,aAAc,MiB7zIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,iBjBm0IJM,IiBn0IP,WAEC,MAAOiK,GAAcilB,WAAW/vB,KAAK6vB,eAAevb,ajBo0I9CvT,WAAY,KACZC,aAAc,MiB/zIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,cjBq0IJM,IiBr0IP,WAEC,GAAIivB,GAAoBhlB,EAAcslB,SAASpwB,KAAK6vB,eAAevb,WACnEwb,GAASE,QAET,OAAOF,IjBq0ID/uB,WAAY,KACZC,aAAc,MiBzyIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,YjBwzIJM,IiBxzIP,WAEC,MAAOb,MAAK6vB,eAAevb,YjByzIrB3R,IiBtzIP,SAAoBkN,GAEnB7P,KAAK6vB,eAAevb,WAAazE,GjBuzI3B9O,WAAY,KACZC,aAAc,MiBtyIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,ejB6yIJM,IiB7yIP,WAEC,MAAOb,MAAKqwB,cjB8yINtvB,WAAY,KACZC,aAAc,MiBzyIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,YjB+yIJM,IiB/yIP,WAEC,MAAOb,MAAK6vB,eAAevb,WAAW2B,UjBgzIhCtT,IiB7yIP,SAAoBC,GAEnB5C,KAAK6vB,eAAe5sB,EAAIL,EAAMK,CAC9BjD,MAAK6vB,eAAe3sB,EAAIN,EAAMM,CAC9BlD,MAAK6vB,eAAetpB,EAAI3D,EAAM2D,GjB8yIxBxF,WAAY,KACZC,aAAc,MiBzyIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,ejB+yIJM,IiB/yIP,WAEC,MAAOiK,GAAcslB,SAASpwB,KAAK6vB,eAAevb,ajBgzI5CvT,WAAY,KACZC,aAAc,MiB3yIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,YjBizIJM,IiBjzIP,WAEC,MAAO,IAAImK,GAAShL,KAAK6vB,eAAe7f,UAAWhQ,KAAK6vB,eAAe5f,UAAWjQ,KAAK6vB,eAAe3f,YjBkzIhGvN,IiB/yIP,SAAoBC,GAEnB5C,KAAK6vB,eAAe7f,UAAYpN,EAAMK,CACtCjD,MAAK6vB,eAAe5f,UAAYrN,EAAMM,CACtClD,MAAK6vB,eAAe3f,UAAYtN,EAAM2D,GjBgzIhCxF,WAAY,KACZC,aAAc,MiB3yIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,SjBizIJM,IiBjzIP,WAEC,MAAO,IAAImK,GAAShL,KAAK6vB,eAAe1c,OAAQnT,KAAK6vB,eAAe1f,OAAQnQ,KAAK6vB,eAAejgB,SjBkzI1FjN,IiB/yIP,SAAiBC,GAEhB5C,KAAK6vB,eAAe1c,OAASvQ,EAAMK,CACnCjD,MAAK6vB,eAAe1f,OAASvN,EAAMM,CACnClD,MAAK6vB,eAAejgB,OAAShN,EAAM2D,GjBgzI7BxF,WAAY,KACZC,aAAc,MiB3yIrBL,QAAAC,eAAWwK,EAAA7K,UAAA,YjBizIJM,IiBjzIP,WAEC,MAAOiK,GAAcqlB,MAAMnwB,KAAK6vB,eAAevb,ajBkzIzCvT,WAAY,KACZC,aAAc,MiBzxIdoK,GAAA7K,UAAA+vB,oBAAP,SAA2BC,GAE1B,MAAO,IAAI1lB,GASLO,GAAA7K,UAAAiwB,YAAP,SAAmB7V,GAElB3a,KAAK6vB,eAAejV,eAAe5P,EAASoP,OAAQO,GAQ9CvP,GAAA7K,UAAAkwB,aAAP,SAAoB9V,GAEnB3a,KAAK6vB,eAAejV,eAAe5P,EAASoP,QAASO,GAS/CvP,GAAA7K,UAAAmwB,SAAP,SAAgB/V,GAEf3a,KAAK6vB,eAAejV,eAAe5P,EAASwO,QAASmB,GAQ/CvP,GAAA7K,UAAAowB,UAAP,SAAiBhW,GAEhB3a,KAAK6vB,eAAejV,eAAe5P,EAASwO,OAAQmB,GAQ9CvP,GAAA7K,UAAAqwB,OAAP,SAAcjW,GAEb3a,KAAK6vB,eAAejV,eAAe5P,EAASwN,OAAQmC,GAQ9CvP,GAAA7K,UAAAswB,SAAP,SAAgBlW,GAEf3a,KAAK6vB,eAAejV,eAAe5P,EAASwN,QAASmC,GAEvD,OAAAvP,KAEmB3L,GAAAJ,QAAV+L,IjBgyINsU,gCAAgCte,UAAUue,qCAAqCve,UAAU0e,gCAAgC1e,YAAY0vB,+CAA+C,SAASvyB,EAAQkB,EAAOJ,GAC/M,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkBjpJtB,IAAOujB,GAAcrlB,EAAc,4CAEnC,IAAOmD,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAKrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4ClBipJrC,IkB1oJMwyB,GAAmB,SAAArwB,GAASX,EAA5BgxB,EAAmBrwB,EAkOxB,SAlOKqwB,GAkOOhvB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAhOC/B,MAAAgC,aAAsB,CACtBhC,MAAAgxB,kBAA4B,IAC5BhxB,MAAAixB,mBAA6B,IAe7BjxB,MAAAkxB,mBAA6B,IAC7BlxB,MAAAmxB,oBAA8B,IAC9BnxB,MAAAkC,eAAyB,KA+MhClC,MAAKsC,WAAatC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAId,GAAiB1B,KAAKuC,qBAAuB,GAAIb,EAE3J1B,MAAKgC,aAAehC,KAAKsC,WAAWI,MA5MrC/B,OAAAC,eAAWmwB,EAAAxwB,UAAA,alBgoJJM,IkBhoJP,WAEC,MAAOkwB,GAAoB7vB,WlBioJrBH,WAAY,KACZC,aAAc,MkB9nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,elBioJJM,IkBjoJP,WAEC,MAAOb,MAAKgC,clBkoJNjB,WAAY,KACZC,aAAc,MkB3nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,uBlBmoJJM,IkBnoJP,WAEC,MAAOb,MAAKoxB,sBlBooJNzuB,IkBjoJP,SAA+BC,GAE9B,GAAI5C,KAAKoxB,sBAAwBxuB,EAChC,MAED5C,MAAKoxB,qBAAuBxuB,GlBioJtB7B,WAAY,KACZC,aAAc,MkB5nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,mBlBkoJJM,IkBloJP,WAEC,MAAOb,MAAKqxB,kBlBmoJN1uB,IkBhoJP,SAA2BC,GAE1B,GAAI5C,KAAKqxB,kBAAoBzuB,EAC5B,MAED5C,MAAKqxB,iBAAmBzuB,CAExB,IAAI5C,KAAKsxB,cACRtxB,KAAKsxB,cAAcxtB,WAAa9D,KAAKqxB,gBAEtC,IAAIrxB,KAAKuxB,cACRvxB,KAAKuxB,cAAcztB,WAAa9D,KAAKqxB,kBlB8nJhCtwB,WAAY,KACZC,aAAc,MkBvnJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,iBlB+nJJM,IkB/nJP,WAEC,MAAOb,MAAKkC,gBlBgoJNS,IkB7nJP,SAAyBC,GAExB,GAAI5C,KAAKkC,gBAAkBU,EAC1B,MAED5C,MAAKkC,eAAiBU,GlB6nJhB7B,WAAY,KACZC,aAAc,MkBvnJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,qBlB8nJJM,IkB9nJP,WAEC,MAAOb,MAAKkxB,oBlB+nJNvuB,IkB5nJP,SAA6BC,GAE5B,GAAI5C,KAAKkxB,oBAAsBtuB,EAC9B,MAED5C,MAAKkxB,mBAAqBtuB,GlB4nJpB7B,WAAY,KACZC,aAAc,MkBtnJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,sBlB6nJJM,IkB7nJP,WAEC,MAAOb,MAAKmxB,qBlB8nJNxuB,IkB3nJP,SAA8BC,GAE7B,GAAI5C,KAAKmxB,qBAAuBvuB,EAC/B,MAED5C,MAAKmxB,oBAAsBvuB,GlB2nJrB7B,WAAY,KACZC,aAAc,MkBtnJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,alB4nJJM,IkB5nJP,WAEC,MAAOb,MAAKsC,YlB6nJNvB,WAAY,KACZC,aAAc,MkBxnJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,WlB8nJJM,IkB9nJP,WAEC,IAAKb,KAAKwxB,UAAYxxB,KAAKoI,eAAepI,KAAKwxB,SAASnpB,IACvDrI,KAAKyxB,WAAWzxB,KAAKwxB,SAEtB,OAAOxxB,MAAKwxB,UlB8nJNzwB,WAAY,KACZC,aAAc,MkBznJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,YlB+nJJM,IkB/nJP,WAEC,IAAKb,KAAK0xB,WAAa1xB,KAAKoI,eAAepI,KAAK0xB,UAAUrpB,IACzDrI,KAAK2xB,YAAY3xB,KAAK0xB,UAEvB,OAAO1xB,MAAK0xB,WlB+nJN3wB,WAAY,KACZC,aAAc,MkB1nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,elBgoJJM,IkBhoJP,WAEC,GAAIb,KAAKgxB,kBACRhxB,KAAK4xB,mBAEN,OAAO5xB,MAAK6xB,clBgoJN9wB,WAAY,KACZC,aAAc,MkB3nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,gBlBioJJM,IkBjoJP,WAEC,GAAIb,KAAKixB,mBACRjxB,KAAK8xB,oBAEN,OAAO9xB,MAAK+xB,elBioJNhxB,WAAY,KACZC,aAAc,MkB5nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,OlBkoJJM,IkBloJP,WAEC,IAAKb,KAAK8C,MAAQ9C,KAAKoI,eAAepI,KAAK8C,KAAKuF,IAC/CrI,KAAK6C,OAAO7C,KAAK8C,KAElB,OAAO9C,MAAK8C,MlBkoJN/B,WAAY,KACZC,aAAc,MkB7nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,gBlBmoJJM,IkBnoJP,WAEC,MAAOb,MAAKgyB,elBooJNjxB,WAAY,KACZC,aAAc,MkB/nJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,gBlBqoJJM,IkBroJP,WAEC,MAAOb,MAAKsxB,elBsoJNvwB,WAAY,KACZC,aAAc,MkBjoJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,gBlBuoJJM,IkBvoJP,WAEC,MAAOb,MAAKuxB,elBwoJNxwB,WAAY,KACZC,aAAc,MkBtoJrBL,QAAAC,eAAWmwB,EAAAxwB,UAAA,wBlByoJJM,IkBzoJP,WAEC,MAAOb,MAAKiyB,uBlB0oJNlxB,WAAY,KACZC,aAAc,MkB5nJd+vB,GAAAxwB,UAAAwC,qBAAP,WAEC,MAAO/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cAI1B+uB,GAAAxwB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GAEvC,MAAO,MASDwqB,GAAAxwB,UAAAuH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAU/H,KAAKsC,WAClB,MAED,IAAIyF,YAAkBrG,GAAkB,CACvC1B,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAAgCyF,MAC/B,IAAIA,EAAQ,CAClB/H,KAAKsC,WAAWK,IAAIoF,EAAQC,OACtB,CACNhI,KAAKiI,sBAAsBjI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAIZ,GAAiB1B,KAAKuC,qBAG7CvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC,IAAI1C,KAAKkxB,mBACRlxB,KAAKkI,qBAAqBlI,KAAKwxB,SAEhC,IAAIxxB,KAAKmxB,oBACRnxB,KAAKkI,qBAAqBlI,KAAK0xB,UAEhC,IAAI1xB,KAAKkC,eACRlC,KAAKkI,qBAAqBlI,KAAK8C,KAEhC9C,MAAKmI,mBAELnI,MAAKkI,qBAAqBlI,KAAKsC,WAE/BtC,MAAKoI,eAAepI,KAAKsC,WAAW+F,IAAM,MASpC0oB,GAAAxwB,UAAAkxB,WAAP,SAAkB1pB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAKhI,KAAKkxB,mBAAoB,CAC7B,GAAInpB,GAAU/H,KAAKwxB,SAClB,MAED,IAAIzpB,YAAkBrG,GAAkB,CACvC1B,KAAKiI,sBAAsBjI,KAAKwxB,SAChCxxB,MAAKwxB,SAA8BzpB,MAC7B,IAAIA,EAAQ,CAClB,IAAK/H,KAAKwxB,SACTxxB,KAAKwxB,SAAW,GAAI9vB,GAAiB1B,KAAKuC,oBAE3CvC,MAAKwxB,SAAS7uB,IAAIoF,EAAQC,OACpB,IAAIhI,KAAKwxB,SAAU,CACzBxxB,KAAKiI,sBAAsBjI,KAAKwxB,SAChCxxB,MAAKwxB,SAAW,IAChB,aAEK,CACN,GAAIxxB,KAAKgxB,kBACRhxB,KAAK4xB,mBAEN5xB,MAAKwxB,SAAW3vB,EAAiBqwB,gBAAgBlyB,KAAKwI,UAAWxI,KAAK6xB,aAAc7xB,KAAKwxB,SAAUxxB,KAAKuC,qBAGzGvC,KAAKkI,qBAAqBlI,KAAKwxB,SAE/BxxB,MAAKoI,eAAepI,KAAKwxB,SAASnpB,IAAM,MASlC0oB,GAAAxwB,UAAAoxB,YAAP,SAAmB5pB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAKhI,KAAKmxB,oBAAqB,CAC9B,GAAIppB,GAAU/H,KAAK0xB,UAClB,MAED,IAAI3pB,YAAkBrG,GAAkB,CACvC1B,KAAKiI,sBAAsBjI,KAAK0xB,UAChC1xB,MAAK0xB,UAA+B3pB,MAC9B,IAAIA,EAAQ,CAClB,IAAK/H,KAAK0xB,UACT1xB,KAAK0xB,UAAY,GAAIhwB,GAAiB1B,KAAKuC,oBAE5CvC,MAAK0xB,UAAU/uB,IAAIoF,EAAQC,OACrB,IAAIhI,KAAK0xB,UAAW,CAC1B1xB,KAAKiI,sBAAsBjI,KAAK0xB,UAChC1xB,MAAK0xB,UAAY,IACjB,aAEK,CACN,GAAI1xB,KAAKixB,mBACRjxB,KAAK8xB,oBAEN,IAAI9xB,KAAKgxB,kBACRhxB,KAAK4xB,mBAEN5xB,MAAK0xB,UAAY7vB,EAAiBswB,iBAAiBnyB,KAAKwI,UAAWxI,KAAK+xB,cAAe/xB,KAAK6xB,aAAc7xB,KAAK0xB,UAAW1xB,KAAKuC,qBAGhIvC,KAAKkI,qBAAqBlI,KAAK0xB,UAE/B1xB,MAAKoI,eAAepI,KAAK0xB,UAAUrpB,IAAM,MASnC0oB,GAAAxwB,UAAAsC,OAAP,SAAckF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKhI,KAAKkC,eAAgB,CACzB,GAAI6F,GAAU/H,KAAK8C,KAClB,MAED,IAAIiF,YAAkBpG,GAAkB,CACvC3B,KAAKiI,sBAAsBjI,KAAK8C,KAChC9C,MAAK8C,KAA0BiF,MACzB,IAAIA,EAAQ,CAClB,IAAK/H,KAAK8C,KACT9C,KAAK8C,KAAO,GAAInB,GAAiB3B,KAAKuC,oBAEvCvC,MAAK8C,KAAKH,IAAIoF,EAAQC,OAChB,IAAIhI,KAAK8C,KAAM,CACrB9C,KAAKiI,sBAAsBjI,KAAK8C,KAChC9C,MAAK8C,KAAO,IACZ,aAEK,CACN9C,KAAK8C,KAAOjB,EAAiB0G,YAAYvI,KAAKwI,UAAWxI,KAAK8C,KAAM9C,KAAKuC,oBAAqBvC,KAAKgC,cAGpG,GAAIhC,KAAKmxB,oBACRnxB,KAAKkI,qBAAqBlI,KAAK0xB,UAEhC1xB,MAAKkI,qBAAqBlI,KAAK8C,KAE/B9C,MAAKoI,eAAepI,KAAK8C,KAAKuF,IAAM,MAS9B0oB,GAAAxwB,UAAA6xB,gBAAP,SAAuBrqB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU/H,KAAKgyB,cAClB,MAED,IAAIjqB,YAAkBpG,GAAkB,CACvC3B,KAAKiI,sBAAsBjI,KAAKgyB,cAChChyB,MAAKgyB,cAAmCjqB,MAClC,IAAIA,EAAQ,CAClB,IAAK/H,KAAKgyB,cACThyB,KAAKgyB,cAAgB,GAAIrwB,GAAiB3B,KAAKuC,oBAEhDvC,MAAKgyB,cAAcrvB,IAAIoF,EAAQC,OACzB,IAAIhI,KAAKgyB,cAAe,CAC9BhyB,KAAKiI,sBAAsBjI,KAAKgyB,cAChChyB,MAAKgyB,cAAgB,IACrB,QAGDhyB,KAAKkI,qBAAqBlI,KAAKgyB,cAE/BhyB,MAAKoI,eAAepI,KAAKgyB,cAAc3pB,IAAM,MASvC0oB,GAAAxwB,UAAA8xB,gBAAP,SAAuBtqB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU/H,KAAKsxB,cAClB,MAED,IAAIvpB,YAAkB6b,GAAgB,CACrC5jB,KAAKiI,sBAAsBjI,KAAKsxB,cAChCtxB,MAAKsxB,cAAiCvpB,MAChC,IAAIA,EAAQ,CAClB,IAAK/H,KAAKsxB,cACTtxB,KAAKsxB,cAAgB,GAAI1N,GAAeI,aAAchkB,KAAKqxB,iBAAkBrxB,KAAKuC,oBAEnF,IAAIvC,KAAKoxB,qBAAsB,CAC9B,GAAIpyB,GAAW,CACf,IAAIszB,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAI7xB,OAErBX,MAAKiyB,sBAAwB,GAAIzsB,MAEjC,OAAOxG,EAAI+I,EAAOxI,OAAQ,CACzB+yB,EAAWvqB,EAAO/I,EAGlB,IAAIwzB,EAAIF,IAAalxB,UAAW,CAC/BoxB,EAAIF,GAAYC,CAChBvyB,MAAKiyB,sBAAsBM,KAAcD,EAI1CvqB,EAAO/I,KAAOwzB,EAAIF,IAIpBtyB,KAAKsxB,cAAc3uB,IAAIoF,EAAQC,OAEzB,IAAIhI,KAAKsxB,cAAe,CAC9BtxB,KAAKiI,sBAAsBjI,KAAKsxB,cAChCtxB,MAAKsxB,cAAgB,IACrB,QAGDtxB,KAAKkI,qBAAqBlI,KAAKsxB,cAE/BtxB,MAAKoI,eAAepI,KAAKsxB,cAAcjpB,IAAM,MASvC0oB,GAAAxwB,UAAAkyB,gBAAP,SAAuB1qB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU/H,KAAKuxB,cAClB,MAED,IAAIxpB,YAAkB6b,GAAgB,CACrC5jB,KAAKiI,sBAAsBjI,KAAKuxB,cAChCvxB,MAAKuxB,cAAiCxpB,MAChC,IAAIA,EAAQ,CAClB,IAAK/H,KAAKuxB,cACTvxB,KAAKuxB,cAAgB,GAAI3N,GAAeI,aAAchkB,KAAKqxB,iBAAkBrxB,KAAKuC,oBAEnFvC,MAAKuxB,cAAc5uB,IAAIoF,EAAQC,OAEzB,IAAIhI,KAAKuxB,cAAe,CAC9BvxB,KAAKiI,sBAAsBjI,KAAKuxB,cAChCvxB,MAAKuxB,cAAgB,IACrB,QAGDvxB,KAAKkI,qBAAqBlI,KAAKuxB,cAE/BvxB,MAAKoI,eAAepI,KAAKuxB,cAAclpB,IAAM,MAMvC0oB,GAAAxwB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAWrB,SAChBjB,MAAKsC,WAAa,IAElB,IAAItC,KAAKwxB,SAAU,CAClBxxB,KAAKwxB,SAASvwB,SACdjB,MAAKwxB,SAAW,KAGjB,GAAIxxB,KAAK0xB,UAAW,CACnB1xB,KAAK0xB,UAAUzwB,SACfjB,MAAK0xB,UAAY,KAGlB,GAAI1xB,KAAK8C,KAAM,CACd9C,KAAK8C,KAAK7B,SACVjB,MAAK8C,KAAO,KAGb,GAAI9C,KAAKgyB,cAAe,CACvBhyB,KAAKgyB,cAAc/wB,SACnBjB,MAAKgyB,cAAgB,KAGtB,GAAIhyB,KAAKsxB,cAAe,CACvBtxB,KAAKsxB,cAAcrwB,SACnBjB,MAAKsxB,cAAgB,KAGtB,GAAItxB,KAAKuxB,cAAe,CACvBvxB,KAAKuxB,cAActwB,SACnBjB,MAAKuxB,cAAgB,KAGtB,GAAIvxB,KAAK6xB,aAAc,CACtB7xB,KAAK6xB,aAAa5wB,SAClBjB,MAAK6xB,aAAe,KAGrB,GAAI7xB,KAAK+xB,cAAe,CACvB/xB,KAAK+xB,cAAc9wB,SACnBjB,MAAK+xB,cAAgB,MAYhBhB,GAAAxwB,UAAAqI,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7BtH,EAAAH,UAAMqI,WAAUtJ,KAAAU,KAAC+H,EAAQC,EAEzBhI,MAAKgxB,kBAAoB,IACzBhxB,MAAKixB,mBAAqB,IAE1B,IAAIjxB,KAAKkxB,mBACRlxB,KAAKkI,qBAAqBlI,KAAKwxB,SAEhC,IAAIxxB,KAAKmxB,oBACRnxB,KAAKkI,qBAAqBlI,KAAK0xB,UAEhC,IAAI1xB,KAAKkC,eACRlC,KAAKkI,qBAAqBlI,KAAK8C,MAO1BiuB,GAAAxwB,UAAAkI,MAAP,WAEC,GAAIA,GAA4B,GAAIsoB,GAAoB/wB,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBkG,QAAU,KAGrHA,GAAMiqB,kBAAoB,KAC1BjqB,GAAMkqB,mBAAqB,KAC3BlqB,GAAMC,cAAgB,KAEtB,IAAI1I,KAAK2I,QACRF,EAAMG,WAAW5I,KAAK2I,QAAQF,QAE/B,IAAIzI,KAAK4yB,QACRnqB,EAAMgpB,WAAWzxB,KAAK4yB,QAAQnqB,QAE/B,IAAIzI,KAAK6I,IACRJ,EAAM5F,OAAO7C,KAAK6I,IAAIJ,QAEvB,IAAIzI,KAAK6yB,SACRpqB,EAAMkpB,YAAY3xB,KAAK6yB,SAASpqB,QAEjC,IAAIzI,KAAK8yB,aACRrqB,EAAM2pB,gBAAgBpyB,KAAK8yB,aAAarqB,QAEzCA,GAAMsqB,gBAAkB/yB,KAAKqxB,gBAE7B,IAAIrxB,KAAKgzB,aACRvqB,EAAM4pB,gBAAgBryB,KAAKgzB,aAAavqB,QAEzC,IAAIzI,KAAKizB,aACRxqB,EAAMgqB,gBAAgBzyB,KAAKizB,aAAaxqB,QAGzCA,GAAMiqB,kBAAoB1yB,KAAKkxB,kBAC/BzoB,GAAMkqB,mBAAqB3yB,KAAKmxB,mBAChC1oB,GAAMC,cAAgB1I,KAAKkC,cAE3B,OAAOuG,GAGDsoB,GAAAxwB,UAAAuI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCnH,EAAiBoH,SAASF,EAAQC,EAAQhJ,KAAK6I,IAAK7I,KAAK6I,IAAInG,OAOvDquB,GAAAxwB,UAAA2I,MAAP,SAAaA,GAEZrH,EAAiBqH,MAAMA,EAAOlJ,KAAK4D,UAAW5D,KAAKgC,cAG7C+uB,GAAAxwB,UAAA4I,oBAAP,SAA2BC,GAE1BvH,EAAiBsH,oBAAoBC,EAAWpJ,KAAK4D,UAAW5D,KAAK4yB,QAAS5yB,KAAK6yB,SAAU7yB,KAAKgC,cAM3F+uB,GAAAxwB,UAAAuxB,mBAAR,WAEC9xB,KAAK+xB,cAAgBlwB,EAAiBqxB,qBAAqBlzB,KAAKwI,UAAWxI,KAAKsC,WAAYtC,KAAK6I,IAAK7I,KAAK+xB,cAAe/xB,KAAKwI,UAAU9F,MAEzI1C,MAAKixB,mBAAqB,MAMnBF,GAAAxwB,UAAAqxB,kBAAR,WAEC5xB,KAAK6xB,aAAehwB,EAAiBsxB,oBAAoBnzB,KAAKwI,UAAWxI,KAAKsC,WAAYtC,KAAK6xB,aAAc7xB,KAAKwI,UAAU9F,MAE5H1C,MAAKgxB,kBAAoB,MAGnBD,GAAAxwB,UAAA8I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB8pB,sBAAsBpzB,KAAMuJ,EAAUC,EAAoBC,GAhqBpEsnB,GAAA7vB,UAAmB,6BAkqBlC,OAAA6vB,IApqBkCnvB,EAsqBlCnC,GAA6BJ,QAApB0xB,IlBigJNpM,4CAA4CvjB,UAAUuI,8CAA8CvI,UAAUwI,8CAA8CxI,UAAUyI,0CAA0C,0CAA0CC,4CAA4C,8CAA8CupB,2CAA2C,SAAS90B,EAAQkB,EAAOJ,GAC1Z,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmB5rKtB,IAAO0wB,GAAmBxyB,EAAY,8CAEtC,IAAOyL,GAAWzL,EAAc,sCnBusKhC,ImBzrKM+0B,GAAe,SAAA5yB,GAASX,EAAxBuzB,EAAe5yB,EA8BpB,SA9BK4yB,GA8BOppB,EAAiCC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7D7I,EAAApB,KAAAU,KAEAA,MAAKoK,aAAeD,CACpBnK,MAAKqK,aAAeH,CACpBlK,MAAKuJ,SAAWA,EAzBjB5I,OAAAC,eAAW0yB,EAAA/yB,UAAA,anBisKJM,ImBjsKP,WAEC,MAAOyyB,GAAgBpyB,WnBksKjBH,WAAY,KACZC,aAAc,MmB7rKrBL,QAAAC,eAAW0yB,EAAA/yB,UAAA,enBmsKJM,ImBnsKP,WAEC,MAAOb,MAAKqK,cnBosKNtJ,WAAY,KACZC,aAAc,MmBhrKdsyB,GAAA/yB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CAszB,GAAApyB,UAAmB,yBAEnBoyB,GAAAhpB,WAAyBymB,CA0CxC,OAAAuC,IA9C8BtpB,EAgDLvK,GAAAJ,QAAhBi0B,InBwrKN/oB,sCAAsC,sCAAsCumB,8CAA8C,gDAAgDyC,oDAAoD,SAASh1B,EAAQkB,EAAOJ,GACzP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoB7vKtB,IAAOmzB,GAAmBj1B,EAAa,2CAIvC,IAAOk1B,GAAkBl1B,EAAa,+CAGtC,IAAOm1B,GAAmBn1B,EAAa,iDpB+vKvC,IoBxvKMo1B,GAAsB,SAAAjzB,GAASX,EAA/B4zB,EAAsBjzB,EAoB3B,SApBKizB,GAoBOpQ,GAEX7iB,EAAApB,KAAAU,KAAMujB,EAnBCvjB,MAAAuN,GAAY,CACZvN,MAAAwN,GAAY,CACZxN,MAAAyN,GAAY,CACZzN,MAAAgS,OAAgB,CAChBhS,MAAAoQ,QAAiB,CACjBpQ,MAAA8P,OAAgB,CAChB9P,MAAA4zB,SAAkB,CAClB5zB,MAAA6zB,SAAkB,CAClB7zB,MAAA8zB,SAAkB,CAClB9zB,MAAA+zB,cAAuB,CACvB/zB,MAAAg0B,cAAuB,CACvBh0B,MAAAi0B,cAAuB,EAcxBN,EAAApzB,UAAA2zB,QAAP,WAECl0B,KAAKuN,GAAKvN,KAAKwN,GAAKxN,KAAKyN,GAAK,CAC9BzN,MAAKgS,OAAShS,KAAKoQ,QAAUpQ,KAAK8P,OAAS,CAC3C9P,MAAK4zB,SAAW5zB,KAAK6zB,SAAW7zB,KAAK8zB,SAAW,CAChD9zB,MAAK+zB,cAAgB/zB,KAAKg0B,cAAgBh0B,KAAKi0B,cAAgB,EAMzDN,GAAApzB,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGr0B,KAAKs0B,cACPt0B,KAAKu0B,UAEN,KAAK,GAAIv1B,GAAW,EAAGA,EAAIq1B,IAAar1B,EAAG,CAE1C,GAAIw1B,GAAgBJ,EAAOp1B,EAC3B,IAAID,GAAWy1B,EAAMz1B,CACrB,IAAImB,GAAWs0B,EAAMt0B,CACrB,IAAIu0B,GAAWD,EAAMC,CACrB,IAAIC,GAAwB31B,EAAI,GAAIiB,KAAK+zB,cAAgB/zB,KAAK+zB,aAC9D,IAAIY,GAAwBz0B,EAAI,GAAIF,KAAKg0B,cAAgBh0B,KAAKg0B,aAC9D,IAAIY,GAAwBH,EAAI,GAAIz0B,KAAKi0B,cAAgBj0B,KAAKi0B,aAC9D,IAAIY,GAAkB91B,GAAGiB,KAAK4zB,SAAWc,GAAkBx0B,GAAGF,KAAK6zB,SAAWc,GAAkBF,GAAGz0B,KAAK8zB,SAAWc,GAAkBJ,EAAMv0B,CAE3I,IAAI40B,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAApzB,UAAAu0B,gBAAP,SAAuB7e,EAAmB8e,EAAoBC,GAE7D,GAAGh1B,KAAKs0B,cACPt0B,KAAKu0B,UAEN,OAAOv0B,MAAKi1B,KAAKH,gBAAgB7e,EAAU8e,EAAWC,GAKhDrB,GAAApzB,UAAA20B,gBAAP,SAAuBV,GAEtB,GAAIz1B,GAAWy1B,EAAMz1B,CACrB,IAAImB,GAAWs0B,EAAMt0B,CACrB,IAAIu0B,GAAWD,EAAMC,CACrB,IAAIU,GAAwBp2B,EAAEiB,KAAK4zB,SAAW1zB,EAAEF,KAAK6zB,SAAWY,EAAEz0B,KAAK8zB,SAAWU,EAAMv0B,CAExF,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAIu0B,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBr2B,EAAEiB,KAAK+zB,cAAgB7zB,EAAEF,KAAKg0B,cAAgBS,EAAEz0B,KAAKi0B,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAApzB,UAAAg0B,SAAP,WAEC7zB,EAAAH,UAAMg0B,SAAQj1B,KAAAU,KAEdA,MAAKi1B,KAAOj1B,KAAKw1B,SAAS9lB,QAC1B,IAAI+lB,GAAkBz1B,KAAKw1B,SAAS9kB,cACpC,IAAIglB,GAAY11B,KAAKi1B,KAAK7wB,MAAM,CAChC,IAAIuxB,GAAY31B,KAAKi1B,KAAK5wB,OAAO,CACjC,IAAIuxB,GAAY51B,KAAKi1B,KAAKtlB,MAAM,CAChC,IAAItK,GAAYrF,KAAKi1B,KAAKhyB,EAAIyyB,CAC9B,IAAIpwB,GAAYtF,KAAKi1B,KAAK/xB,EAAIyyB,CAC9B,IAAIE,GAAY71B,KAAKi1B,KAAK1uB,EAAIqvB,CAC9B,IAAIrd,GAAmBkd,EAAOriB,OAE9B,IAAI0iB,GAAavd,EAAI,GAAIwd,EAAaxd,EAAI,GAAIyd,EAAazd,EAAI,GAAI0d,EAAa1d,EAAI,GACpF,IAAI2d,GAAa3d,EAAI,GAAI4d,EAAa5d,EAAI,GAAI6d,EAAa7d,EAAI,GAAI8d,EAAa9d,EAAI,GACpF,IAAI+d,GAAa/d,EAAI,GAAIge,EAAahe,EAAI,GAAIie,EAAaje,EAAI,IAAKke,EAAale,EAAI,GAErFvY,MAAK4zB,SAAWvuB,EAAGywB,EAAMxwB,EAAGywB,EAAMF,EAAGG,EAAMC,CAC3Cj2B,MAAK6zB,SAAWxuB,EAAG6wB,EAAM5wB,EAAG6wB,EAAMN,EAAGO,EAAMC,CAC3Cr2B,MAAK8zB,SAAWzuB,EAAGixB,EAAMhxB,EAAGixB,EAAMV,EAAGW,EAAMC,CAE3Cz2B,MAAK+zB,cAAgB3wB,KAAKszB,IAAIhB,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EACnDh2B,MAAKg0B,cAAgB5wB,KAAKszB,IAAIhB,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EACnDp2B,MAAKi0B,cAAgB7wB,KAAKszB,IAAIhB,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAEnD,IAAIx2B,KAAK22B,QAAS,CACjB32B,KAAK22B,QAAQvyB,MAAQpE,KAAKi1B,KAAK7wB,KAC/BpE,MAAK22B,QAAQtyB,OAASrE,KAAKi1B,KAAK5wB,MAChCrE,MAAK22B,QAAQhnB,MAAQ3P,KAAKi1B,KAAKtlB,KAC/B3P,MAAK42B,kBAAkBxtB,UAAUytB,SAAWpB,EAG7Cz1B,KAAKgS,OAAShS,KAAK+zB,cAAc,CACjC/zB,MAAKoQ,QAAUpQ,KAAKg0B,cAAc,CAClCh0B,MAAK8P,OAAS9P,KAAKi0B,cAAc,CAEjCj0B,MAAKuN,GAAKvN,KAAK4zB,SAAW5zB,KAAK+zB,aAC/B/zB,MAAKwN,GAAKxN,KAAK6zB,SAAW7zB,KAAKg0B,aAC/Bh0B,MAAKyN,GAAKzN,KAAK8zB,SAAW9zB,KAAKi0B,cAGzBN,GAAApzB,UAAAu2B,wBAAP,WAEC92B,KAAK22B,QAAU,GAAIjD,EACnB1zB,MAAK22B,QAAQI,aAAe,iBAE5B,OAAc/2B,MAAK22B,QAAQK,eAE7B,OAAArD,IA9IqCF,EAgJrCh0B,GAAgCJ,QAAvBs0B,IpBstKNsD,2CAA2C71B,UAAU81B,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAAS74B,EAAQkB,EAAOJ,GAC9T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqB13KtB,IAAOmzB,GAAmBj1B,EAAa,2CAKvC,IAAOk1B,GAAkBl1B,EAAa,+CAGtC,IAAO84B,GAAqB94B,EAAY,mDAExC,IAAM+4B,GAAc,SAAA52B,GAASX,EAAvBu3B,EAAc52B,EASnB,SATK42B,GASO/T,GAEX7iB,EAAApB,KAAAU,KAAMujB,EARCvjB,MAAAu3B,QAAiB,CACjBv3B,MAAA4zB,SAAkB,CAClB5zB,MAAA6zB,SAAkB,CAClB7zB,MAAA8zB,SAAkB,EAQnBwD,EAAA/2B,UAAA2zB,QAAP,WAECl0B,KAAK4zB,SAAW5zB,KAAK6zB,SAAW7zB,KAAK8zB,SAAW,CAChD9zB,MAAKu3B,QAAU,EAGTD,GAAA/2B,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGr0B,KAAKs0B,cACPt0B,KAAKu0B,UAEN,KAAK,GAAIv1B,GAAW,EAAGA,EAAIq1B,IAAar1B,EAAG,CAC1C,GAAIw1B,GAAgBJ,EAAOp1B,EAC3B,IAAI01B,GAAwBF,EAAMz1B,EAAI,GAAIiB,KAAKu3B,QAAUv3B,KAAKu3B,OAC9D,IAAI5C,GAAwBH,EAAMt0B,EAAI,GAAIF,KAAKu3B,QAAUv3B,KAAKu3B,OAC9D,IAAI3C,GAAwBJ,EAAMC,EAAI,GAAIz0B,KAAKu3B,QAAUv3B,KAAKu3B,OAC9D,IAAI1C,GAAkBL,EAAMz1B,GAAIiB,KAAK4zB,SAAWc,GAAmBF,EAAMt0B,GAAIF,KAAK6zB,SAAWc,GAAkBH,EAAMC,GAAIz0B,KAAK8zB,SAAWc,GAAmBJ,EAAMv0B,CAClK,IAAI40B,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGDyC,GAAA/2B,UAAAu0B,gBAAP,SAAuB7e,EAAmB8e,EAAoBC,GAE7D,GAAGh1B,KAAKs0B,cACPt0B,KAAKu0B,UAEN,OAAOv0B,MAAKw3B,QAAQ1C,gBAAgB7e,EAAU8e,EAAWC,GAInDsC,GAAA/2B,UAAA20B,gBAAP,SAAuBV,GAEtB,GAAIz1B,GAAWy1B,EAAMz1B,CACrB,IAAImB,GAAWs0B,EAAMt0B,CACrB,IAAIu0B,GAAWD,EAAMC,CACrB,IAAIgD,GAAY14B,EAAEiB,KAAK4zB,SAAW1zB,EAAEF,KAAK6zB,SAAWY,EAAEz0B,KAAK8zB,SAAWU,EAAMv0B,CAE5E,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAIu0B,EAAI,EACPA,GAAKA,CAEN,IAAIiD,IAAa34B,EAAImB,EAAIu0B,GAAGz0B,KAAKu3B,OAEjC,OAAOE,GAAKC,EAAIlE,EAAoB6B,MAAQoC,GAAMC,EAAIlE,EAAoB8B,KAAO9B,EAAoB+B,UAG/F+B,GAAA/2B,UAAAg0B,SAAP,WAEC7zB,EAAAH,UAAMg0B,SAAQj1B,KAAAU,KAEdA,MAAKw3B,QAAUx3B,KAAKw1B,SAAShgB,WAC7B,IAAIigB,GAAkBz1B,KAAKw1B,SAAS9kB,cAEpC,IAAIrL,GAAYrF,KAAKw3B,QAAQv0B,CAC7B,IAAIqC,GAAYtF,KAAKw3B,QAAQt0B,CAC7B,IAAI2yB,GAAY71B,KAAKw3B,QAAQjxB,CAC7B,IAAI5H,GAAWqB,KAAKw3B,QAAQG,MAE5B,IAAIpf,GAAmBkd,EAAOriB,OAE9B,IAAI0iB,GAAavd,EAAI,GAAIwd,EAAaxd,EAAI,GAAIyd,EAAazd,EAAI,GAAI0d,EAAa1d,EAAI,GACpF,IAAI2d,GAAa3d,EAAI,GAAI4d,EAAa5d,EAAI,GAAI6d,EAAa7d,EAAI,GAAI8d,EAAa9d,EAAI,GACpF,IAAI+d,GAAa/d,EAAI,GAAIge,EAAahe,EAAI,GAAIie,EAAaje,EAAI,IAAKke,EAAale,EAAI,GAErFvY,MAAK4zB,SAAWvuB,EAAGywB,EAAMxwB,EAAGywB,EAAMF,EAAGG,EAAMC,CAC3Cj2B,MAAK6zB,SAAWxuB,EAAG6wB,EAAM5wB,EAAG6wB,EAAMN,EAAGO,EAAMC,CAC3Cr2B,MAAK8zB,SAAWzuB,EAAGixB,EAAMhxB,EAAGixB,EAAMV,EAAGW,EAAMC,CAE3C,IAAImB,GAAY9B,EAAMC,EAAMC,CAC5B,IAAI6B,GAAY3B,EAAMC,EAAMC,CAC5B,IAAI0B,GAAYxB,EAAMC,EAAMC,CAC5Bx2B,MAAKu3B,QAAU54B,EAAEyE,KAAKoB,MAAMozB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAI93B,KAAK22B,QAAS,CACjB32B,KAAK22B,QAAQgB,OAASh5B,CACtBqB,MAAK42B,kBAAkB3zB,EAAIoC,CAC3BrF,MAAK42B,kBAAkB1zB,EAAIoC,CAC3BtF,MAAK42B,kBAAkBrwB,EAAIsvB,CAC3B71B,MAAK42B,kBAAkBxtB,UAAUytB,SAAWpB,GAIvC6B,GAAA/2B,UAAAu2B,wBAAP,WAEC92B,KAAK22B,QAAU,GAAIU,EACnBr3B,MAAK22B,QAAQI,aAAe,iBAE5B,OAAc/2B,MAAK22B,QAAQK,eAE7B,OAAAM,IA/G6B7D,EAiH7Bh0B,GAAwBJ,QAAfi4B,IrBw1KNL,2CAA2C71B,UAAU81B,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAAS34B,EAAQkB,EAAOJ,GsBh9KtU,GAAOoiB,GAAmBljB,EAAa,6CAKvC,IAAMk1B,GAAkB,WAMvB,QANKA,GAMOlQ,GAFLvjB,KAAAs0B,cAAwB,IAI9Bt0B,MAAKw1B,SAAWjS,EAGjB5iB,OAAAC,eAAW6yB,EAAAlzB,UAAA,mBtBw8KJM,IsBx8KP,WAEC,GAAIb,KAAK42B,mBAAqB,KAAM,CACnC52B,KAAK42B,kBAAoB52B,KAAK82B,yBAE9B92B,MAAKu0B,WAGN,MAAOv0B,MAAK42B,mBtBu8KN71B,WAAY,KACZC,aAAc,MsBr8KdyyB,GAAAlzB,UAAA2zB,QAAP,WAEC,KAAM,IAAIzS,GAGJgS,GAAAlzB,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAI5S,GAGJgS,GAAAlzB,UAAAkI,MAAP,WAEC,KAAM,IAAIgZ,GAGJgS,GAAAlzB,UAAAu0B,gBAAP,SAAuB7e,EAAmB8e,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAAlzB,UAAA20B,gBAAP,SAAuBV,GAEtB,KAAM,IAAI/S,GAGJgS,GAAAlzB,UAAAg0B,SAAP,WAECv0B,KAAKs0B,cAAgB,MAGfb,GAAAlzB,UAAA4lB,WAAP,WAECnmB,KAAKs0B,cAAgB,KAGfb,GAAAlzB,UAAAu2B,wBAAP,WAEC,KAAM,IAAIrV,GAEZ,OAAAgS,KAEAh0B,GAA4BJ,QAAnBo0B,ItB07KNjQ,6CAA6CpiB,YAAY8e,wCAAwC,SAAS3hB,EAAQkB,EAAOJ,GAI5H,GuBngLM6L,GAAU,WAAhB,QAAMA,MAKSA,EAAA8sB,OAAgB,QAKhB9sB,GAAA8D,iBAA0B,gBAK1B9D,GAAA+sB,KAAc,MAC7B,OAAA/sB,KAEAzL,GAAoBJ,QAAX6L,OvBogLHgtB,wCAAwC,SAAS35B,EAAQkB,EAAOJ,GACtE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwB9hLtB,IAAOmzB,GAAmBj1B,EAAa,2CAGvC,IAAOk1B,GAAkBl1B,EAAa,+CAGtC,IAAM45B,GAAU,SAAAz3B,GAASX,EAAnBo4B,EAAUz3B,EAIf,SAJKy3B,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEX13B,EAAApB,KAAAU,KAAM,KAENA,MAAKq4B,UAAYD,EAIXD,EAAA53B,UAAAkI,MAAP,WAEC,MAAO,IAAI0vB,GAAWn4B,KAAKq4B,WAIrBF,GAAA53B,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOr0B,MAAKq4B,UAGNF,GAAA53B,UAAA20B,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAA4C,IA3ByB1E,EA6BzBh0B,GAAoBJ,QAAX84B,IxBqhLNlB,2CAA2C71B,UAAU81B,+CAA+C,iDAAiDzT,wDAAwD,SAASllB,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB1jLtB,IAAOi4B,GAAa/5B,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAOg6B,GAAUh6B,EAAe,oCAEhC,IAAOgN,GAAahN,EAAc,wCAClC,IAAO0M,GAAsB1M,EAAY,iDzBilLzC,IyBvjLMmjB,GAAsB,SAAAhhB,GAASX,EAA/B2hB,EAAsBhhB,EA4F3B,SA5FKghB,KA8FJhhB,EAAApB,KAAAU,KA1FOA,MAAAw4B,gBAAuC,GAAIhzB,MAC3CxF,MAAAy4B,eAAyB,IACzBz4B,MAAA04B,iBACA14B,MAAA24B,kBAA2B,CAE5B34B,MAAA+rB,UAAiC,GAAIvmB,MAuF3CxF,MAAK6L,cAAgB,KAjFtBlL,OAAAC,eAAW8gB,EAAAnhB,UAAA,azBikLJM,IyBjkLP,WAEC,MAAO6gB,GAAuBxgB,WzBkkLxBH,WAAY,KACZC,aAAc,MyB3iLrBL,QAAAC,eAAW8gB,EAAAnhB,UAAA,iBzBmkLJM,IyBnkLP,WAEC,GAAIb,KAAKyS,wBAA0BxH,EAAuBgT,cACzDje,KAAKke,qBAEN,OAAOle,MAAKy4B,gBzBmkLN91B,IyBhkLP,SAAyBC,GAExB,GAAI5C,KAAKy4B,gBAAkB71B,EAC1B,MAED5C,MAAKy4B,eAAiB71B,CAEtB5C,MAAKkP,kCAAkCjE,EAAuBgT,gBzB+jLxDld,WAAY,KACZC,aAAc,MyB1jLrBL,QAAAC,eAAW8gB,EAAAnhB,UAAA,ezBgkLJM,IyBhkLP,WAEC,MAAOb,MAAK+rB,UAAUxsB,QzBikLhBwB,WAAY,KACZC,aAAc,MyBjgLd0gB,GAAAnhB,UAAAq4B,SAAP,SAAgB9M,GAEf,MAAO9rB,MAAK64B,WAAW/M,EAAO9rB,KAAK+rB,UAAUxsB,QAGvCmiB,GAAAnhB,UAAAssB,gBAAP,SAAuBf,EAAqBnc,EAAcmpB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEzD,GAAIhN,GAAS,KACZ,KAAM,IAAI5sB,GAAM,kCAGjB,IAAI4sB,EAAMxb,SACTwb,EAAMxb,SAASyoB,sBAAsBjN,EAAMxb,SAASC,cAAcub,GAGnE,IAAI3lB,GAAQnG,KAAKg5B,sBAAsBrpB,EAEvC,IAAIxJ,IAAU,EAAG,CAChB,GAAI2yB,EAAS,CACZ94B,KAAK0sB,cAAcvmB,OACb,CAENnG,KAAK6sB,gBAAgB7sB,KAAK+rB,UAAU5lB,GAAQwJ,EAAQ,EAAG,QAIzD,GAAI3P,KAAK24B,kBAAoBhpB,EAAQ,EACpC3P,KAAK24B,kBAAoBhpB,EAAQ,CAElC3P,MAAK04B,eAAe/oB,GAASmc,CAC7B9rB,MAAK+rB,UAAU1lB,KAAKylB,EAEpBA,GAAM/f,SAAW4D,CAEjBmc,GAAM1Q,WAAWpb,KAEjBA,MAAKuP,oBAEL,OAAOuc,GAgCDpK,GAAAnhB,UAAAs4B,WAAP,SAAkB/M,EAAqB3lB,GAEtC,MAAOnG,MAAK6sB,gBAAgBf,EAAQ3lB,EAAQnG,KAAK+rB,UAAUxsB,OAASS,KAAK+rB,UAAU5lB,GAAO4F,SAAW/L,KAAKi5B,sBAAuB,OAG3HvX,GAAAnhB,UAAA24B,YAAP,WAAmB,GAAAC,KzBqhLZ,KyBrhLY,GAAAC,GAAA,EAAAA,EAAAhU,UAAA7lB,OAAA65B,IAAkC,CAAlCD,EAAAC,EAAA,GAAAhU,UAAAgU,GAElB,GAAI5pB,GAAa2pB,EAAW55B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKwQ,EAAKxQ,IAChCgB,KAAK44B,SAASO,EAAWn6B,IAMpB0iB,GAAAnhB,UAAAkI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAAyC,CAAzCA,EAAA,KAEZA,EAAuC3T,EAAAH,UAAMkI,MAAKnJ,KAAAU,KAACqU,GAAe,GAAIqN,GAEtErN,GAAYwH,UAAY7b,KAAK6b,SAC7BxH,GAAYiL,aAAetf,KAAKsf,YAChCjL,GAAY4K,cAAgBjf,KAAKif,aAEjC,IAAIzP,GAAaxP,KAAK+rB,UAAUxsB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCqV,EAAYukB,SAAS54B,KAAK+rB,UAAU/sB,GAAGyJ,QAExC,OAAO4L,GAeDqN,GAAAnhB,UAAA84B,SAAP,SAAgBvN,GAEf,MAAO9rB,MAAK+rB,UAAU/O,QAAQ8O,IAAU,EAMlCpK,GAAAnhB,UAAA+4B,oBAAP,WAECt5B,KAAKiB,SAEL,OAAOjB,KAAKmf,YAAc,EACzBnf,KAAKu5B,WAAW,GAAGt4B,UAGdygB,GAAAnhB,UAAAi5B,gBAAP,SAAuB7pB,GAEtB,MAAO3P,MAAK04B,eAAe/oB,GAGrB+R,GAAAnhB,UAAAorB,eAAP,WAEC,MAAO3rB,MAAK04B,eAYNhX,GAAAnhB,UAAAg5B,WAAP,SAAkBpzB,GAEjB,GAAI2lB,GAAsB9rB,KAAK+rB,UAAU5lB,EAEzC,IAAI2lB,GAAS,KACZ,KAAM,IAAIyM,GAAW,uDAEtB,OAAOzM,GAiBDpK,GAAAnhB,UAAAk5B,eAAP,SAAsBlP,GAErB,GAAI/a,GAAaxP,KAAK+rB,UAAUxsB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjC,GAAIgB,KAAK+rB,UAAU/sB,GAAGurB,MAAQA,EAC7B,MAAOvqB,MAAK+rB,UAAU/sB,EAExB,OAAO,MAWD0iB,GAAAnhB,UAAAgQ,cAAP,SAAqBub,GAEpB,GAAI4N,GAAoB15B,KAAK+rB,UAAU/O,QAAQ8O,EAE/C,IAAI4N,IAAe,EAClB,KAAM,IAAIpB,GAAc,+CAEzB,OAAOoB,GAGDhY,GAAAnhB,UAAA04B,oBAAP,WAEC,GAAIj5B,KAAK25B,uBACR35B,KAAK45B,yBAEN,OAAO55B,MAAK24B,kBAsBNjX,GAAAnhB,UAAAs5B,qBAAP,SAA4BjkB,GAE3B,MAAO,IAAIpQ,OAsBLkc,GAAAnhB,UAAAqU,YAAP,SAAmBkX,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAI5sB,GAAM,iCAEjBc,MAAK0sB,cAAc1sB,KAAKuQ,cAAcub,GAEtC,OAAOA,GAGDpK,GAAAnhB,UAAA8sB,mBAAP,SAA0B1d,GAEzB,MAAO3P,MAAK0sB,cAAc1sB,KAAKg5B,sBAAsBrpB,IAyB/C+R,GAAAnhB,UAAAmsB,cAAP,SAAqBvmB,GAEpB,GAAI2lB,GAAsB9rB,KAAK+4B,sBAAsB5yB,EAErD2lB,GAAM1Q,WAAW,KAEjBpb,MAAKuP,oBAEL,OAAOuc,GAmBDpK,GAAAnhB,UAAAu5B,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIxB,GAAW,+CAEtB,IAAIyB,EAAWh6B,KAAK+rB,UAAUxsB,OAC7B,KAAM,IAAIg5B,GAAW,6CAEtB,KAAI,GAAIv5B,GAAoB+6B,EAAY/6B,EAAIg7B,EAAUh7B,IACrDgB,KAAK4U,YAAY5U,KAAK+rB,UAAU/sB,IA+B3B0iB,GAAAnhB,UAAA05B,cAAP,SAAqBnO,EAAqB3lB,IAenCub,GAAAnhB,UAAA25B,aAAP,SAAoBC,EAAsBC,GAEzCp6B,KAAKq6B,eAAer6B,KAAKuQ,cAAc4pB,GAASn6B,KAAKuQ,cAAc6pB,IAY7D1Y,GAAAnhB,UAAA85B,eAAP,SAAsBC,EAAeC,GAEpC,GAAI5qB,GAAe3P,KAAK+rB,UAAUwO,GAAQxuB,QAC1C,IAAI+f,GAAsB9rB,KAAK+rB,UAAUuO,EAEzCt6B,MAAK6sB,gBAAgB7sB,KAAK+rB,UAAUwO,GAASv6B,KAAK+rB,UAAUuO,GAAQvuB,SACpE/L,MAAK6sB,gBAAgBf,EAAOnc,GAStB+R,GAAAnhB,UAAA6U,kBAAP,WAEC1U,EAAAH,UAAM6U,kBAAiB9V,KAAAU,KAEvB,IAAI0E,EACJ,IAAIiB,EACJ,IAAI60B,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,IAAInkB,EACJ,IAAIyI,GAAqBnf,KAAK+rB,UAAUxsB,MAExC,IAAI4f,EAAc,EAAG,CACpB,IAAK,GAAIngB,GAAW,EAAGA,EAAImgB,IAAengB,EAAG,CAC5C0X,EAAM1W,KAAK+rB,UAAU/sB,GAAG0Q,OAAO1P,KAE/B,IAAIhB,GAAK,EAAG,CACX27B,EAAOjkB,EAAItS,OAASo2B,EAAO9jB,EAAIzT,EAC/B23B,GAAOlkB,EAAIrS,QAAUo2B,EAAO/jB,EAAIxT,EAChC23B,GAAOnkB,EAAI/G,OAAS+qB,EAAOhkB,EAAInQ,OACzB,CACNZ,EAAM+Q,EAAItS,OAASM,EAAMgS,EAAIzT,EAC7B,IAAIyB,EAAM81B,EACTA,EAAO91B,CACR,IAAIiB,EAAMg1B,EACTA,EAAOh1B,CAERA,GAAM+Q,EAAIrS,QAAUK,EAAMgS,EAAIxT,EAC9B,IAAIwB,EAAM+1B,EACTA,EAAO/1B,CACR,IAAIiB,EAAMi1B,EACTA,EAAOj1B,CAERA,GAAM+Q,EAAI/G,OAASjL,EAAMgS,EAAInQ,EAC7B,IAAI7B,EAAMg2B,EACTA,EAAOh2B,CACR,IAAIiB,EAAMk1B,EACTA,EAAOl1B,GAIV3F,KAAKqV,YAAYjR,MAAQu2B,GAAQ36B,KAAKqV,YAAYpS,EAAIu3B,EACtDx6B,MAAKqV,YAAYhR,OAASu2B,GAAQ56B,KAAKqV,YAAYnS,EAAIu3B,EACvDz6B,MAAKqV,YAAY1F,MAAQkrB,GAAQ76B,KAAKqV,YAAY9O,EAAIm0B,OAChD,CACN16B,KAAKqV,YAAYylB,YAOZpZ,GAAAnhB,UAAA2O,kCAAP,SAAyCoM,GAExC,GAAI5a,EAAAH,UAAM2O,kCAAiC5P,KAAAU,KAACsb,GAC3C,MAAO,KAER,IAAI9L,GAAaxP,KAAK+rB,UAAUxsB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAK+rB,UAAU/sB,GAAGkQ,kCAAkCoM,EAErD,OAAO,OAODoG,GAAAnhB,UAAA2Q,WAAP,SAAkBtO,EAAaiZ,GAE9Bnb,EAAAH,UAAM2Q,WAAU5R,KAAAU,KAAC4C,EAAOiZ,EAExB,IAAIrM,GAAaxP,KAAK+rB,UAAUxsB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAK+rB,UAAU/sB,GAAGkS,WAAWtO,EAAOiZ,GAQ/B6F,GAAAnhB,UAAAw4B,sBAAP,SAA6B5yB,GAE5B,GAAI2lB,GAAsB9rB,KAAK+rB,UAAU9O,OAAO9W,EAAO,GAAG,EAG1D,IAAInG,KAAK24B,mBAAqB7M,EAAM/f,SAAW,EAC9C/L,KAAK25B,uBAAyB,IAG/B,IAAI35B,KAAK04B,eAAe5M,EAAM/f,WAAa/L,WACnCA,MAAK04B,eAAe5M,EAAM/f,SAElC+f,GAAM/f,UAAY,KAElB,OAAO+f,GAGApK,GAAAnhB,UAAAy4B,sBAAR,SAA8BrpB,GAE7B,IAAK3P,KAAK04B,eAAe/oB,GACxB,OAAQ,CAET,OAAO3P,MAAK+rB,UAAU/O,QAAQhd,KAAK04B,eAAe/oB,IAG3C+R;EAAAnhB,UAAAq5B,wBAAR,WAEC55B,KAAK25B,uBAAyB,KAE9B35B,MAAK24B,kBAAoB,CACzB,IAAInpB,GAAaxP,KAAK+rB,UAAUxsB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/B,GAAIgB,KAAK24B,kBAAoB34B,KAAK+rB,UAAU/sB,GAAG+M,SAC9C/L,KAAK24B,kBAAoB34B,KAAK+rB,UAAU/sB,GAAG+M,QAE7C/L,MAAK24B,mBAAqB,EAmBpBjX,GAAAnhB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAU6U,EAA2BgjB,GAA3B,GAAAhjB,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAgjB,QAAA,GAAyB,CAAzBA,EAAA,MAElE,GAAG/6B,KAAKsM,oBAAsB,IAAMyuB,EACnC,MAED,KAAI/6B,KAAKqM,qBACR,MAED,IAAIkI,GAA6BvU,KAAKuU,KAEtC,IAAIA,EAAO,CACV,GAAIwa,GAAkBxa,EAAMhV,MAC5B,IAAIy7B,GAAkB,KACtB,KAAK,GAAIh8B,GAAW,EAAGA,EAAI+vB,EAAU/vB,IAAK,CACzC,GAAIuV,EAAMvV,GAAGsH,aAAarD,EAAGC,EAAG6U,EAAW,MAAO,CACjDijB,EAAU,IACV,QAIF,IAAKA,EACJ,MAAO,OAGT,MAAOh7B,MAAKi7B,sBAAsBh4B,EAAGC,EAAG6U,EAAWgjB,GAG7CrZ,GAAAnhB,UAAA26B,mBAAP,SAA0Brc,GAEzB7e,KAAKw4B,gBAAgBnyB,KAAKwY,EAE1B,OAAOA,GAID6C,GAAAnhB,UAAA46B,sBAAP,SAA6Btc,GAE5B,GAAI1Y,GAAenG,KAAKw4B,gBAAgBxb,QAAQ6B,EAEhD7e,MAAKw4B,gBAAgBvb,OAAO9W,EAAO,EAEnC,OAAO0Y,GAGD6C,GAAAnhB,UAAA06B,sBAAP,SAA6Bh4B,EAAUC,EAAU6U,EAAmBgjB,GAEnE,GAAI5b,GAAqBnf,KAAKmf,WAC9B,KAAI,GAAIngB,GAAW,EAAGA,EAAImgB,EAAangB,IACtC,GAAGgB,KAAK+rB,UAAU/sB,GAAGsH,aAAarD,EAAEC,EAAG6U,EAAWgjB,GACjD,MAAO,KAET,OAAO,OAGDrZ,GAAAnhB,UAAAsQ,gBAAP,WAEE7Q,KAAa,QACbA,MAAKif,cAAgB,KAEtBve,GAAAH,UAAMsQ,gBAAevR,KAAAU,MAhtBR0hB,GAAAxgB,UAAmB,gCAktBlC,OAAAwgB,IAptBqCnW,EAstBL9L,GAAAJ,QAAvBqiB,IzBw7KN0Z,uCAAuCh6B,UAAUi6B,+BAA+Bj6B,UAAUk6B,oCAAoCl6B,UAAUoJ,wCAAwC,wCAAwCuV,iDAAiD,mDAAmDwb,wCAAwC,SAASh9B,EAAQkB,EAAOJ,GAC/X,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0BrrMtB,IAAOm7B,GAAkBj9B,EAAa,6CACtC,IAAOk9B,GAAal9B,EAAc,wCAGlC,IAAOm9B,GAAUn9B,EAAe,oCAEhC,IAAOo9B,GAAYp9B,EAAe,sCAClC,IAAOq9B,GAAWr9B,EAAe,qCACjC,IAAOs9B,GAAWt9B,EAAe,qCAGjC,IAAOmjB,GAAsBnjB,EAAY,uD1BkvMzC,I0B/qMMu9B,GAAM,SAAAp7B,GAASX,EAAf+7B,EAAMp7B,EA2HX,SA3HKo7B,GA2HOC,EAAgCC,GA3H7C,GAAAC,GAAAj8B,IA2Ha,IAAA+7B,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3Ct7B,EAAApB,KAAAU,KAEAA,MAAKk8B,aAAeH,CACpB/7B,MAAKm8B,YAAcH,CAEnBh8B,MAAKo8B,4BAA8B,SAACrd,GAAsB,MAAAkd,GAAKI,mBAAmBtd,GAClF/e,MAAKs8B,yBAA2B,SAACvd,GAAqB,MAAAkd,GAAKM,gBAAgBxd,GAC3E/e,MAAKw8B,4BAA8B,SAACzd,GAAqB,MAAAkd,GAAKQ,mBAAmB1d,GACjF/e,MAAK08B,qBAAuB,SAAC3d,GAAuB,MAAAkd,GAAKU,YAAY5d,GACrE/e,MAAK48B,sBAAwB,SAAC7d,GAAsB,MAAAkd,GAAKY,aAAa9d,IArFvEpe,OAAAC,eAAWk7B,EAAAv7B,UAAA,W1B+sMJM,I0B/sMP,WAEC,MAAOb,MAAKwlB,U1BgtMNzkB,WAAY,KACZC,aAAc,M0B9rMrBL,QAAAC,eAAWk7B,EAAAv7B,UAAA,qB1BitMJM,I0BjtMP,WAEC,MAAOb,MAAK88B,oB1BktMN/7B,WAAY,KACZC,aAAc,M0B7oMd86B,GAAAv7B,UAAAw8B,MAAP,WAEC,IAAK/8B,KAAKg9B,eACT,MAED,IAAIh9B,KAAKk8B,aAAc,CACtB,GAAIe,EACJA,GAAMzB,EAAmB0B,YAAYl9B,KAAKm8B,YAC1Cc,GAAIE,qBAAqBn9B,KAAKg9B,gBAG/Bh9B,KAAKo9B,wBA0KCtB,GAAAv7B,UAAA88B,KAAP,SAAYC,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/Ez9B,KAAK09B,oBAAoBL,KAAKC,EAASC,EAASC,EAAIC,GAyF9C3B,GAAAv7B,UAAAo9B,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzEz9B,KAAK09B,oBAAoBC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAGlD3B,GAAAv7B,UAAAm9B,kBAAR,WAEC,GAAI19B,KAAKk8B,aAAc,CACtB,GAAIe,GAAyBzB,EAAmB0B,YAAYl9B,KAAKm8B,YACjEn8B,MAAKg9B,eAAiBC,EAAIY,uBACpB,CACN79B,KAAKg9B,eAAiB,GAAIvB,GAG3Bz7B,KAAKg9B,eAAe1pB,iBAAiBsoB,EAAYkC,kBAAmB99B,KAAKo8B,4BACzEp8B,MAAKg9B,eAAe1pB,iBAAiBooB,EAAWqC,mBAAoB/9B,KAAKw8B,4BACzEx8B,MAAKg9B,eAAe1pB,iBAAiBooB,EAAWsC,eAAgBh+B,KAAKs8B,yBAGrEt8B,MAAKg9B,eAAeiB,kBAAkBj+B,KAAK08B,qBAC3C18B,MAAKg9B,eAAekB,uBAAuBl+B,KAAK48B,sBAEhD,OAAO58B,MAAKg9B,eAGLlB,GAAAv7B,UAAA68B,sBAAR,WAAA,GAAAnB,GAAAj8B,IAGCA,MAAKm+B,sBAAwBn+B,KAAKg9B,qBAC3Bh9B,MAAKg9B,cACZh9B,MAAKg9B,eAAiB,IACtBh9B,MAAKo+B,cAAgBC,WAAW,WAAOpC,EAAKqC,mBAAoB,KA0B1DxC,GAAAv7B,UAAAg+B,OAAP,YAcczC,GAAA0C,aAAd,SAA2BC,GAE1BhD,EAAc+C,aAAaC,GAYd3C,GAAA4C,cAAd,SAA4BC,GAE3BlD,EAAciD,cAAcC,GAGrB7C,GAAAv7B,UAAA+9B,gBAAR,WAGCt+B,KAAKm+B,sBAAsB3jB,oBAAoBohB,EAAYkC,kBAAmB99B,KAAKo8B,4BACnFp8B,MAAKm+B,sBAAsB3jB,oBAAoBkhB,EAAWqC,mBAAoB/9B,KAAKw8B,4BACnFx8B,MAAKm+B,sBAAsB3jB,oBAAoBkhB,EAAWsC,eAAgBh+B,KAAKs8B,yBAE/E,KAAKt8B,KAAKk8B,aACTl8B,KAAKm+B,sBAAsBS,aAErB5+B,MAAKm+B,qBACZn+B,MAAKm+B,sBAAwB,IAE7BU,cAAa7+B,KAAKo+B,cAClBp+B,MAAKo+B,cAAgB,KAGdtC,GAAAv7B,UAAAg8B,gBAAR,SAAwBxd,GAEvB/e,KAAKqR,cAAc0N,GAMZ+c,GAAAv7B,UAAAo8B,YAAR,SAAoB5d,GAEnB,GAAI/e,KAAKya,iBAAiBkhB,EAAamD,UAAW,CACjD9+B,KAAKqR,cAAc0N,EACnB,OAAO,UACD,CACN,MAAO,QAOD+c,GAAAv7B,UAAAs8B,aAAR,SAAqB9d,GAEpB,GAAI/e,KAAKya,iBAAiBohB,EAAYkD,aAAc,CACnD/+B,KAAKqR,cAAc0N,EACnB,OAAO,UACD,CACN,MAAO,QAID+c,GAAAv7B,UAAAk8B,mBAAR,SAA2B1d,GAE1B/e,KAAKqR,cAAc0N,GAMZ+c,GAAAv7B,UAAA87B,mBAAR,SAA2Btd,GAE1B/e,KAAKwlB,SAA2BzG,EAAMigB,OAEtC,IAAIh/B,KAAKwlB,SACRxlB,KAAK44B,SAAS54B,KAAKwlB,SAEpBxlB,MAAKqR,cAAc0N,EAEnB/e,MAAKo9B,wBAEP,OAAAtB,IA3jBqBpa,EA6jBrBjiB,GAAgBJ,QAAPy8B,I1B4nMNmD,oCAAoC79B,UAAU89B,sCAAsC99B,UAAU+9B,qCAAqC/9B,UAAUg+B,qCAAqCh+B,UAAUi+B,6CAA6Cj+B,UAAUk+B,wCAAwCl+B,UAAUqiB,uDAAuD,yDAAyD8b,uCAAuC,SAAShhC,EAAQkB,EAAOJ,GACvd,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2B3wNtB,IAAOqhB,GAAsBnjB,EAAY,uDAEzC,IAAOihC,GAAcjhC,EAAc,8CAInC,IAAMkhC,GAAK,SAAA/+B,GAASX,EAAd0/B,EAAK/+B,EAOV,SAPK++B,GAOO5jB,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,KAEXnb,EAAApB,KAAAU,KAPOA,MAAA0/B,oBAA2C,GAAIl6B,MAC/CxF,MAAA2/B,YAAmC,GAAIn6B,MAExCxF,MAAA4/B,iBAAmB,CAMzB5/B,MAAK6b,UAAYA,GAAa,GAAI2jB,EAElCx/B,MAAKuc,SAAW,IAChBvc,MAAKmR,QAAUnR,KAGTy/B,EAAAl/B,UAAAs/B,mBAAP,SAA0BC,GAEzB,GAAI9gC,GAAW,CACf,IAAIwQ,GAAaxP,KAAK2/B,YAAYpgC,MAElCugC,GAAUlkB,MAAQ5b,IAElBA,MAAK4/B,kBAEL,OAAO5gC,EAAIwQ,EACVxP,KAAK2/B,YAAY3gC,KAAK+gC,SAASD,GAM1BL,GAAAl/B,UAAA0b,oBAAP,SAA2BJ,GAE1B7b,KAAK0/B,oBAAoBr5B,KAAKwV,EAG9B,IAAI7b,KAAK2/B,YAAY3iB,QAAQnB,KAAe,EAC3C7b,KAAK2/B,YAAYt5B,KAAKwV,GAMjB4jB,GAAAl/B,UAAAwb,sBAAP,SAA6BF,GAE5B7b,KAAK0/B,oBAAoBziB,OAAOjd,KAAK0/B,oBAAoB1iB,QAAQnB,GAAY,EAG7E,IAAI7b,KAAK0/B,oBAAoB1iB,QAAQnB,KAAe,EACnD7b,KAAK2/B,YAAY1iB,OAAOjd,KAAK2/B,YAAY3iB,QAAQnB,GAAY,GAEhE,OAAA4jB,IArDoB/d,EAuDpBjiB,GAAeJ,QAANogC,I3B4vNNhc,uDAAuD,uDAAuDuc,8CAA8C,gDAAgDC,sCAAsC,SAAS1hC,EAAQkB,EAAOJ,G4BtzN7Q,GAAO6gC,GAAQ3hC,EAAgB,iCAI/B,IAAOmxB,GAAUnxB,EAAe,qCAChC,IAAOkhC,GAAKlhC,EAAgB,sCAG5B,IAAO4hC,GAAa5hC,EAAc,wCAElC,IAAO6hC,GAAM7hC,EAAgB,qCAC7B,IAAO8hC,GAAW9hC,EAAe,wCACjC,IAAO+M,GAAkB/M,EAAa,+CACtC,IAAO+hC,GAAa/hC,EAAc,0CAClC,IAAOgiC,GAAYhiC,EAAe,2CAElC,IAAMiiC,GAAI,WA2DT,QA3DKA,GA2DOpiB,EAAoBxC,EAAoB/B,GA3DrD,GAAAoiB,GAAAj8B,IA2DiC,IAAA4b,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAA/B,QAAA,GAAoB,CAApBA,EAAA,KAlC5C7Z,KAAAgS,OAAgB,CAChBhS,MAAAoQ,QAAiB,CAEjBpQ,MAAAygC,MAAe,CACfzgC,MAAA0gC,WAAoB,CACpB1gC,MAAA2gC,iBAA0B,CAC1B3gC,MAAA4gC,iBAA0B,CAE1B5gC,MAAA6gC,eAAyB,IACzB7gC,MAAA8gC,cAAwB,IAOxB9gC,MAAA+gC,aAAuB,GAAIZ,EAM5BngC,MAAAghC,cAAkC,GAAIx7B,MAc5CxF,MAAKihC,4BAA8B,SAACliB,GAA6B,MAAAkd,GAAKiF,oBAAoBniB,GAC1F/e,MAAKmhC,6BAA+B,SAACpiB,GAAsB,MAAAkd,GAAKmF,qBAAqBriB,GACrF/e,MAAKqhC,2BAA6B,SAACtiB,GAAwB,MAAAkd,GAAKqF,mBAAmBviB,GACnF/e,MAAKuhC,0BAA4B,SAACxiB,GAAwB,MAAAkd,GAAKuF,kBAAkBziB,GAEjF/e,MAAK4b,MAAQA,GAAS,GAAI6jB,EAC1Bz/B,MAAK6Z,OAASA,GAAU,GAAIumB,EAC5BpgC,MAAKoe,SAAWA,CAGhBqjB,UAASC,KAAKC,MAAMC,OAAS,KAE7B5hC,MAAK6hC,aAAeJ,SAASK,cAAc,MAC3C9hC,MAAK6hC,aAAaF,MAAM1rB,SAAW,UAEnCwrB,UAASC,KAAKK,YAAY/hC,KAAK6hC,aAE/B7hC,MAAKgiC,cAAgBzB,EAAarD,aAClCl9B,MAAKgiC,cAAcC,aAAajiC,MAQjCW,OAAAC,eAAW4/B,EAAAjgC,UAAA,U5BowNJM,I4BpwNP,WAEC,MAAOb,MAAKkiC,U5BqwNNnhC,WAAY,KACZC,aAAc,M4BnwNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,U5BswNJM,I4BtwNP,WAEC,MAAOb,MAAKmiC,U5BuwNNphC,WAAY,KACZC,aAAc,M4BrwNrBL,QAAAC,eAAI4/B,EAAAjgC,UAAA,e5BwwNGM,I4BxwNP,WAEC,MAAOb,MAAKghC,e5BywNNjgC,WAAY,KACZC,aAAc,M4BvwNdw/B,GAAAjgC,UAAA6hC,eAAP,SAAsBzS,GAErB,MAAOA,GAAcpa,sBAAsBhD,gBAAgBvS,KAAKqiC,UAAUriC,KAAKkiC,SAAUliC,KAAKmiC,SAAU,MAAOl/B,EAGzGu9B,GAAAjgC,UAAA+hC,eAAP,SAAsB3S,GAErB,MAAOA,GAAcpa,sBAAsBhD,gBAAgBvS,KAAKqiC,UAAUriC,KAAKkiC,SAAUliC,KAAKmiC,SAAU,MAAOj/B,EAGzGs9B,GAAAjgC,UAAAgiC,oBAAP,SAA2B5S,GAE1B,GAAI6S,EACJ,IAAIC,EACJ,IAAIC,GAAqC,GAAIl9B,MAE7C,IAAIgK,GAAaxP,KAAKghC,cAAczhC,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAAK,CACpCwjC,EAAkB,GAAI9S,EACtB+S,GAAgB9S,EAAcpa,sBAAsBhD,gBAAgBvS,KAAKqiC,UAAUriC,KAAKghC,cAAchiC,GAAGiE,EAAGjD,KAAKghC,cAAchiC,GAAGkE,EAAG,KACrIs/B,GAAgBv/B,EAAIw/B,EAAcx/B,CAClCu/B,GAAgBt/B,EAAIu/B,EAAcv/B,CAClCw/B,GAAiBr8B,KAAKm8B,GAIvB,MAAOE,GAMR/hC,QAAAC,eAAW4/B,EAAAjgC,UAAA,e5BiwNJM,I4BjwNP,WAEC,MAAOb,MAAK6hC,c5BkwNN9gC,WAAY,KACZC,aAAc,M4B9vNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,Y5BowNJM,I4BpwNP,WAEC,MAAOb,MAAK2iC,Y5BqwNNhgC,I4BlwNP,SAAoBC,GAEnB,GAAI5C,KAAK2iC,YAAc//B,EACtB,MAED,IAAI5C,KAAK2iC,WAAY,CACpB3iC,KAAK2iC,WAAW1hC,SAChBjB,MAAK2iC,WAAWnoB,oBAAoB8lB,EAAcsC,iBAAkB5iC,KAAKqhC,2BACzErhC,MAAK2iC,WAAWnoB,oBAAoB8lB,EAAcuC,gBAAiB7iC,KAAKuhC,2BAGzEvhC,KAAK2iC,WAAa//B,CAElB5C,MAAK2iC,WAAWrvB,iBAAiBgtB,EAAcsC,iBAAkB5iC,KAAKqhC,2BACtErhC,MAAK2iC,WAAWrvB,iBAAiBgtB,EAAcuC,gBAAiB7iC,KAAKuhC,0BAGrEvhC,MAAK8iC,kBAAoB9iC,KAAK2iC,WAAWI,yBAEzC,IAAI/iC,KAAKgjC,SACRhjC,KAAK8iC,kBAAkBjpB,OAAS7Z,KAAKgjC,QAGtChjC,MAAK2iC,WAAWM,eAAkBjjC,KAAK2gC,kBAAoB,GAAM,KAAM,GACvE3gC,MAAK2iC,WAAWO,eAAkBljC,KAAK2gC,kBAAoB,EAAK,KAAM,GACtE3gC,MAAK2iC,WAAWQ,eAAiBnjC,KAAK2gC,iBAAmB,KAAM,GAC/D3gC,MAAK2iC,WAAWS,kBAAoBpjC,KAAK4gC,gBACzC5gC,MAAK2iC,WAAWv+B,MAAQpE,KAAKgS,MAC7BhS,MAAK2iC,WAAWt+B,OAASrE,KAAKoQ,OAC9BpQ,MAAK2iC,WAAWU,aAAerjC,KAAKsjC,e5B6vN9BviC,WAAY,KACZC,aAAc,M4BxvNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,gB5B8vNJM,I4B9vNP,WAEC,MAAOb,MAAKsjC,e5B+vNN3gC,I4B5vNP,SAAwBC,GAEvB,GAAI5C,KAAKsjC,eAAiB1gC,EACzB,MAED5C,MAAKsjC,cAAgB1gC,CAErB,IAAI5C,KAAK2iC,WACR3iC,KAAK2iC,WAAWU,aAAerjC,KAAKsjC,e5B2vN/BviC,WAAY,KACZC,aAAc,M4BtvNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,mB5B4vNJM,I4B5vNP,WAEC,MAAOb,MAAK2gC,kB5B6vNNh+B,I4B1vNP,SAA2BC,GAE1B,GAAI5C,KAAK2gC,kBAAoB/9B,EAC5B,MAED5C,MAAK2gC,iBAAmB/9B,CAExB5C,MAAK2iC,WAAWM,eAAkBrgC,GAAS,GAAM,KAAM,GACvD5C,MAAK2iC,WAAWO,eAAkBtgC,GAAS,EAAK,KAAM,GACtD5C,MAAK2iC,WAAWQ,eAAiBvgC,EAAQ,KAAM,K5ByvNzC7B,WAAY,KACZC,aAAc,M4BnvNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,mB5B0vNJM,I4B1vNP,WAEC,MAAOb,MAAK4gC,kB5B+vNNj+B,I4BxvNP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAK4gC,kBAAoBh+B,EAC5B,MAED5C,MAAK2iC,WAAWS,kBAAoBpjC,KAAK4gC,iBAAmBh+B,G5BuvNtD7B,WAAY,KACZC,aAAc,M4BjvNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,U5BwvNJM,I4BxvNP,WAEC,MAAOb,MAAKgjC,U5B4vNNrgC,I4BtvNP,SAAkBC,GAEjB,GAAI5C,KAAKgjC,UAAYpgC,EACpB,MAED,IAAI5C,KAAKgjC,SACRhjC,KAAKgjC,SAASxoB,oBAAoB6lB,EAAYkD,mBAAoBvjC,KAAKmhC,6BAExEnhC,MAAKgjC,SAAWpgC,CAEhB,IAAI5C,KAAK8iC,kBACR9iC,KAAK8iC,kBAAkBjpB,OAAS7Z,KAAKgjC,QAEtC,IAAIhjC,KAAKmR,QACRnR,KAAKmR,QAAQ0K,UAAUK,iBAAiBlc,KAAKgjC,SAE9ChjC,MAAKgjC,SAAS1vB,iBAAiB+sB,EAAYkD,mBAAoBvjC,KAAKmhC,6BACpEnhC,MAAK8gC,cAAgB,IACrB9gC,MAAK6gC,eAAiB,M5BkvNhB9/B,WAAY,KACZC,aAAc,M4B5uNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,S5BmvNJM,I4BnvNP,WAEC,MAAOb,MAAKmR,S5BuvNNxO,I4BjvNP,SAAiBC,GAEhB,GAAI5C,KAAKmR,SAAWvO,EACnB,MAED,IAAI5C,KAAKmR,QACRnR,KAAKmR,QAAQqJ,oBAAoBlP,EAAmBgG,kBAAmBtR,KAAKihC,4BAE7EjhC,MAAKmR,QAAUvO,CAEf5C,MAAKmR,QAAQmC,iBAAiBhI,EAAmBgG,kBAAmBtR,KAAKihC,4BAEzE,IAAIjhC,KAAKgjC,SACRhjC,KAAKmR,QAAQ0K,UAAUK,iBAAiBlc,KAAKgjC,W5B8uNxCjiC,WAAY,KACZC,aAAc,M4BxuNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,a5B+uNJM,I4B/uNP,WAEC,MAAOb,MAAK0gC,Y5BgvNN3/B,WAAY,KACZC,aAAc,M4B3uNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,S5BivNJM,I4BjvNP,WAEC,MAAOb,MAAKgS,Q5BkvNNrP,I4B/uNP,SAAiBC,GAEhB,GAAI5C,KAAKgS,QAAUpP,EAClB,MAED5C,MAAKgS,OAASpP,CACd5C,MAAKwjC,aAAexjC,KAAKgS,OAAOhS,KAAKoQ,OACrCpQ,MAAKgjC,SAASS,WAAWC,cAAgB1jC,KAAKwjC,YAC9CxjC,MAAK2iC,WAAWv+B,MAAQxB,CACxB5C,MAAK6hC,aAAaF,MAAMv9B,MAAQxB,EAAQ,M5B+uNlC7B,WAAY,KACZC,aAAc,M4B1uNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,U5BgvNJM,I4BhvNP,WAEC,MAAOb,MAAKoQ,S5BivNNzN,I4B9uNP,SAAkBC,GAEjB,GAAI5C,KAAKoQ,SAAWxN,EACnB,MAED5C,MAAKoQ,QAAUxN,CACf5C,MAAKwjC,aAAexjC,KAAKgS,OAAOhS,KAAKoQ,OACrCpQ,MAAKgjC,SAASS,WAAWC,cAAgB1jC,KAAKwjC,YAC9CxjC,MAAK2iC,WAAWt+B,OAASzB,CACzB5C,MAAK6hC,aAAaF,MAAMt9B,OAASzB,EAAQ,M5B8uNnC7B,WAAY,KACZC,aAAc,M4BzuNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,e5B+uNJM,I4B/uNP,WAEC,MAAOb,MAAK+gC,c5BgvNNp+B,I4B7uNP,SAAuBC,GAEtB,GAAI5C,KAAK+gC,cAAgBn+B,EACxB,MAED,IAAIA,GAAS,KACZ5C,KAAK+gC,aAAe,GAAIZ,OAExBngC,MAAK+gC,aAAen+B,G5B6uNf7B,WAAY,KACZC,aAAc,M4BxuNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,K5B8uNJM,I4B9uNP,WAEC,MAAOb,MAAK2iC,WAAW1/B,G5B+uNjBN,I4B5uNP,SAAaC,GAEZ,GAAI5C,KAAK2iC,WAAW1/B,GAAKL,EACxB,MAED5C,MAAK2iC,WAAW1/B,GAAKL,CACrB5C,MAAK6hC,aAAaF,MAAMl8B,KAAO7C,EAAQ,M5B4uNjC7B,WAAY,KACZC,aAAc,M4BvuNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,K5B6uNJM,I4B7uNP,WAEC,MAAOb,MAAK2iC,WAAWz/B,G5B8uNjBP,I4B3uNP,SAAaC,GAEZ,GAAI5C,KAAK2iC,WAAWz/B,GAAKN,EACxB,MAED5C,MAAK2iC,WAAWz/B,GAAKN,CACrB5C,MAAK6hC,aAAaF,MAAM/7B,IAAMhD,EAAQ,M5B2uNhC7B,WAAY,KACZC,aAAc,M4BtuNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,W5B4uNJM,I4B5uNP,WAEC,MAAQb,MAAK6hC,aAAaF,MAAMgC,YAAc,W5B6uNxChhC,I4B1uNP,SAAmBC,GAElB5C,KAAK6hC,aAAaF,MAAMgC,WAAa/gC,EAAO,UAAY,U5B4uNlD7B,WAAY,KACZC,aAAc,M4BruNrBL,QAAAC,eAAW4/B,EAAAjgC,UAAA,sB5B4uNJM,I4B5uNP,WAEC,MAAO,I5B8uNDE,WAAY,KACZC,aAAc,M4BxuNdw/B,GAAAjgC,UAAAqjC,OAAP,WAEC5jC,KAAK6jC,aAGL7jC,MAAKgjC,SAASS,WAAWC,cAAgB1jC,KAAKwjC,YAE9C,IAAIxjC,KAAK8gC,cAAe,CACvB9gC,KAAK8gC,cAAgB,KACrB9gC,MAAKgjC,SAASS,WAAWK,oBAAoB9jC,KAAK2iC,WAAWoB,YAAY9gC,EAAGjD,KAAK2iC,WAAWoB,YAAY7gC,EAAGlD,KAAK2iC,WAAWoB,YAAY3/B,MAAOpE,KAAK2iC,WAAWoB,YAAY1/B,QAG3K,GAAIrE,KAAK6gC,eAAgB,CACxB7gC,KAAK6gC,eAAiB,KACtB7gC,MAAKgjC,SAASS,WAAWO,iBAAiBhkC,KAAK2iC,WAAWsB,SAAShhC,EAAGjD,KAAK2iC,WAAWsB,SAAS/gC,EAAGlD,KAAK2iC,WAAWsB,SAAS7/B,MAAOpE,KAAK2iC,WAAWsB,SAAS5/B,QAI5J,IAAKrE,KAAKsjC,cAAe,CACxB,GAAItjC,KAAKkkC,gBAAkBlkC,KAAK6hC,cAAgB7hC,KAAKgiC,cAAcmC,cAAgBnkC,KAAKgiC,cAAcoC,cACrGpkC,KAAKgiC,cAAcqC,kBAAoBrkC,KAAKskC,YAAYC,iBAAiBvkC,KAAKkiC,SAAUliC,KAAKmiC,SAAUniC,KAExGA,MAAKgiC,cAAcwC,gBAAgBxkC,KAAKkkC,gBAMzClkC,KAAK8iC,kBAAkBnpB,OAGvB3Z,MAAKmR,QAAQ0uB,mBAAmB7/B,KAAK8iC,kBAGrC9iC,MAAK2iC,WAAWiB,OAAO5jC,KAAK8iC,mBAMtBtC,GAAAjgC,UAAAsjC,YAAP,WAEC,GAAIY,GAAcvE,GAElB,IAAIlgC,KAAKygC,OAAS,EACjBzgC,KAAKygC,MAAQgE,CAEdzkC,MAAK0gC,WAAa+D,EAAOzkC,KAAKygC,KAC9BzgC,MAAKygC,MAAQgE,EAMPjE,GAAAjgC,UAAAU,QAAP,WAECjB,KAAK2iC,WAAW1hC,SAGhBjB,MAAKgiC,cAAc0C,eAAe1kC,KAKlCA,MAAKgiC,cAAgB,IAGrBhiC,MAAK2iC,WAAa,IAClB3iC,MAAK8iC,kBAAoB,KAM1BniC,QAAAC,eAAW4/B,EAAAjgC,UAAA,oB5BytNJM,I4BztNP,WAEC,MAAOb,MAAK8iC,mB5B0tNN/hC,WAAY,KACZC,aAAc,M4BntNbw/B,GAAAjgC,UAAA2gC,oBAAR,SAA4BniB,GAE3B,GAAI/e,KAAKgjC,SACRhjC,KAAKmR,QAAQ0K,UAAUK,iBAAiBlc,KAAKgjC,UAMvCxC,GAAAjgC,UAAA6gC,qBAAR,SAA6BriB,GAE5B/e,KAAK8gC,cAAgB,IACrB9gC,MAAK6gC,eAAiB,KAMfL,GAAAjgC,UAAA+gC,mBAAR,SAA2BviB,GAE1B/e,KAAK6gC,eAAiB,KAMfL,GAAAjgC,UAAAihC,kBAAR,SAA0BziB,GAEzB/e,KAAK8gC,cAAgB,KAGfN,GAAAjgC,UAAAokC,QAAP,SAAeC,GAEd,GAAIn9B,GAAazH,KAAKgjC,SAAS2B,QAAQC,EACvCn9B,GAAExE,EAAIwE,EAAExE,EAAEjD,KAAK2iC,WAAWsB,SAAS7/B,MAAM,EAAIpE,KAAKgS,OAAOhS,KAAKgjC,SAASS,WAAWoB,OAClFp9B,GAAEvE,EAAIuE,EAAEvE,EAAElD,KAAK2iC,WAAWsB,SAAS5/B,OAAO,EAAIrE,KAAKoQ,QAAQpQ,KAAKgjC,SAASS,WAAWqB,OAEpF,OAAOr9B,GAGD+4B,GAAAjgC,UAAA8hC,UAAP,SAAiB0C,EAAWC,EAAWC,GAEtC,MAAOjlC,MAAKgjC,SAASX,UAAU,GAAG0C,EAAK/kC,KAAKgS,OAAOhS,KAAKgjC,SAASS,WAAWoB,SAAS7kC,KAAK2iC,WAAWsB,SAAS7/B,MAAO,GAAG4gC,EAAKhlC,KAAKoQ,QAAQpQ,KAAKgjC,SAASS,WAAWqB,SAAS9kC,KAAK2iC,WAAWsB,SAAS5/B,OAAQ4gC,GAIvMzE,GAAAjgC,UAAA2kC,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOjlC,MAAKgjC,SAASkC,QAAQH,EAAG,EAAI/kC,KAAKgS,QAAQhS,KAAKgS,QAASgzB,EAAG,EAAIhlC,KAAKoQ,SAASpQ,KAAKoQ,QAAS60B,GAiC5FzE,GAAAjgC,UAAA4kC,eAAP,WAEC,IAAKnlC,KAAKsjC,cAAe,CACxB,GAAItjC,KAAK6hC,cAAgB7hC,KAAKgiC,cAAcmC,YAC3CnkC,KAAKgiC,cAAcqC,kBAAoBrkC,KAAKskC,YAAYC,iBAAiBvkC,KAAKkiC,SAAUliC,KAAKmiC,SAAUniC,UAClG,CACN,GAAIolC,GAAqCplC,KAAKskC,YAAYC,iBAAiBvkC,KAAKkiC,SAAUliC,KAAKmiC,SAAUniC,KAEzG,IAAIA,KAAKqlC,aAAerlC,KAAKgiC,cAAcqC,mBAAqB,MAAQe,EAAgBE,iBAAmBtlC,KAAKgiC,cAAcqC,kBAAkBiB,iBAC/ItlC,KAAKgiC,cAAcqC,kBAAoBe,GAG3C,OAAA5E,KAEc/gC,GAAAJ,QAALmhC,I5B0rNN+E,iCAAiCnkC,UAAUquB,qCAAqC,qCAAqC8P,sCAAsC,sCAAsCiG,qCAAqC,qCAAqCC,wCAAwC,wCAAwCtlB,+CAA+C,+CAA+CulB,0CAA0C,0CAA0CC,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAAStnC,EAAQkB,EAAOJ,G6BlzOjwB,GAAOoiB,GAAmBljB,EAAY,6CAItC,IAAMunC,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHL/lC,KAAAgmC,aAAuB,IAK7BhmC,MAAK+lC,aAAeA,EAGdD,EAAAvlC,UAAA0lC,cAAP,WAEC,GAAIjmC,KAAKkmC,eACRlmC,KAAKkmC,eAAezqB,sBAGtB9a,QAAAC,eAAWklC,EAAAvlC,UAAA,gB7B0yOJM,I6B1yOP,WAEC,MAAOb,MAAKkmC,gB7B2yONvjC,I6BxyOP,SAAwBkN,GAEvB,GAAI7P,KAAKkmC,gBAAkBr2B,EAC1B,MAED,IAAI7P,KAAKkmC,gBAAkBlmC,KAAKgmC,aAC/BhmC,KAAKkmC,eAAe7pB,aAAe,IAEpCrc,MAAKkmC,eAAiBr2B,CAEtB,IAAI7P,KAAKkmC,gBAAkBlmC,KAAKgmC,aAC/BhmC,KAAKkmC,eAAe7pB,aAAerc,IAEpCA,MAAKimC,iB7BqyOCllC,WAAY,KACZC,aAAc,M6BnyOrBL,QAAAC,eAAWklC,EAAAvlC,UAAA,c7BsyOJM,I6BtyOP,WAEC,MAAOb,MAAKgmC,c7BuyONrjC,I6BpyOP,SAAsBkN,GAErB,GAAI7P,KAAKgmC,cAAgBn2B,EACxB,MAED7P,MAAKgmC,aAAen2B,CAEpB,IAAI7P,KAAKkmC,eAAgB,CACxB,GAAIlmC,KAAKgmC,aACRhmC,KAAKkmC,eAAe7pB,aAAerc,SAEnCA,MAAKkmC,eAAe7pB,aAAe,O7BoyO/Btb,WAAY,KACZC,aAAc,M6BjyOd8kC,GAAAvlC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAI1kB,GAGJqkB,GAAAvlC,UAAA+b,iBAAP,WAEC,GAAItc,KAAKomC,mBAAqBpmC,KAAKgmC,aAAc,CAChDhmC,KAAKomC,kBAAoB,KACzBpmC,MAAKimC,iBAGR,OAAAH,KAEwBrmC,GAAAJ,QAAfymC,I7BmyONtiB,6CAA6CpiB,YAAYilC,wDAAwD,SAAS9nC,EAAQkB,EAAOJ,GAC5I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Bp3OtB,IAAOuK,GAAUrM,EAAc,kCAE/B,IAAOunC,GAAcvnC,EAAa,gD9B23OlC,I8Bn3OM+nC,GAAqB,SAAA5lC,GAASX,EAA9BumC,EAAqB5lC,EA6I1B,SA7IK4lC,GA6IOP,EAAmCQ,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKlmC,EAAApB,KAAAU,KAAM+lC,EA7IA/lC,MAAA6mC,kBAA2B,CAC1B7mC,MAAA8mC,mBAA4B,EAE5B9mC,MAAA+mC,UAAmB,CACnB/mC,MAAAgnC,WAAoB,EACpBhnC,MAAAinC,eAAwB,EACxBjnC,MAAAknC,cAAuB,EACvBlnC,MAAAmnC,OAAgB,CAChBnnC,MAAAonC,eAAwB,CACxBpnC,MAAAqnC,iBAA0B,CAC1BrnC,MAAAsnC,cAAwB,KAEzBtnC,MAAAunC,IAAc,KAmIpBvnC,MAAKumC,SAAWA,CAChBvmC,MAAKwmC,UAAYA,CACjBxmC,MAAKymC,aAAeA,CACpBzmC,MAAK0mC,aAAeA,CACpB1mC,MAAK2mC,MAAQA,CACb3mC,MAAK4mC,aAAeA,CAGpB5mC,MAAK6mC,kBAAoB7mC,KAAK+mC,SAC9B/mC,MAAK8mC,mBAAqB9mC,KAAKgnC,WAlIhCrmC,OAAAC,eAAW0lC,EAAA/lC,UAAA,S9Bu4OJM,I8Bv4OP,WAEC,MAAOb,MAAKmnC,Q9Bw4ONxkC,I8Br4OP,SAAiBkN,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI7P,KAAKmnC,QAAUt3B,EAClB,MAED7P,MAAKmnC,OAASt3B,CAEd7P,MAAKimC,iB9Bm4OCllC,WAAY,KACZC,aAAc,M8B93OrBL,QAAAC,eAAW0lC,EAAA/lC,UAAA,Y9Bo4OJM,I8Bp4OP,WAEC,MAAOb,MAAK+mC,W9Bq4ONpkC,I8Bl4OP,SAAoBkN,GAEnB,GAAI7P,KAAK+mC,WAAal3B,EACrB,MAED7P,MAAK+mC,UAAYl3B,CAEjB7P,MAAKimC,iB9Bi4OCllC,WAAY,KACZC,aAAc,M8B53OrBL,QAAAC,eAAW0lC,EAAA/lC,UAAA,a9Bk4OJM,I8Bl4OP,WAEC,MAAOb,MAAKgnC,Y9Bm4ONrkC,I8Bh4OP,SAAqBkN,GAEpBA,EAAMzM,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAer3B,GAEhE,IAAI7P,KAAKgnC,YAAcn3B,EACtB,MAED7P,MAAKgnC,WAAan3B,CAElB7P,MAAKimC,iB9B83OCllC,WAAY,KACZC,aAAc,M8Bv3OrBL,QAAAC,eAAW0lC,EAAA/lC,UAAA,gB9B+3OJM,I8B/3OP,WAEC,MAAOb,MAAKinC,e9Bg4ONtkC,I8B73OP,SAAwBkN,GAEvB,GAAI7P,KAAKinC,eAAiBp3B,EACzB,MAED7P,MAAKinC,cAAgBp3B,CAErB7P,MAAKwmC,UAAYpjC,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAelnC,KAAKgnC,c9B43O1EjmC,WAAY,KACZC,aAAc,M8Br3OrBL,QAAAC,eAAW0lC,EAAA/lC,UAAA,gB9B63OJM,I8B73OP,WAEC,MAAOb,MAAKknC,e9B83ONvkC,I8B33OP,SAAwBkN,GAEvB,GAAI7P,KAAKknC,eAAiBr3B,EACzB,MAED7P,MAAKknC,cAAgBr3B,CAErB7P,MAAKwmC,UAAYpjC,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAelnC,KAAKgnC,c9B03O1EjmC,WAAY,KACZC,aAAc,M8Bp3OrBL,QAAAC,eAAW0lC,EAAA/lC,UAAA,gB9B03OJM,I8B13OP,WAEC,MAAOb,MAAKsnC,e9B23ON3kC,I8Bx3OP,SAAwBkN,GAEvB,GAAI7P,KAAKsnC,eAAiBz3B,EACzB,MAED7P,MAAKsnC,cAAgBz3B,CAErB7P,MAAKimC,iB9Bu3OCllC,WAAY,KACZC,aAAc,M8Bv1OdslC,GAAA/lC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAInmC,KAAKgnC,YAAchnC,KAAK8mC,oBAAsB9mC,KAAK+mC,WAAa/mC,KAAK6mC,kBAAmB,CAE3F7mC,KAAKomC,kBAAoB,IAEzB,IAAIpmC,KAAKsnC,cAAe,CACvB,GAAItnC,KAAK+mC,UAAY,EAAG,CACvB/mC,KAAK6mC,mBAAqB7mC,KAAK+mC,UAAU,IAAM,IAAM/mC,KAAK+mC,SAC1D/mC,MAAK+mC,UAAY/mC,KAAK+mC,UAAU,IAAM,QAChC,CACN/mC,KAAK6mC,mBAAqB7mC,KAAK+mC,UAAU,IAAM/mC,KAAK+mC,SACpD/mC,MAAK+mC,UAAY/mC,KAAK+mC,UAAU,IAGjC,MAAO/mC,KAAK+mC,UAAY/mC,KAAK6mC,mBAAqB,IACjD7mC,KAAK6mC,mBAAqB,GAE3B,OAAO7mC,KAAK+mC,UAAY/mC,KAAK6mC,kBAAoB,IAChD7mC,KAAK6mC,mBAAqB,IAG5B,GAAIV,EAAa,CAChBnmC,KAAK8mC,qBAAuB9mC,KAAKgnC,WAAahnC,KAAK8mC,qBAAqB9mC,KAAK2mC,MAAQ,EACrF3mC,MAAK6mC,oBAAsB7mC,KAAK+mC,UAAY/mC,KAAK6mC,oBAAoB7mC,KAAK2mC,MAAQ,OAC5E,CACN3mC,KAAK8mC,mBAAqB9mC,KAAKgnC,UAC/BhnC,MAAK6mC,kBAAoB7mC,KAAK+mC,UAI/B,GAAK3jC,KAAKszB,IAAI12B,KAAKwmC,UAAYxmC,KAAK8mC,oBAAsB,KAAU1jC,KAAKszB,IAAI12B,KAAK+mC,UAAY/mC,KAAK6mC,mBAAqB,IAAO,CAC9H7mC,KAAK8mC,mBAAqB9mC,KAAKgnC,UAC/BhnC,MAAK6mC,kBAAoB7mC,KAAK+mC,WAIhC/mC,KAAK+lC,aAAa/1B,UAAYhQ,KAAK8mC,kBACnC9mC,MAAK+lC,aAAa91B,UAAYjQ,KAAK6mC,iBAEnC,IAAI7mC,KAAKonC,eAAgB,CACxB,GAAIpnC,KAAKunC,IAAK,CACbvnC,KAAK+lC,aAAa38B,UAAUonB,YAAYxwB,KAAKonC,oBACvC,CACNpnC,KAAK+lC,aAAa9iC,GAAKjD,KAAKonC,eAAehkC,KAAKokC,IAAIxnC,KAAK+mC,UAAUn8B,EAAWkH,mBAC9E9R,MAAK+lC,aAAax/B,GAAKvG,KAAKonC,eAAehkC,KAAKqkC,IAAIznC,KAAK+mC,UAAUn8B,EAAWkH,oBAE/E9R,KAAKonC,eAAiB,EAGvB,GAAIpnC,KAAKqnC,iBAAkB,CAC1BrnC,KAAK+lC,aAAa38B,UAAUunB,UAAU3wB,KAAKqnC,iBAC3CrnC,MAAKqnC,iBAAmB,GAKnBf,GAAA/lC,UAAAmnC,cAAP,SAAqB73B,GAEpB,GAAIA,GAAO,EACV,MAED7P,MAAKonC,gBAAkBv3B,CAEvB7P,MAAKimC,gBAGCK,GAAA/lC,UAAAonC,gBAAP,SAAuB93B,GAEtB,GAAIA,GAAO,EACV,MAED7P,MAAKqnC,kBAAoBx3B,CAEzB7P,MAAKimC,gBAGP,OAAAK,IArPoCR,EAuPpCrmC,GAA+BJ,QAAtBinC,I9Bs1ON7mB,kCAAkCre,UAAUykC,gDAAgD,kDAAkD+B,mDAAmD,SAASrpC,EAAQkB,EAAOJ,GAC5N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+B3lPtB,IAAOwnC,GAAetpC,EAAa,iD/BomPnC,I+B5lPMupC,GAAgB,SAAApnC,GAASX,EAAzB+nC,EAAgBpnC,EAErB,SAFKonC,GAEO/B,EAAmCgC,EAAmCvB,EAAuB7rB,GAA7F,GAAAorB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAvB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA7rB,QAAA,GAAqB,CAArBA,EAAA,IAExGja,EAAApB,KAAAU,KAAM+lC,EAAcgC,EAAc,EAAGvB,EAAW7rB,GAG1CmtB,EAAAvnC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,IAAKnmC,KAAK+nC,aACT,MAED/nC,MAAKumC,SAAWvmC,KAAKgoC,eAAe/3B,UAAY,GAChDvP,GAAAH,UAAM6c,OAAM9d,KAAAU,MAEd,OAAA8nC,IAf+BD,EAiBLpoC,GAAAJ,QAAjByoC,I/B+lPNG,iDAAiD,mDAAmDA,kDAAkD,SAAS1pC,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgC9nPtB,IAAOuK,GAAUrM,EAAc,kCAC/B,IAAOyM,GAAQzM,EAAe,gCAG9B,IAAO2pC,GAAgB3pC,EAAa,kDhCooPpC,IgC7nPMspC,GAAe,SAAAnnC,GAASX,EAAxB8nC,EAAennC,EA6NpB,SA7NKmnC,GA6NO9B,EAAmCgC,EAAmCxB,EAAqBC,EAAuB7rB,EAAwB8rB,EAA2BC,EAA0ByB,EAA2BC,EAA2BzB,EAAkB0B,EAAoBzB,GAA3R,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA7rB,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAA8rB,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAyB,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAzB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAzB,QAAA,GAA4B,CAA5BA,EAAA,MAEtSlmC,EAAApB,KAAAU,KAAM+lC,EAAcgC,EA7Nd/nC,MAAA6mC,kBAA2B,CAC3B7mC,MAAA8mC,mBAA4B,EAE3B9mC,MAAA+mC,UAAmB,CACnB/mC,MAAAgnC,WAAoB,EACpBhnC,MAAAsoC,UAAmB,GACnBtoC,MAAAuoC,cAAuBC,QACvBxoC,MAAAyoC,aAAsBD,QACtBxoC,MAAAinC,eAAwB,EACxBjnC,MAAAknC,cAAuB,EACvBlnC,MAAAmnC,OAAgB,CAChBnnC,MAAA0oC,SAAkB,CAClB1oC,MAAAsnC,cAAwB,KACxBtnC,MAAA2oC,QAAmB,GAAI39B,EAkN9BhL,MAAK2a,SAAWA,CAChB3a,MAAKumC,SAAWA,CAChBvmC,MAAKwmC,UAAYA,CACjBxmC,MAAKmoC,YAAgBA,GAAe,KAAQA,GAAeK,QAC3DxoC,MAAKooC,YAAgBA,GAAe,KAAQA,EAAcI,QAC1DxoC,MAAKymC,aAAeA,CACpBzmC,MAAK0mC,aAAeA,CACpB1mC,MAAK2mC,MAAQA,CACb3mC,MAAKqoC,QAAUA,CACfroC,MAAK4mC,aAAeA,CAGpB5mC,MAAK6mC,kBAAoB7mC,KAAK+mC,SAC9B/mC,MAAK8mC,mBAAqB9mC,KAAKgnC,WArNhCrmC,OAAAC,eAAWinC,EAAAtnC,UAAA,ShC2pPJM,IgC3pPP,WAEC,MAAOb,MAAKmnC,QhC4pPNxkC,IgCzpPP,SAAiBkN,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI7P,KAAKmnC,QAAUt3B,EAClB,MAED7P,MAAKmnC,OAASt3B,CAEd7P,MAAKimC,iBhCupPCllC,WAAY,KACZC,aAAc,MgClpPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,YhCwpPJM,IgCxpPP,WAEC,MAAOb,MAAK+mC,WhCypPNpkC,IgCtpPP,SAAoBkN,GAEnBA,EAAMzM,KAAKuC,IAAI3F,KAAKuoC,aAAcnlC,KAAKsB,IAAI1E,KAAKyoC,aAAc54B,GAE9D,IAAI7P,KAAK+mC,WAAal3B,EACrB,MAED7P,MAAK+mC,UAAYl3B,CAEjB7P,MAAKimC,iBhCopPCllC,WAAY,KACZC,aAAc,MgC/oPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,ahCqpPJM,IgCrpPP,WAEC,MAAOb,MAAKgnC,YhCspPNrkC,IgCnpPP,SAAqBkN,GAEpBA,EAAMzM,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAer3B,GAEhE,IAAI7P,KAAKgnC,YAAcn3B,EACtB,MAED7P,MAAKgnC,WAAan3B,CAElB7P,MAAKimC,iBhCipPCllC,WAAY,KACZC,aAAc,MgC5oPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,YhCkpPJM,IgClpPP,WAEC,MAAOb,MAAKsoC,WhCmpPN3lC,IgChpPP,SAAoBkN,GAEnB,GAAI7P,KAAKsoC,WAAaz4B,EACrB,MAED7P,MAAKsoC,UAAYz4B,CAEjB7P,MAAKimC,iBhC+oPCllC,WAAY,KACZC,aAAc,MgCxoPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,ehCgpPJM,IgChpPP,WAEC,MAAOb,MAAKuoC,chCipPN5lC,IgC9oPP,SAAuBkN,GAEtB,GAAI7P,KAAKuoC,cAAgB14B,EACxB,MAED7P,MAAKuoC,aAAe14B,CAEpB7P,MAAKumC,SAAWnjC,KAAKuC,IAAI3F,KAAKuoC,aAAcnlC,KAAKsB,IAAI1E,KAAKyoC,aAAczoC,KAAK+mC,ahC6oPvEhmC,WAAY,KACZC,aAAc,MgCtoPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,ehC8oPJM,IgC9oPP,WAEC,MAAOb,MAAKyoC,chC+oPN9lC,IgC5oPP,SAAuBkN,GAEtB,GAAI7P,KAAKyoC,cAAgB54B,EACxB,MAED7P,MAAKyoC,aAAe54B,CAEpB7P,MAAKumC,SAAWnjC,KAAKuC,IAAI3F,KAAKuoC,aAAcnlC,KAAKsB,IAAI1E,KAAKyoC,aAAczoC,KAAK+mC,ahC2oPvEhmC,WAAY,KACZC,aAAc,MgCpoPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,gBhC4oPJM,IgC5oPP,WAEC,MAAOb,MAAKinC,ehC6oPNtkC,IgC1oPP,SAAwBkN,GAEvB,GAAI7P,KAAKinC,eAAiBp3B,EACzB,MAED7P,MAAKinC,cAAgBp3B,CAErB7P,MAAKwmC,UAAYpjC,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAelnC,KAAKgnC,chCyoP1EjmC,WAAY,KACZC,aAAc,MgCloPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,gBhC0oPJM,IgC1oPP,WAEC,MAAOb,MAAKknC,ehC2oPNvkC,IgCxoPP,SAAwBkN,GAEvB,GAAI7P,KAAKknC,eAAiBr3B,EACzB,MAED7P,MAAKknC,cAAgBr3B,CAErB7P,MAAKwmC,UAAYpjC,KAAKuC,IAAI3F,KAAKinC,cAAe7jC,KAAKsB,IAAI1E,KAAKknC,cAAelnC,KAAKgnC,chCuoP1EjmC,WAAY,KACZC,aAAc,MgChoPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,WhCwoPJM,IgCxoPP,WAEC,MAAOb,MAAK0oC,UhCyoPN/lC,IgCtoPP,SAAmBkN,GAElB,GAAI7P,KAAK0oC,UAAY74B,EACpB,MAED7P,MAAK0oC,SAAW74B,CAEhB7P,MAAKimC,iBhCqoPCllC,WAAY,KACZC,aAAc,MgChoPrBL,QAAAC,eAAWinC,EAAAtnC,UAAA,gBhCsoPJM,IgCtoPP,WAEC,MAAOb,MAAKsnC,ehCuoPN3kC,IgCpoPP,SAAwBkN,GAEvB,GAAI7P,KAAKsnC,eAAiBz3B,EACzB,MAED7P,MAAKsnC,cAAgBz3B,CAErB7P,MAAKimC,iBhCmoPCllC,WAAY,KACZC,aAAc,MgC/lPd6mC,GAAAtnC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAInmC,KAAKgnC,YAAchnC,KAAK8mC,oBAAsB9mC,KAAK+mC,WAAa/mC,KAAK6mC,kBAAmB,CAE3F7mC,KAAKomC,kBAAoB,IAEzB,IAAIpmC,KAAKsnC,cAAe,CACvB,GAAItnC,KAAK+mC,UAAY,EAAG,CACvB/mC,KAAK6mC,mBAAqB7mC,KAAK+mC,UAAU,IAAM,IAAM/mC,KAAK+mC,SAC1D/mC,MAAK+mC,UAAY/mC,KAAK+mC,UAAU,IAAM,QAChC,CACN/mC,KAAK6mC,mBAAqB7mC,KAAK+mC,UAAU,IAAM/mC,KAAK+mC,SACpD/mC,MAAK+mC,UAAY/mC,KAAK+mC,UAAU,IAGjC,MAAO/mC,KAAK+mC,UAAY/mC,KAAK6mC,mBAAqB,IACjD7mC,KAAK6mC,mBAAqB,GAE3B,OAAO7mC,KAAK+mC,UAAY/mC,KAAK6mC,kBAAoB,IAChD7mC,KAAK6mC,mBAAqB,IAG5B,GAAIV,EAAa,CAChBnmC,KAAK8mC,qBAAuB9mC,KAAKgnC,WAAahnC,KAAK8mC,qBAAqB9mC,KAAK2mC,MAAQ,EACrF3mC,MAAK6mC,oBAAsB7mC,KAAK+mC,UAAY/mC,KAAK6mC,oBAAoB7mC,KAAK2mC,MAAQ,OAC5E,CACN3mC,KAAK6mC,kBAAoB7mC,KAAK+mC,SAC9B/mC,MAAK8mC,mBAAqB9mC,KAAKgnC,WAIhC,GAAK5jC,KAAKszB,IAAI12B,KAAKwmC,UAAYxmC,KAAK8mC,oBAAsB,KAAU1jC,KAAKszB,IAAI12B,KAAK+mC,UAAY/mC,KAAK6mC,mBAAqB,IAAO,CAC9H7mC,KAAK8mC,mBAAqB9mC,KAAKgnC,UAC/BhnC,MAAK6mC,kBAAoB7mC,KAAK+mC,WAIhC,GAAIhxB,GAAgB/V,KAAiB,aAAGA,KAAK+nC,aAAa3+B,UAAU6M,SAAYjW,KAAmB,eAAGA,KAAK4oC,eAAiB5oC,KAAK6oC,QACjI7oC,MAAK+lC,aAAa9iC,EAAI8S,EAAI9S,EAAIjD,KAAK2a,SAASvX,KAAKokC,IAAIxnC,KAAK6mC,kBAAkBj8B,EAAWkH,oBAAoB1O,KAAKqkC,IAAIznC,KAAK8mC,mBAAmBl8B,EAAWkH,mBACvJ9R,MAAK+lC,aAAa7iC,EAAI6S,EAAI7S,EAAIlD,KAAK2a,SAASvX,KAAKokC,IAAIxnC,KAAK8mC,mBAAmBl8B,EAAWkH,oBAAoB9R,KAAKqoC,OACjHroC,MAAK+lC,aAAax/B,EAAIwP,EAAIxP,EAAIvG,KAAK2a,SAASvX,KAAKqkC,IAAIznC,KAAK6mC,kBAAkBj8B,EAAWkH,oBAAoB1O,KAAKqkC,IAAIznC,KAAK8mC,mBAAmBl8B,EAAWkH,mBAEvJ9R,MAAK2oC,QAAQ1lC,GAAKG,KAAKokC,IAAIxnC,KAAK6mC,kBAAkBj8B,EAAWkH,oBAAoB1O,KAAKokC,IAAIxnC,KAAK8mC,mBAAmBl8B,EAAWkH,mBAC7H9R,MAAK2oC,QAAQzlC,EAAIE,KAAKqkC,IAAIznC,KAAK8mC,mBAAmBl8B,EAAWkH,mBAC7D9R,MAAK2oC,QAAQpiC,GAAKnD,KAAKqkC,IAAIznC,KAAK6mC,kBAAkBj8B,EAAWkH,oBAAoB1O,KAAKokC,IAAIxnC,KAAK8mC,mBAAmBl8B,EAAWkH,mBAE7H,IAAI9R,KAAKkmC,eAAgB,CACxB,GAAIlmC,KAAK8oC,iBACR9oC,KAAKkmC,eAAehuB,OAAOlY,KAAK8oC,iBAAkB9oC,KAAK2oC,aACnD,IAAI3oC,KAAKgoC,eACbhoC,KAAKkmC,eAAehuB,OAAOlY,KAAKgoC,eAAepsB,MAAO5b,KAAKgoC,eAAehuB,cAAgBha,KAAKgoC,eAAe5+B,UAAU6M,SAAUjW,KAAK2oC,UAG3I,OAAAd,IAjT8BK,EAmT9BzoC,GAAyBJ,QAAhBwoC,IhCumPNpoB,kCAAkCre,UAAU0e,gCAAgC1e,UAAU2nC,kDAAkD,oDAAoDA,mDAAmD,SAASxqC,EAAQkB,EAAOJ,GAC1Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiC16PtB,IAAO2K,GAAQzM,EAAe,gCAG9B,IAAOunC,GAAcvnC,EAAa,gDAClC,IAAO+M,GAAkB/M,EAAY,+CAErC,IAAM2pC,GAAgB,SAAAxnC,GAASX,EAAzBmoC,EAAgBxnC,EAQrB,SARKwnC,GAQOnC,EAAmCgC,GARhD,GAAA9L,GAAAj8B,IAQa,IAAA+lC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAE9CrnC,EAAApB,KAAAU,KAAM+lC,EANA/lC,MAAA6oC,SAAoB,GAAI79B,GAAS,EAAK,EAAK,EAQjDhL,MAAKgpC,+BAAiC,SAACjqB,GAA6B,MAAAkd,GAAKgN,sBAAsBlqB,GAE/F,IAAIgpB,EACH/nC,KAAK+nC,aAAeA,MAEpB/nC,MAAK4oC,eAAiB,GAAI59B,GAG5BrK,OAAAC,eAAWsnC,EAAA3nC,UAAA,kBjCo6PJM,IiCp6PP,WAEC,MAAOb,MAAK8oC,kBjCq6PNnmC,IiCl6PP,SAA0BkN,GAEzB,GAAI7P,KAAKgoC,eAAgB,CACxBhoC,KAAKgoC,eAAextB,oBAAoBlP,EAAmB6I,uBAAwBnU,KAAKgpC,+BACxFhpC,MAAKgoC,eAAiB,KAGvBhoC,KAAK8oC,iBAAmBj5B,CACxB7P,MAAKimC,iBjCk6PCllC,WAAY,KACZC,aAAc,MiCh6PrBL,QAAAC,eAAWsnC,EAAA3nC,UAAA,gBjCm6PJM,IiCn6PP,WAEC,MAAOb,MAAKgoC,gBjCo6PNrlC,IiCj6PP,SAAwBkN,GAEvB,GAAI7P,KAAK8oC,iBACR9oC,KAAK8oC,iBAAmB,IAEzB,IAAI9oC,KAAKgoC,gBAAkBn4B,EAC1B,MAED,IAAI7P,KAAKgoC,eACRhoC,KAAKgoC,eAAextB,oBAAoBlP,EAAmB6I,uBAAwBnU,KAAKgpC,+BAEzFhpC,MAAKgoC,eAAiBn4B,CAEtB,IAAI7P,KAAKgoC,eACRhoC,KAAKgoC,eAAe10B,iBAAiBhI,EAAmB6I,uBAAwBnU,KAAKgpC,+BAEtFhpC,MAAKimC,iBjC65PCllC,WAAY,KACZC,aAAc,MiC15PdknC,GAAA3nC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAInmC,KAAKkmC,eAAgB,CACxB,GAAIlmC,KAAK8oC,iBACR9oC,KAAKkmC,eAAehuB,OAAOlY,KAAK8oC,sBAC5B,IAAI9oC,KAAKgoC,eACbhoC,KAAKkmC,eAAehuB,OAAOlY,KAAKgoC,eAAepsB,MAAO5b,KAAKgoC,eAAehuB,cAAgBha,KAAKgoC,eAAe5+B,UAAU6M;EAInHiyB,GAAA3nC,UAAA0oC,sBAAR,SAA8BlqB,GAE7B/e,KAAKimC,gBAEP,OAAAiC,IA3E+BpC,EA6E/BrmC,GAA0BJ,QAAjB6oC,IjC65PNpoB,gCAAgC1e,UAAUykC,gDAAgD,gDAAgD1lB,+CAA+C,iDAAiD+oB,mDAAmD,SAAS3qC,EAAQkB,EAAOJ,GACxT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkCr/PtB,IAAO2K,GAAQzM,EAAe,gCAG9B,IAAO2pC,GAAgB3pC,EAAa,kDlC2/PpC,IkCp/PM4qC,GAAgB,SAAAzoC,GAASX,EAAzBopC,EAAgBzoC,EA+BrB,SA/BKyoC,GA+BOpD,EAAmCgC,EAAmCqB,EAAsBC,EAAkBC,GAA9G,GAAAvD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAqB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzH5oC,EAAApB,KAAAU,KAAM+lC,EAAcgC,EAJd/nC,MAAAupC,eAA0B,GAAIv+B,GAAS,EAAG,KAAM,IAMtDhL,MAAKopC,UAAYA,CACjBppC,MAAKspC,QAAUA,CACftpC,MAAKqpC,KAAOA,CAEZrpC,MAAKwpC,UAAY,GAAIx+B,EACrBhL,MAAKypC,IAAM,GAAIz+B,EACfhL,MAAK0pC,SAAW,GAAI1+B,EACpBhL,MAAK2pC,OAAS,GAAI3+B,EAClBhL,MAAK4pC,cAAgB,GAAI5+B,EACzBhL,MAAK6pC,iBAAmB,GAAI7+B,GAItBm+B,EAAA5oC,UAAA6c,OAAP,SAAc+oB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI2D,EAEJ,KAAK9pC,KAAKgoC,iBAAmBhoC,KAAKkmC,eACjC,MAEDlmC,MAAKomC,kBAAoB,IAEzB0D,GAAO9pC,KAAKgoC,eAAe5+B,UAAUytB,SAASkT,qBAAqB/pC,KAAKupC,eACxEvpC,MAAK6pC,iBAAiB5mC,EAAIjD,KAAKgoC,eAAe/kC,EAAI6mC,EAAK7mC,CACvDjD,MAAK6pC,iBAAiB3mC,EAAIlD,KAAKgoC,eAAe9kC,EAAI4mC,EAAK5mC,CACvDlD,MAAK6pC,iBAAiBtjC,EAAIvG,KAAKgoC,eAAezhC,EAAIujC,EAAKvjC,CAEvDvG,MAAK0pC,SAAW1pC,KAAKkmC,eAAe98B,UAAU6M,SAAS+zB,IAAIhqC,KAAK6pC,iBAChE7pC,MAAK0pC,SAASO,SAASjqC,KAAKopC,UAE5BppC,MAAKypC,IAAIh5B,SAASzQ,KAAKwpC,UACvBxpC,MAAKypC,IAAIQ,QAAQjqC,KAAKspC,QAEtBtpC,MAAK2pC,OAAO1mC,EAAIjD,KAAK0pC,SAASzmC,EAAIjD,KAAKypC,IAAIxmC,CAC3CjD,MAAK2pC,OAAOzmC,EAAIlD,KAAK0pC,SAASxmC,EAAIlD,KAAKypC,IAAIvmC,CAC3ClD,MAAK2pC,OAAOpjC,EAAIvG,KAAK0pC,SAASnjC,EAAIvG,KAAKypC,IAAIljC,CAE3CvG,MAAK4pC,cAAcn5B,SAASzQ,KAAK2pC,OACjC3pC,MAAK4pC,cAAcK,QAAQ,EAAEjqC,KAAKqpC,KAElCrpC,MAAKwpC,UAAUU,YAAYlqC,KAAK4pC,cAEhC5pC,MAAKkmC,eAAe98B,UAAU6M,SAAWjW,KAAKkmC,eAAe98B,UAAU6M,SAAS+zB,IAAIhqC,KAAKwpC,UAEzF9oC,GAAAH,UAAM6c,OAAM9d,KAAAU,MAEd,OAAAmpC,IAjF+BjB,EAmFLzoC,GAAAJ,QAAjB8pC,IlCm9PNrpB,gCAAgC1e,UAAU2nC,kDAAkD,oDAAoDoB,qCAAqC,SAAS5rC,EAAQkB,EAAOJ,GAQhN,GmCjjQM+qC,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEA3qC,GAAmBJ,QAAV+qC,OnCkjQHI,wCAAwC,SAASjsC,EAAQkB,EAAOJ,GAOtE,GoC/kQMorC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAhrC,GAAsBJ,QAAborC,OpCilQHG,+CAA+C,SAASrsC,EAAQkB,EAAOJ,GAW7E,GqCrmQMwrC,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAEAprC,GAA6BJ,QAApBwrC,OrCwmQHG,oCAAoC,SAASzsC,EAAQkB,EAAOJ,GAelE,GsC5mQM4rC,GAAQ,WAAd,QAAMA,MAuCEA,EAAA1qC,UAAA2qC,gBAAP,SAAuBC,EAAsB1V,EAAsB2V,EAAuBC,GAA7C,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA2V,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAA1qC,UAAA+qC,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAA1qC,UAAAkrC,kBAAP,SAAyBl4B,EAAmBgR,EAA8BmnB,EAAsBC,EAA8BlW,EAAsBmW,EAA6BC,EAAoCC,GAAvF,GAAArW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAmW,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mb,GAAA1qC,UAAAoZ,MAAP,YAYOsxB,GAAA1qC,UAAAkQ,SAAP,SAAgBs7B,IAuDTd,GAAA1qC,UAAAyrC,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGrB,GAAA1qC,UAAAgsC,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DrB,GAAA1qC,UAAAmsC,WAAP,SAAkBzpC,EAAUC,EAAUy0B,IAqB/BsT,GAAA1qC,UAAAosC,YAAP,SAAmB1pC,EAAUC,EAAUkB,EAAcC,IAiB9C4mC,GAAA1qC,UAAAqsC,iBAAP,SAAwBC,IAkDjB5B,GAAA1qC,UAAAusC,SAAP,SAAgBC,EAAgCnP,EAAoBoP,IAsB7D/B,GAAA1qC,UAAA0sC,SAAP,SAAgBhqC,EAAUC,EAAUkB,EAAcC,IA+B3C4mC,GAAA1qC,UAAA2sC,cAAP,SAAqBjqC,EAAUC,EAAUkB,EAAcC,EAAe8oC,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFpC,GAAA1qC,UAAA+sC,cAAP,SAAqBC,EAAwB5kC,EAAsC6kC,EAA8BC,GAApE,GAAA9kC,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAA6kC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1GxC,GAAA1qC,UAAAmtC,QAAP,YAkCOzC,GAAA1qC,UAAAotC,gBAAP,SAAuBxC,EAAsB1V,EAAsB2V,EAAuBC,GAA7C,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA2V,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAA1qC,UAAAqtC,kBAAP,SAAyBr6B,EAAmBgR,EAA8BmnB,EAAsBC,EAAsBlW,EAAsBmW,EAAkCC,EAAgDC,GAAxG,GAAArW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAmW,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNb,GAAA1qC,UAAAstC,UAAP,SAAiBvpB,EAAsBinB,EAA0BC,EAAkBsC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAA5pB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAinB,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAsC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LjD,GAAA1qC,UAAA4tC,OAAP,SAAclrC,EAAUC,IAejB+nC,GAAA1qC,UAAA2Y,OAAP,SAAcjW,EAAUC,IAIzB,OAAA+nC,KAEAxrC,GAAkBJ,QAAT4rC,OtC4kQHmD,yCAAyC,SAAS7vC,EAAQkB,EAAOJ,SAEjEgvC,+CAA+C,SAAS9vC,EAAQkB,EAAOJ,GAQ7E,GuCp7RMivC,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAE6B7uC,GAAAJ,QAApBivC,OvCq7RHG,sCAAsC,SAASlwC,EAAQkB,EAAOJ,GASpE,GwC79RMqvC,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAArE,MAAe,OAC9B,OAAAqE,KAEAjvC,GAAoBJ,QAAXqvC,OxC89RHG,yCAAyC,SAAStwC,EAAQkB,EAAOJ,GAKvE,GyC5/RMyvC,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAxE,KAAc,MAOdwE,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEArvC,GAAuBJ,QAAdyvC,OzC4/RHI,yCAAyC,SAAS3wC,EAAQkB,EAAOJ,GAMvE,G0CviSM8vC,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEA1vC,GAAuBJ,QAAd8vC,O1CwiSHI,wCAAwC,SAAShxC,EAAQkB,EAAOJ,GAStE,G2CzkSMmwC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEsB/vC,GAAAJ,QAAbmwC,O3C0kSHI,2CAA2C,SAASrxC,EAAQkB,EAAOJ,GAsBzE,G4CrmSMwwC,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAAvF,KAAc,MAMduF,GAAAE,SAAkB,UACjC,OAAAF,KAEApwC,GAAyBJ,QAAhBwwC,O5CsmSHG,yCAAyC,SAASzxC,EAAQkB,EAAOJ,GACvE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6CjpStB,IAAO4vC,GAAS1xC,EAAe,iCAE/B,IAAOmM,GAAcnM,EAAc,sCAInC,IAAOgN,GAAahN,EAAc,wCAElC,IAAO2M,GAAU3M,EAAe,uCAEhC,IAAO2xC,GAAa3xC,EAAc,0C7CgrSlC,I6C1oSM4xC,GAAS,SAAAzvC,GAASX,EAAlBowC,EAASzvC,EA+Ld,SA/LKyvC,GA+LO5mC,EAAuB6mC,EAA+BC,GA/LnE,GAAApU,GAAAj8B,IA+LoC,IAAAowC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjE3vC,EAAApB,KAAAU,KAEAA,MAAK4L,WAAa,IAElB5L,MAAKswC,sBAAwB,SAACvxB,GAAwB,MAAAkd,GAAKsU,cAAcxxB,GAEzE/e,MAAKuJ,SAAWA,CAEhBvJ,MAAKwwC,gBAAkBjnC,EAASnF,KAChCpE,MAAKywC,iBAAmBlnC,EAASlF,MAEjCrE,MAAK0wC,eAAiB1wC,KAAKonB,UAAUupB,WAAa,GAAIV,GAAU,EAAG,EAAGjwC,KAAKwwC,gBAAiBxwC,KAAKywC,iBAGjGzwC,MAAK+O,YAAc7D,EAAW8D,gBAE9BhP,MAAKwwC,gBAAkBjnC,EAASnF,MA9LjCzD,OAAAC,eAAWuvC,EAAA5vC,UAAA,Y7C4oSJM,I6C5oSP,WAEC,MAAOb,MAAK4wC,W7C6oSN7vC,WAAY,KACZC,aAAc,M6CxoSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,a7C8oSJM,I6C9oSP,WAEC,MAAOsvC,GAAUjvC,W7C+oSXH,WAAY,KACZC,aAAc,M6CroSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,iB7C2oSJM,I6C3oSP,WAEC,MAAOb,MAAK0wC,gB7C4oSN3vC,WAAY,KACZC,aAAc,M6CvoSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,mB7C6oSJM,I6C7oSP,WAEC,MAAOb,MAAKywC,kB7C8oSN1vC,WAAY,KACZC,aAAc,M6CzoSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,kB7C+oSJM,I6C/oSP,WAEC,MAAOb,MAAKwwC,iB7CgpSNzvC,WAAY,KACZC,aAAc,M6C3oSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,Y7CipSJM,I6CjpSP,WAEC,MAAOb,MAAKonB,W7CkpSNzkB,I6C/oSP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKonB,UACjB,MAED,IAAIpnB,KAAKonB,UAAW,CACnBpnB,KAAKonB,UAAUC,aAAarnB,KAC5BA,MAAKonB,UAAU5M,oBAAoB01B,EAAcW,aAAc7wC,KAAKswC,uBAIrEtwC,KAAKonB,UAAYxkB,CAEjB,IAAI5C,KAAKonB,UAAW,CACnBpnB,KAAKonB,UAAUE,UAAUtnB,KACzBA,MAAKonB,UAAU9T,iBAAiB48B,EAAcW,aAAc7wC,KAAKswC,yB7C6oS5DvvC,WAAY,KACZC,aAAc,M6C9mSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,e7ConSJM,I6CpnSP,WAEC,MAAOb,MAAKunB,c7CqnSN5kB,I6ClnSP,SAAuBC,GAEtB5C,KAAKunB,aAAe3kB,G7CmnSd7B,WAAY,KACZC,aAAc,M6C/mSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,kB7CqnSJM,I6CrnSP,WAGC,MAAOb,MAAK8wC,iB7CsnSNnuC,I6CnnSP,SAA0BC,GAGzB5C,KAAKoJ,UAAUsL,eAAiB9R,CAEhC5C,MAAK+wC,wB7ConSChwC,WAAY,KACZC,aAAc,M6CjnSrBL,QAAAC,eAAWuvC,EAAA5vC,UAAA,wB7ConSJM,I6CpnSP,WAEC,MAAOb,MAAKgxC,uB7CqnSNruC,I6ClnSP,SAAgCC,GAG/B5C,KAAKgxC,sBAAwBpuC,CAC7B5C,MAAK+wC,wB7CmnSChwC,WAAY,KACZC,aAAc,M6CjnSbmvC,GAAA5vC,UAAAwwC,qBAAR,WAEC/wC,KAAK8wC,gBAAgB,GAAIpmC,EACzB,IAAK1K,KAA0B,uBAAIA,KAAKoJ,UAAwB,eAAE,CAEjEpJ,KAAK8wC,gBAAgBzhC,gBAAoBrP,KAAKoJ,UAAUsL,eAAerF,gBAAkBrP,KAAKgxC,sBAAsB3hC,eACpHrP,MAAK8wC,gBAAgBxiB,cAAoBtuB,KAAKoJ,UAAUsL,eAAe4Z,cAAgBtuB,KAAKgxC,sBAAsB1iB,aAClHtuB,MAAK8wC,gBAAgBriB,eAAoBzuB,KAAKoJ,UAAUsL,eAAe+Z,eAAiBzuB,KAAKgxC,sBAAsBviB,cACnHzuB,MAAK8wC,gBAAgBtiB,gBAAoBxuB,KAAKoJ,UAAUsL,eAAe8Z,gBAAkBxuB,KAAKgxC,sBAAsBxiB,eACpHxuB,MAAK8wC,gBAAgBjiB,YAAoB7uB,KAAKoJ,UAAUsL,eAAema,YAAc7uB,KAAKgxC,sBAAsBniB,WAChH7uB,MAAK8wC,gBAAgBpiB,UAAoB1uB,KAAKoJ,UAAUsL,eAAega,UAAY1uB,KAAKgxC,sBAAsBtiB,SAC9G1uB,MAAK8wC,gBAAgBliB,WAAoB5uB,KAAKoJ,UAAUsL,eAAeka,WAAa5uB,KAAKgxC,sBAAsBpiB,UAC/G5uB,MAAK8wC,gBAAgBniB,YAAoB3uB,KAAKoJ,UAAUsL,eAAeia,YAAc3uB,KAAKgxC,sBAAsBriB,gBAE5G,IAAI3uB,KAAKoJ,UAAUsL,eAAe,CACtC1U,KAAK8wC,gBAAgBzhC,gBAAoBrP,KAAKoJ,UAAUsL,eAAerF,eACvErP,MAAK8wC,gBAAgBxiB,cAAoBtuB,KAAKoJ,UAAUsL,eAAe4Z,aACvEtuB,MAAK8wC,gBAAgBriB,eAAoBzuB,KAAKoJ,UAAUsL,eAAe+Z,cACvEzuB,MAAK8wC,gBAAgBtiB,gBAAoBxuB,KAAKoJ,UAAUsL,eAAe8Z,eACvExuB,MAAK8wC,gBAAgBjiB,YAAoB7uB,KAAKoJ,UAAUsL,eAAema,WACvE7uB,MAAK8wC,gBAAgBpiB,UAAoB1uB,KAAKoJ,UAAUsL,eAAega,SACvE1uB,MAAK8wC,gBAAgBliB,WAAoB5uB,KAAKoJ,UAAUsL,eAAeka,UACvE5uB,MAAK8wC,gBAAgBniB,YAAoB3uB,KAAKoJ,UAAUsL,eAAeia,gBAEnE,IAAI3uB,KAAKgxC,sBAAsB,CACnChxC,KAAK8wC,gBAAgBzhC,gBAAoBrP,KAAKgxC,sBAAsB3hC,eACpErP,MAAK8wC,gBAAgBxiB,cAAoBtuB,KAAKgxC,sBAAsB1iB,aACpEtuB,MAAK8wC,gBAAgBriB,eAAoBzuB,KAAKgxC,sBAAsBviB,cACpEzuB,MAAK8wC,gBAAgBtiB,gBAAoBxuB,KAAKgxC,sBAAsBxiB,eACpExuB,MAAK8wC,gBAAgBjiB,YAAoB7uB,KAAKgxC,sBAAsBniB,WACpE7uB,MAAK8wC,gBAAgBpiB,UAAoB1uB,KAAKgxC,sBAAsBtiB,SACpE1uB,MAAK8wC,gBAAgBliB,WAAoB5uB,KAAKgxC,sBAAsBpiB,UACpE5uB,MAAK8wC,gBAAgBniB,YAAoB3uB,KAAKgxC,sBAAsBriB,aA4B/DwhB,GAAA5vC,UAAA6U,kBAAP,WAEC1U,EAAAH,UAAM6U,kBAAiB9V,KAAAU,KAEvBA,MAAKqV,YAAYjR,MAAQpE,KAAK0wC,eAAetsC,KAC7CpE,MAAKqV,YAAYhR,OAASrE,KAAK0wC,eAAersC,OAGxC8rC,GAAA5vC,UAAAkI,MAAP,WAEC,GAAIA,GAAkB,GAAI0nC,GAAUnwC,KAAKuJ,SACzC,OAAOd,GAWD0nC,GAAA5vC,UAAA8I,gBAAP,SAAuBI,EAAkCyT,GAExD,MAAOld,MAAKuR,kBAAkB0/B,uBAAuBjxC,KAAMA,KAAKuJ,SAAUvJ,KAAKmb,qBAAsB1R,GAM9F0mC,GAAA5vC,UAAAgwC,cAAR,SAAsBxxB,GAErB/e,KAAKwwC,gBAAkBxwC,KAAKonB,UAAUhjB,KACtCpE,MAAKywC,iBAAmBzwC,KAAKonB,UAAU/iB,MAEvCrE,MAAK0wC,eAAiB1wC,KAAKonB,UAAUupB,WAAa,GAAIV,GAAU,EAAG,EAAGjwC,KAAKwwC,gBAAiBxwC,KAAKywC,iBAEjGzwC,MAAKuP,oBAEL,IAAIC,GAAaxP,KAAKkO,cAAc3O,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKkO,cAAclP,GAAG0oB,qBAGjByoB,GAAA5vC,UAAA4d,eAAP,SAAsBC,GAKrB,GAAIpe,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErBiJ,GAAS8yB,uBAAuBlxC,MAzQnBmwC,GAAAjvC,UAAmB,mBA2QlC,OAAAivC,IA7QwB5kC,EA+QxB9L,GAAmBJ,QAAV8wC,I7CklSN3wB,sCAAsCpe,UAAU+vC,iCAAiC/vC,UAAUoJ,wCAAwC,wCAAwC0V,uCAAuC,uCAAuCkxB,0CAA0C,4CAA4C5L,sCAAsC,SAASjnC,EAAQkB,EAAOJ,GAChZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Cx5StB,IAAOwK,GAAQtM,EAAgB,gCAC/B,IAAO8yC,GAAO9yC,EAAgB,+BAE9B,IAAO+yC,GAAe/yC,EAAc,yCAEpC,IAAOgzC,GAAqBhzC,EAAY,oDAExC,IAAO0M,GAAsB1M,EAAY,iDAEzC,IAAO2M,GAAU3M,EAAe,uCAChC,IAAOmjB,GAAsBnjB,EAAY,uDAEzC,IAAO8hC,GAAW9hC,EAAe,wCAGjC,IAAM6hC,GAAM,SAAA1/B,GAASX,EAAfqgC,EAAM1/B,EAWX,SAXK0/B,GAWOqD,GAXb,GAAAxH,GAAAj8B,IAWa,IAAAyjC,QAAA,GAA6B,CAA7BA,EAAA,KAEX/iC,EAAApB,KAAAU,KATOA,MAAAwxC,gBAA2B,GAAI3mC,EAC/B7K,MAAAyxC,qBAA+B,IAG/BzxC,MAAA0xC,oBAA8B,IAOrC1xC,MAAK4L,WAAa,IAElB5L,MAAK2xC,mCAAqC,SAAC5yB,GAA0B,MAAAkd,GAAK2V,0BAA0B7yB,GAEpG/e,MAAK6xC,YAAcpO,GAAc,GAAI8N,EACrCvxC,MAAK6xC,YAAYv+B,iBAAiBg+B,EAAgBQ,eAAgB9xC,KAAK2xC,mCAEvE3xC,MAAK+xC,iBAEL,KAAK,GAAI/yC,GAAW,EAAGA,EAAI,IAAKA,EAC/BgB,KAAK+xC,eAAe/yC,GAAK,GAAIqyC,EAE9BrxC,MAAKuG,GAAK,GAGVvG,MAAK+O,YAAc7D,EAAW+sB,KAI/Bt3B,OAAAC,eAAWw/B,EAAA7/B,UAAA,a9Cu4SJM,I8Cv4SP,WAEC,MAAOu/B,GAAOl/B,W9Cw4SRH,WAAY,KACZC,aAAc,M8Ct4Sbo/B,GAAA7/B,UAAAqxC,0BAAR,SAAkC7yB,GAEjC/e,KAAKyxC,qBAAuB,IAC5BzxC,MAAK0xC,oBAAsB,IAC3B1xC,MAAKqR,cAAc0N,GAGpBpe,QAAAC,eAAWw/B,EAAA7/B,UAAA,iB9Cu4SJM,I8Cv4SP,WAEC,GAAIb,KAAK0xC,oBACR1xC,KAAKgyC,eAEN,OAAOhyC,MAAK+xC,gB9Cu4SNhxC,WAAY,KACZC,aAAc,M8Cr4Sbo/B,GAAA7/B,UAAAyxC,cAAR,WAEC,GAAIjzC,GAAUmB,EAAUu0B,C9Cw4SlB,I8Ct4SFwd,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAI7yC,EACJ,IAAIoY,GAAmBvY,KAAKizC,eAAe7/B,OAC3C,IAAI8/B,EAEJjB,GAAM15B,EAAI,EACV25B,GAAM35B,EAAI,EACV45B,GAAM55B,EAAI,EACV65B,GAAM75B,EAAI,GACV85B,GAAM95B,EAAI,EACV+5B,GAAM/5B,EAAI,EACVg6B,GAAMh6B,EAAI,EACVi6B,GAAMj6B,EAAI,GACVk6B,GAAMl6B,EAAI,EACVm6B,GAAMn6B,EAAI,EACVo6B,GAAMp6B,EAAI,GACVq6B,GAAMr6B,EAAI,GACVs6B,GAAMt6B,EAAI,EACVu6B,GAAMv6B,EAAI,EACVw6B,GAAMx6B,EAAI,GACVy6B,GAAMz6B,EAAI,GAGVpY,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI8zC,EAAMZ,CACV/xC,GAAI4yC,EAAMZ,CACVzd,GAAIse,EAAMZ,CACVe,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,IAAM+yC,EAAMZ,GAAKc,CAGnB/yC,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI8zC,EAAMZ,CACV/xC,GAAI4yC,EAAMZ,CACVzd,GAAIse,EAAMZ,CACVe,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,GAAKmyC,EAAMY,GAAKE,CAGlB/yC,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI8zC,EAAMR,CACVnyC,GAAI4yC,EAAMR,CACV7d,GAAIse,EAAMR,CACVW,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,IAAM+yC,EAAMR,GAAKU,CAGnB/yC,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI8zC,EAAMR,CACVnyC,GAAI4yC,EAAMR,CACV7d,GAAIse,EAAMR,CACVW,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,GAAKuyC,EAAMQ,GAAKE,CAGlB/yC,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI0zC,CACJvyC,GAAIwyC,CACJje,GAAIke,CACJO,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,GAAK2yC,EAAIM,CAGX/yC,GAAIH,KAAK+xC,eAAe,EACxBhzC,GAAI8zC,EAAMJ,CACVvyC,GAAI4yC,EAAMJ,CACVje,GAAIse,EAAMJ,CACVO,GAAS,EAAE9vC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAIu0B,EAAEA,EACnCt0B,GAAEpB,EAAIA,EAAEm0C,CACR/yC,GAAED,EAAIA,EAAEgzC,CACR/yC,GAAEs0B,EAAIA,EAAEye,CACR/yC,GAAEF,GAAK2yC,EAAMI,GAAKE,CAElBlzC,MAAK0xC,oBAAsB,MAIrBtR,GAAA7/B,UAAA2O,kCAAP,SAAyCoM,GAExC,GAAI5a,EAAAH,UAAM2O,kCAAiC5P,KAAAU,KAACsb,GAC3C,MAAO,KAER,IAAItb,KAAKyS,wBAA0BxH,EAAuByH,gBAAiB,CAC1E1S,KAAKyxC,qBAAuB,IAC5BzxC,MAAK0xC,oBAAsB,KAG5B,MAAO,OAMR/wC,QAAAC,eAAWw/B,EAAA7/B,UAAA,c9Cy3SJM,I8Cz3SP,WAEC,MAAOb,MAAK6xC,a9C03SNlvC,I8Cv3SP,SAAsBC,GAErB,GAAI5C,KAAK6xC,aAAejvC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAI1D,OAAM,6BAEjBc,MAAK6xC,YAAYr3B,oBAAoB82B,EAAgBQ,eAAgB9xC,KAAK2xC,mCAC1E3xC,MAAK6xC,YAAcjvC,CACnB5C,MAAK6xC,YAAYv+B,iBAAiBg+B,EAAgBQ,eAAgB9xC,KAAK2xC,mCACvE3xC,MAAKqR,cAAc,GAAIgvB,GAAYA,EAAYkD,mBAAoBvjC,Q9Cs3S7De,WAAY,KACZC,aAAc,M8Cj3SrBL,QAAAC,eAAWw/B,EAAA7/B,UAAA,kB9Cu3SJM,I8Cv3SP,WAEC,GAAIb,KAAKyxC,qBAAsB,CAC9BzxC,KAAKwxC,gBAAgB/gC,SAASzQ,KAAKuV,sBACnCvV,MAAKwxC,gBAAgB2B,OAAOnzC,KAAK6xC,YAAYpc,OAC7Cz1B,MAAKyxC,qBAAuB,MAG7B,MAAOzxC,MAAKwxC,iB9Cu3SNzwC,WAAY,KACZC,aAAc,M8C72Sdo/B,GAAA7/B,UAAA2kC,OAAP,SAAckO,EAAWC,EAAWpO,GAEnC,MAAOjlC,MAAK0Q,eAAeq5B,qBAAqB/pC,KAAK6xC,YAAYxP,UAAU+Q,EAAIC,EAAIpO,IAS7E7E,GAAA7/B,UAAAokC,QAAP,SAAeC,GAEd,MAAO5kC,MAAK6xC,YAAYlN,QAAQ3kC,KAAKuV,sBAAsBhD,gBAAgBqyB,IAWrExE,GAAA7/B,UAAA8hC,UAAP,SAAiB+Q,EAAWC,EAAWpO,GAEtC,MAAOjlC,MAAK0Q,eAAe6B,gBAAgBvS,KAAK6xC,YAAYxP,UAAU+Q,EAAIC,EAAIpO,IAGxE7E,GAAA7/B,UAAA4d,eAAP,SAAsBC,GAKrB,GAAIpe,KAAKkV,eACRlV,KAAKkV,eAAeC,aAnPRirB,GAAAl/B,UAAmB,gBAuPlC,OAAAk/B,IAzPqB1e,EA2PrBjiB,GAAgBJ,QAAP+gC,I9Ck3SNkT,yCAAyClyC,UAAUse,gCAAgCte,UAAUmyC,+BAA+BnyC,UAAUoyC,oDAAoDpyC,UAAU2e,iDAAiD,iDAAiDG,uCAAuC,uCAAuCuD,uDAAuD,uDAAuDgiB,wCAAwC,0CAA0CgO,gDAAgD,SAASl1C,EAAQkB,EAAOJ,GAC/nB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+CjoTtB,IAAOyK,GAAavM,EAAc,qCAClC,IAAOsM,GAAQtM,EAAgB,gCAC/B,IAAOyM,GAAQzM,EAAgB,gCAE/B,IAAOqjB,GAASrjB,EAAe,oCAC/B,IAAO0M,GAAsB1M,EAAY,iDACzC,IAAO2M,GAAU3M,EAAe,uCAGhC,IAAOm1C,GAAuBn1C,EAAY,qEAE1C,IAAMo1C,GAAgB,SAAAjzC,GAASX,EAAzB4zC,EAAgBjzC,EAQrB,SARKizC,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9CpzC,EAAApB,KAAAU,KALOA,MAAA+zC,aAA6B,GAAIvuC,OAAc,GAOtDxF,MAAK4L,WAAa,IAElB5L,MAAK+0B,UAAY,GAAI/pB,GAAS4oC,EAAMC,EAAMC,EAE1C9zC,MAAKg0C,gBAAkB,GAAIhpC,EAG3BhL,MAAK+O,YAAc7D,EAAW+sB,KAG/Bt3B,OAAAC,eAAW+yC,EAAApzC,UAAA,kB/CwnTJM,I+CxnTP,WAEC,GAAIb,KAAKyS,wBAA0BxH,EAAuByH,gBACzD1S,KAAK2S,uBAEN,OAAO3S,MAAKg0C,iB/CwnTNjzC,WAAY,KACZC,aAAc,M+CtnTrBL,QAAAC,eAAW+yC,EAAApzC,UAAA,a/CynTJM,I+CznTP,WAEC,MAAOb,MAAKi0C,Y/C0nTNtxC,I+CvnTP,SAAqBC,GAEpB5C,KAAKi0C,WAAarxC,CAElB,KAAK5C,KAAKk0C,WACTl0C,KAAKk0C,WAAa,GAAIlpC,EAEvBhL,MAAKk0C,WAAWjxC,EAAIjD,KAAKiD,EAAIjD,KAAKi0C,WAAWhxC,CAC7CjD,MAAKk0C,WAAWhxC,EAAIlD,KAAKkD,EAAIlD,KAAKi0C,WAAW/wC,CAC7ClD,MAAKk0C,WAAW3tC,EAAIvG,KAAKuG,EAAIvG,KAAKi0C,WAAW1tC,CAE7CvG,MAAKkY,OAAOlY,KAAKk0C,a/CqnTXnzC,WAAY,KACZC,aAAc,M+ClnTd2yC,GAAApzC,UAAAoS,sBAAP,WAECjS,EAAAH,UAAMoS,sBAAqBrT,KAAAU,KAE3BA,MAAK0Q,eAAe8B,aAAa,EAAGxS,KAAKg0C,gBAEzCh0C,MAAKg0C,gBAAgBv7B,YAIfk7B,GAAApzC,UAAAyiB,oBAAP,WAEC,MAAO,IAAI0wB,GAILC,GAAApzC,UAAA+iB,2BAAP,SAAkCC,EAAgB1J,EAAehE,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAI0C,GAAmBzN,EAAc8N,kBACrC,IAAIC,GAAa,GAAIhO,EAErBgO,GAAEpI,SAAS8S,EAAO3J,wBAAwBC,GAC1ChB,GAAEs6B,OAAOnzC,KAAKuV,sBAEd,KAAKvV,KAAKm0C,gBACTn0C,KAAKm0C,kBAENt7B,GAAEu7B,iBAAiBp0C,KAAK+zC,aAAc/zC,KAAKm0C,gBAE3C,IAAIE,GAAc7L,SAAU8L,GAAe9L,QAC3C,IAAI+L,GAAc/L,SAAUgM,GAAehM,QAC3C,IAAIiM,GAAcjM,SAAUkM,GAAelM,QAC3C,IAAIvoC,EACJ,KAAK,GAAIjB,GAAW,EAAGA,EAAI,IAAK,CAC/BiB,EAAID,KAAKm0C,gBAAgBn1C,IAEzB,IAAIiB,EAAIo0C,EACPA,EAAOp0C,CAER,IAAIA,EAAIq0C,EACPA,EAAOr0C,CAERA,GAAID,KAAKm0C,gBAAgBn1C,IAEzB,IAAIiB,EAAIs0C,EACPA,EAAOt0C,CAER,IAAIA,EAAIu0C,EACPA,EAAOv0C,CAERA,GAAID,KAAKm0C,gBAAgBn1C,IAEzB,IAAIiB,EAAIw0C,EACPA,EAAOx0C,CAER,IAAIA,EAAIy0C,EACPA,EAAOz0C,EAGT,GAAI00C,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCl8B,GAAI,GAAK,EAAEo8B,CACXp8B,GAAI,GAAK,EAAEq8B,CACXr8B,GAAI,IAAMs8B,CACVt8B,GAAI,MAAQ+7B,EAAOD,GAAMM,CACzBp8B,GAAI,MAAQi8B,EAAOD,GAAMK,CACzBr8B,GAAI,KAAOk8B,EAAKI,CAChBt8B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAK1C,EACJA,EAAS,GAAIhL,EAEdgL,GAAOiD,gBAAgBP,EACvB1C,GAAO2G,QAAQ3D,EAEf,OAAOhD,GAQD89B,GAAApzC,UAAA6U,kBAAP,WAEC1U,EAAAH,UAAM6U,kBAAiB9V,KAAAU,K/C+lTjB,I+C5lTFw6B,GAAcx6B,KAAKqV,YAAYpS,CACnC,IAAIw3B,GAAcz6B,KAAKqV,YAAYnS,EAAIlD,KAAKqV,YAAYhR,MACxD,IAAIq2B,GAAc16B,KAAKqV,YAAY9O,CACnC,IAAIo0B,GAAc36B,KAAKqV,YAAYpS,EAAIjD,KAAKqV,YAAYjR,KACxD,IAAIw2B,GAAc56B,KAAKqV,YAAYnS,CACnC,IAAI23B,GAAc76B,KAAKqV,YAAY9O,EAAIvG,KAAKqV,YAAY1F,KAExD3P,MAAK+zC,aAAa,GAAKvZ,CACvBx6B,MAAK+zC,aAAa,GAAKtZ,CACvBz6B,MAAK+zC,aAAa,GAAKrZ,CACvB16B,MAAK+zC,aAAa,GAAKpZ,CACvB36B,MAAK+zC,aAAa,GAAKtZ,CACvBz6B,MAAK+zC,aAAa,GAAKrZ,CACvB16B,MAAK+zC,aAAa,GAAKvZ,CACvBx6B,MAAK+zC,aAAa,GAAKnZ,CACvB56B,MAAK+zC,aAAa,GAAKrZ,CACvB16B,MAAK+zC,aAAa,GAAKpZ,CACvB36B,MAAK+zC,aAAa,IAAMnZ,CACxB56B,MAAK+zC,aAAa,IAAMrZ,CACxB16B,MAAK+zC,aAAa,IAAMvZ,CACxBx6B,MAAK+zC,aAAa,IAAMtZ,CACxBz6B,MAAK+zC,aAAa,IAAMlZ,CACxB76B,MAAK+zC,aAAa,IAAMpZ,CACxB36B,MAAK+zC,aAAa,IAAMtZ,CACxBz6B,MAAK+zC,aAAa,IAAMlZ,CACxB76B,MAAK+zC,aAAa,IAAMvZ,CACxBx6B,MAAK+zC,aAAa,IAAMnZ,CACxB56B,MAAK+zC,aAAa,IAAMlZ,CACxB76B,MAAK+zC,aAAa,IAAMpZ,CACxB36B,MAAK+zC,aAAa,IAAMnZ,CACxB56B,MAAK+zC,aAAa,IAAMlZ,EAE1B,OAAA8Y,IA5K+B/xB,EA8KLniB,GAAAJ,QAAjBs0C,I/C6lTNj0B,gCAAgCte,UAAUue,qCAAqCve,UAAU0e,gCAAgC1e,UAAU2e,iDAAiD,iDAAiDyB,oCAAoC,oCAAoCtB,uCAAuC,uCAAuC40B,qEAAqE,uEAAuEC,uCAAuC,SAASx2C,EAAQkB,EAAOJ,SAEnkB21C,0CAA0C,SAASz2C,EAAQkB,EAAOJ,GACxE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgD1xTtB,IAAOnB,GAAKX,EAAgB,+BAE5B,IAAOqjB,GAASrjB,EAAe,oCAC/B,IAAO2M,GAAU3M,EAAe,uCAIhC,IAAM02C,GAAU,SAAAv0C,GAASX,EAAnBk1C,EAAUv0C,EAKf,SALKu0C,GAKOC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjCz0C,EAAApB,KAAAU,KAEAA,MAAK4L,WAAa,IAElB5L,MAAKo1C,YAAcF,CACnBl1C,MAAKq1C,aAAeF,CAGpBn1C,MAAK+O,YAAc7D,EAAW+sB,KAG/Bt3B,OAAAC,eAAWq0C,EAAA10C,UAAA,chDkxTJM,IgDlxTP,WAEC,MAAOb,MAAKo1C,ahDmxTNzyC,IgDhxTP,SAAsBC,GAErB5C,KAAKo1C,YAAcxyC,GhDixTb7B,WAAY,KACZC,aAAc,MgD/wTrBL,QAAAC,eAAWq0C,EAAA10C,UAAA,ehDkxTJM,IgDlxTP,WAEC,MAAOb,MAAKq1C,chDmxTN1yC,IgDhxTP,SAAuBC,GAEtB5C,KAAKq1C,aAAezyC,GhDixTd7B,WAAY,KACZC,aAAc,MgD9wTdi0C,GAAA10C,UAAA+iB,2BAAP,SAAkCC,EAAgB1J,EAAehE,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI3W,GAAM,wEAElB,OAAA+1C,IA3CyBrzB,EA6CzBniB,GAAoBJ,QAAX41C,IhDmxTN5Z,+BAA+Bj6B,UAAUogB,oCAAoC,oCAAoCtB,uCAAuC,yCAAyCo1B,2CAA2C,SAAS/2C,EAAQkB,EAAOJ,GACvQ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDx0TtB,IAAOkL,GAAahN,EAAc,wCAElC,IAAO2M,GAAU3M,EAAe,uCjD60ThC,IiDr0TMg3C,GAAW,SAAA70C,GAASX,EAApBw1C,EAAW70C,EAsIhB,SAtIK60C,GAsIOhsC,EAAuBisC,EAAwBC,EAAsBnxB,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhF5jB,EAAApB,KAAAU,KAEAA,MAAK4L,WAAa,IAElB5L,MAAKuJ,SAAWA,CAEhBvJ,MAAK01C,eAAiBF,CACtBx1C,MAAK21C,aAAeF,CACpBz1C,MAAK41C,eAAiBtxB,EAAU,EAGhCtkB,MAAK+O,YAAc7D,EAAW8D,iBAnI/BrO,OAAAC,eAAW20C,EAAAh1C,UAAA,YjD60TJM,IiD70TP,WAEC,MAAOb,MAAK4wC,WjD80TN7vC,WAAY,KACZC,aAAc,MiDz0TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,ajD+0TJM,IiD/0TP,WAEC,MAAO00C,GAAYr0C,WjDg1TbH,WAAY,KACZC,aAAc,MiD30TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,gBjDi1TJM,IiDj1TP,WAEC,MAAOb,MAAK01C,gBjDk1TN30C,WAAY,KACZC,aAAc,MiDh1TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,iBjDm1TJoC,IiDn1TP,SAAyBC,GAExB,GAAI5C,KAAK01C,gBAAkB9yC,EAC1B,MAED5C,MAAK01C,eAAiB9yC,CAEtB5C,MAAK61C,0BjDk1TC90C,WAAY,KACZC,aAAc,MiD70TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,ejDm1TJM,IiDn1TP,WAEC,MAAOb,MAAK21C,cjDo1TNhzC,IiDj1TP,SAAuBC,GAEtB,GAAI5C,KAAK21C,cAAgB/yC,EACxB,MAED5C,MAAK21C,aAAe/yC,CAEpB5C,MAAK61C,0BjDg1TC90C,WAAY,KACZC,aAAc,MiD30TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,YjDi1TJM,IiDj1TP,WAEC,MAAOb,MAAKonB,WjDk1TNzkB,IiD/0TP,SAAoBC,GAEnB,GAAI5C,KAAKuJ,SACRvJ,KAAKuJ,SAAS8d,aAAarnB,KAE5BA,MAAKonB,UAAYxkB,CAEjB,IAAI5C,KAAKuJ,SACRvJ,KAAKuJ,SAAS+d,UAAUtnB,OjD80TnBe,WAAY,KACZC,aAAc,MiDz0TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,ajD+0TJM,IiD/0TP,WAEC,MAAOb,MAAK41C,eAAe,GjDg1TrBjzC,IiD70TP,SAAqBC,GAEpB,GAAI5C,KAAK41C,gBAAkBhzC,EAC1B,MAED5C,MAAK41C,eAAiBhzC,EAAM,EAE5B5C,MAAK61C,0BjD40TC90C,WAAY,KACZC,aAAc,MiDv0TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,ejD60TJM,IiD70TP,WAEC,MAAOb,MAAKunB,cjD80TN5kB,IiD30TP,SAAuBC,GAEtB5C,KAAKunB,aAAe3kB,GjD40Td7B,WAAY,KACZC,aAAc,MiDx0TrBL,QAAAC,eAAW20C,EAAAh1C,UAAA,kBjD80TJM,IiD90TP,WAEC,MAAOb,MAAK8wC,iBjD+0TNnuC,IiD50TP,SAA0BC,GAEzB5C,KAAK8wC,gBAAkBluC,GjD60TjB7B,WAAY,KACZC,aAAc,MiDpzTdu0C,GAAAh1C,UAAAU,QAAP,WAECjB,KAAK01C,eAAiB,IACtB11C,MAAK21C,aAAe,KAMdJ,GAAAh1C,UAAA6U,kBAAP,WAEC1U,EAAAH,UAAM6U,kBAAiB9V,KAAAU,KAEvBA,MAAKqV,YAAYpS,EAAIG,KAAKsB,IAAI1E,KAAK01C,eAAezyC,EAAGjD,KAAK21C,aAAa1yC,EACvEjD,MAAKqV,YAAYnS,EAAIE,KAAKsB,IAAI1E,KAAK01C,eAAexyC,EAAGlD,KAAK21C,aAAazyC,EACvElD,MAAKqV,YAAY9O,EAAInD,KAAKsB,IAAI1E,KAAK01C,eAAenvC,EAAGvG,KAAK21C,aAAapvC,EACvEvG,MAAKqV,YAAYjR,MAAQhB,KAAKszB,IAAI12B,KAAK01C,eAAezyC,EAAIjD,KAAK21C,aAAa1yC,EAC5EjD,MAAKqV,YAAYhR,OAASjB,KAAKszB,IAAI12B,KAAK01C,eAAexyC,EAAIlD,KAAK21C,aAAazyC,EAC7ElD,MAAKqV,YAAY1F,MAAQvM,KAAKszB,IAAI12B,KAAK01C,eAAenvC,EAAIvG,KAAK21C,aAAapvC,GAGtEgvC,GAAAh1C,UAAAkV,qBAAP,WAEC/U,EAAAH,UAAMkV,qBAAoBnW,KAAAU,KAE1BA,MAAKoV,mBAEL,IAAI0gC,IAAoB91C,KAAK21C,aAAa1yC,EAAIjD,KAAK01C,eAAezyC,GAAG,CACrE,IAAI8yC,IAAqB/1C,KAAK21C,aAAazyC,EAAIlD,KAAK01C,eAAexyC,GAAG,CACtE,IAAI8yC,IAAoBh2C,KAAK21C,aAAapvC,EAAIvG,KAAK01C,eAAenvC,GAAG,CACrEvG,MAAK0V,eAAezS,EAAIjD,KAAK01C,eAAezyC,EAAI6yC,CAChD91C,MAAK0V,eAAexS,EAAIlD,KAAK01C,eAAexyC,EAAI6yC,CAChD/1C,MAAK0V,eAAenP,EAAIvG,KAAK01C,eAAenvC,EAAIyvC,CAChDh2C,MAAK0V,eAAeiiB,OAASv0B,KAAKoB,KAAKsxC,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFT,GAAAh1C,UAAAs1C,uBAAR,WAEC,GAAIrmC,GAAaxP,KAAKkO,cAAc3O,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKkO,cAAclP,GAAG0oB,qBAGjB6tB,GAAAh1C,UAAA4d,eAAP,SAAsBC,GAKrB,GAAIpe,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErBiJ,GAAS8yB,uBAAuBlxC,MA1MnBu1C,GAAAr0C,UAAmB,qBA4MlC,OAAAq0C,IA9M0BhqC,EAgN1B9L,GAAqBJ,QAAZk2C,IjD4yTN/qC,wCAAwC,wCAAwC0V,uCAAuC,yCAAyC+1B,oCAAoC,SAAS13C,EAAQkB,EAAOJ,GAC/N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkD/gUtB,IAAO0K,GAAKxM,EAAgB,6BAO5B,IAAOgiB,GAAQhiB,EAAgB,mCAE/B,IAAOuD,GAAgBvD,EAAc,2CACrC,IAAO+hB,GAAa/hB,EAAc,0CAClC,IAAOmjB,GAAsBnjB,EAAY,uDACzC,IAAO23C,GAAW33C,EAAe,sClDghUjC,IkDvgUM43C,GAAI,SAAAz1C,GAASX,EAAbo2C,EAAIz1C,EA+LT,SA/LKy1C,GA+LOC,EAAmB7sC,GA/LhC,GAAA0yB,GAAAj8B,IA+LgC,IAAAuJ,QAAA,GAA4B,CAA5BA,EAAA,KAE9B7I,EAAApB,KAAAU,KAvLOA,MAAA8iB,cAAwB,IACxB9iB,MAAAq2C,wBAAkC,IAOlCr2C,MAAAs2C,WAAmB,GAAIvrC,EAiL9B/K,MAAK4L,WAAa,IAElB5L,MAAKu2C,WAAa,GAAI/wC,MAEtBxF,MAAKw2C,iCAAmC,SAACz3B,GAAwB,MAAAkd,GAAKwa,wBAAwB13B,GAC9F/e,MAAK02C,4BAA8B,SAAC33B,GAAwB,MAAAkd,GAAK0a,mBAAmB53B,GACpF/e,MAAK42C,8BAAgC,SAAC73B,GAAwB,MAAAkd,GAAK4a,qBAAqB93B,GAGxF/e,MAAKo2C,SAAWA,GAAY,GAAI71B,EAEhCvgB,MAAKuJ,SAAWA,EAxLjB5I,OAAAC,eAAWu1C,EAAA51C,UAAA,YlD8gUJM,IkD9gUP,WAEC,MAAOb,MAAK4wC,WlD+gUNjuC,IkD5gUP,SAAoBC,GAEnB,GAAI5C,KAAK4wC,UACR5wC,KAAK4wC,UAAUkG,YAAY92C,KAE5BA,MAAK4wC,UAAYhuC,CAEjB,IAAI4M,GAAaxP,KAAKu2C,WAAWh3C,MACjC,IAAIw3C,EAEJ,KAAK,GAAI/3C,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAAG,CACpC+3C,EAAU/2C,KAAKu2C,WAAWv3C,EAG1B,IAAI+3C,EAAQxtC,SAAU,CACrBwtC,EAAQxtC,SAAS8d,aAAa0vB,EAC9BA,GAAQxtC,SAAS+d,UAAUyvB,GAI5BA,EAAQtvB,iCAGT,GAAIznB,KAAK4wC,UACR5wC,KAAK4wC,UAAUoG,SAASh3C,OlDugUnBe,WAAY,KACZC,aAAc,MkDlgUrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,alDwgUJM,IkDxgUP,WAEC,MAAOs1C,GAAKj1C,WlDygUNH,WAAY,KACZC,aAAc,MkDpgUrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,gBlD0gUJM,IkD1gUP,WAEC,MAAOb,MAAK8iB,elD2gUNngB,IkDxgUP,SAAwBC,GAEvB5C,KAAK8iB,cAAgBlgB,GlDygUf7B,WAAY,KACZC,aAAc,MkDpgUrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,YlD0gUJM,IkD1gUP,WAEC,GAAIb,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErB,OAAOnV,MAAKi3C,WlD0gUNt0C,IkDvgUP,SAAoBC,GAEnB,GAAI5D,EAEJ,IAAIgB,KAAKi3C,UAAW,CACnBj3C,KAAKi3C,UAAUz8B,oBAAoB8F,EAAcW,eAAgBjhB,KAAKw2C,iCACtEx2C,MAAKi3C,UAAUz8B,oBAAoB8F,EAAcK,mBAAoB3gB,KAAK02C,4BAC1E12C,MAAKi3C,UAAUz8B,oBAAoB8F,EAAcQ,qBAAsB9gB,KAAK42C,8BAE5E,KAAK53C,EAAI,EAAGA,EAAIgB,KAAKu2C,WAAWh3C,SAAUP,EACzCgB,KAAKu2C,WAAWv3C,GAAGiC,SAEpBjB,MAAKu2C,WAAWh3C,OAAS,EAG1BS,KAAKi3C,UAAYr0C,CAEjB,IAAI5C,KAAKi3C,UAAW,CAEnBj3C,KAAKi3C,UAAU3jC,iBAAiBgN,EAAcW,eAAgBjhB,KAAKw2C,iCACnEx2C,MAAKi3C,UAAU3jC,iBAAiBgN,EAAcK,mBAAoB3gB,KAAK02C,4BACvE12C,MAAKi3C,UAAU3jC,iBAAiBgN,EAAcQ,qBAAsB9gB,KAAK42C,8BAEzE,IAAIM,GAAkCl3C,KAAKi3C,UAAUE,aAErD,KAAKn4C,EAAI,EAAGA,EAAIk4C,EAAS33C,SAAUP,EAClCgB,KAAKo3C,WAAWF,EAASl4C,MlDigUrB+B,WAAY,KACZC,aAAc,MkD3/TrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,YlDigUJM,IkDjgUP,WAEC,MAAOb,MAAKonB,WlDkgUNzkB,IkD//TP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKonB,UACjB,MAED,IAAIpoB,EACJ,IAAIwQ,GAAaxP,KAAKu2C,WAAWh3C,MACjC,IAAIw3C,EAEJ,KAAK/3C,EAAI,EAAGA,EAAIwQ,EAAKxQ,IACpB,GAAIgB,KAAKonB,YAAc2vB,EAAU/2C,KAAKu2C,WAAWv3C,IAAIuK,UAAYvJ,KAAKonB,UACrEpnB,KAAKonB,UAAUC,aAAa0vB,EAE9B/2C,MAAKonB,UAAYxkB,CAEjB,KAAK5D,EAAI,EAAGA,EAAIwQ,EAAKxQ,IACpB,GAAIgB,KAAKonB,YAAc2vB,EAAU/2C,KAAKu2C,WAAWv3C,IAAIuK,UAAYvJ,KAAKonB,UACrEpnB,KAAKonB,UAAUE,UAAUyvB,IlD4/TrBh2C,WAAY,KACZC,aAAc,MkDv/TrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,0BlD6/TJM,IkD7/TP,WAEC,MAAOb,MAAKq2C,yBlD8/TN1zC,IkD3/TP,SAAkCC,GAEjC5C,KAAKq2C,wBAA0BzzC,GlD4/TzB7B,WAAY,KACZC,aAAc,MkDt/TrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,alD6/TJM,IkD7/TP,WAKC,GAAIb,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErB,OAAOnV,MAAKu2C,YlD6/TNx1C,WAAY,KACZC,aAAc,MkDx/TrBL,QAAAC,eAAWu1C,EAAA51C,UAAA,elD8/TJM,IkD9/TP,WAEC,MAAOb,MAAKunB,clD+/TN5kB,IkD5/TP,SAAuBC,GAEtB5C,KAAKunB,aAAe3kB,GlD6/Td7B,WAAY,KACZC,aAAc,MkDh+Tdm1C,GAAA51C,UAAA82C,oBAAP,WAECr3C,KAAKo2C,SAASjtC,oBAAoBnJ,KAAKsU,WACvCtU,MAAKsU,WAAWzF,WAMVsnC,GAAA51C,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKuJ,SAAW,IAChBvJ,MAAKo2C,SAAW,KAOVD,GAAA51C,UAAA+2C,+BAAP,WAECt3C,KAAKs5B,qBAEJ,IAAIt5B,KAAK4wC,UACT5wC,KAAK4wC,UAAU3vC,UAmBVk1C,GAAA51C,UAAAkI,MAAP,WAEC,GAAIA,GAAa,GAAI0tC,GAAK,KAAM,KAE1Bn2C,MAAKu3C,aAAa9uC,EAExB,OAAOA,GAGE0tC,GAAA51C,UAAAg3C,aAAP,SAAoB9uC,GAEhBA,EAAM2tC,SAAWp2C,KAAKi3C,SACtBxuC,GAAMc,SAAWvJ,KAAKonB,SACtB3e,GAAM6L,WAAatU,KAAKsU,UACxB7L,GAAM+I,MAAQxR,KAAKwR,KACnB/I,GAAMoT,UAAY7b,KAAK6b,SACvBpT,GAAM+uC,WAAax3C,KAAKw3C,UAGxB/uC,GAAM8hB,KAAOvqB,KAAKuqB,IAClB9hB,GAAM+F,aAAexO,KAAKwO,YAC1B/F,GAAMgvC,uBAAyBz3C,KAAKy3C,sBACpChvC,GAAM6W,aAAetf,KAAKsf,YAC1B7W,GAAMwW,cAAgBjf,KAAKif,aAG3BxW,GAAMivC,MAAQ13C,KAAK03C,KACzBjvC,GAAMwK,SAAWjT,KAAKiT,QACtBxK,GAAM8L,MAAQvU,KAAKuU,MAAOvU,KAAKuU,MAAMC,SAAW,IAE1C,IAAIhF,GAAaxP,KAAKu2C,WAAWh3C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAC9ByJ,EAAM8tC,WAAWv3C,GAAGuK,SAAWvJ,KAAKu2C,WAAWv3C,GAAG2oB,uBAGtDnY,GAAMxP,KAAKmf,WACX,KAAKngB,EAAI,EAAGA,EAAIwQ,IAAOxQ,EACnByJ,EAAMmwB,SAAS54B,KAAK+rB,UAAU/sB,GAAGyJ,QAErC,IAAIzI,KAAK4wC,UACLnoC,EAAM0e,SAAWnnB,KAAK4wC,UAAUnoC,QASpC0tC,GAAA51C,UAAAo3C,0BAAP,SAAiCztC,GAEhC,MAAOlK,MAAKu2C,WAAWv2C,KAAKi3C,UAAUE,cAAcn6B,QAAQ9S,IAQtDisC,GAAA51C,UAAA6U,kBAAP,WAEC1U,EAAAH,UAAM6U,kBAAiB9V,KAAAU,KAEvB,IAAIhB,GAAUkH,EAAU/F,EAAUqP,CAClC,IAAI0nC,GAAkCl3C,KAAKi3C,UAAUE,aACrD,IAAIn2B,EACJ,IAAI42B,EACJ,IAAI72B,GAAqBm2B,EAAS33C,MAClC,IAAIi7B,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAC9B,IAAIgd,GAAiBC,CAErB,IAAI/2B,EAAc,EAAG,CACpB/hB,EAAI,CACJgiB,GAAUk2B,EAAS,EACnBU,GAAoB52B,EAAQje,sBAE5B,IAAI/C,KAAKmf,YAAa,CACrBwb,EAAO36B,KAAKqV,YAAYjR,OAASo2B,EAAOx6B,KAAKqV,YAAYpS,EACzD23B,GAAO56B,KAAKqV,YAAYhR,QAAUo2B,EAAOz6B,KAAKqV,YAAYnS,EAC1D23B,GAAO76B,KAAKqV,YAAY1F,OAAS+qB,EAAO16B,KAAKqV,YAAY9O,EACzDsxC,GAAW73C,KAAKqV,YAAY1F,OAASmoC,EAAW93C,KAAKqV,YAAY9O,OAC3D,CACNi0B,EAAOG,EAAOid,EAAkB54C,EAChCy7B,GAAOG,EAAOgd,EAAkB54C,EAAI,EACpC,IAAGgiB,EAAQ+2B,QAAQj2C,GAAkB,CACpC44B,EAAOG,EAAO,CACdid,GAAWD,EAAW,MAEnB,CACHC,EAAWD,EAAWD,EAAkB54C,EAAI,IAI9C,IAAKkH,EAAI,EAAGA,EAAI6a,EAAa7a,IAAK,CACjC8a,EAAUk2B,EAAShxC,EACnB0xC,GAAoB52B,EAAQje,sBAC5ByM,GAAMooC,EAAkBr4C,MACxB,KAAKP,EAAI,EAAGA,EAAIwQ,EAAKxQ,GAAG,EAAG,CAC1BmB,EAAIy3C,EAAkB54C,EACtB,IAAImB,EAAIq6B,EACPA,EAAOr6B,MACH,IAAIA,EAAIw6B,EACZA,EAAOx6B,CAERA,GAAIy3C,EAAkB54C,EAAI,EAE1B,IAAImB,EAAIs6B,EACPA,EAAOt6B,MACH,IAAIA,EAAIy6B,EACZA,EAAOz6B,CAERA,GAAIy3C,EAAkB54C,EAAI,EAE1B,IAAImB,EAAI23C,EACPA,EAAW33C,MACP,IAAIA,EAAI03C,EACZA,EAAW13C,EAEb,IAAK6gB,EAAQ+2B,QAAQj2C,GAAmB,CACvC44B,EAAOod,CACPjd,GAAOgd,GAKT73C,KAAKqV,YAAYjR,MAAQu2B,GAAQ36B,KAAKqV,YAAYpS,EAAIu3B,EACtDx6B,MAAKqV,YAAYhR,OAASu2B,GAAQ56B,KAAKqV,YAAYnS,EAAIu3B,EACvDz6B,MAAKqV,YAAY1F,MAAQkrB,GAAQ76B,KAAKqV,YAAY9O,EAAIm0B,IAKjDyb,GAAA51C,UAAAkV,qBAAP,WAEC/U,EAAAH,UAAMkV,qBAAoBnW,KAAAU,KAE1B,IAAI0W,GAAU1W,KAAK0P,QACnB,IAAIsoC,GAAiBthC,EAAIzT,EAAIyT,EAAItS,MAAM,CACvC,IAAI6zC,GAAiBvhC,EAAIxT,EAAIwT,EAAIrS,OAAO,CACxC,IAAI6zC,GAAiBxhC,EAAInQ,EAAImQ,EAAI/G,MAAM,CAEvC,IAAI3Q,GAAUkH,EAAU/F,EAAUqP,CAClC,IAAI0nC,GAAkCl3C,KAAKi3C,UAAUE,aACrD,IAAIn2B,EACJ,IAAI42B,EACJ,IAAI72B,GAAqBm2B,EAAS33C,MAClC,IAAI44C,GAA0B,CAC9B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIx3B,EAAc,EAAG,CACpB/hB,EAAI,CACJgiB,GAAUk2B,EAAS,EACnBU,GAAoB52B,EAAQje,sBAC5B,KAAKmD,EAAI,EAAGA,EAAI6a,EAAa7a,IAAK,CACjC8a,EAAUk2B,EAAShxC,EACnB0xC,GAAoB52B,EAAQje,sBAC5ByM,GAAMooC,EAAkBr4C,MAExB,KAAKP,EAAI,EAAGA,EAAIwQ,EAAKxQ,GAAK,EAAG,CAC5Bq5C,EAAYT,EAAkB54C,GAAKg5C,CACnCM,GAAYV,EAAkB54C,EAAI,GAAKi5C,CACvCM,GAAYX,EAAkB54C,EAAI,GAAKk5C,CACvCE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,IAKvBp4C,KAAK0V,eAAezS,EAAI+0C,CACxBh4C,MAAK0V,eAAexS,EAAI+0C,CACxBj4C,MAAK0V,eAAenP,EAAI2xC,CACxBl4C,MAAK0V,eAAeiiB,OAASv0B,KAAKoB,KAAK2zC,GAQhChC,GAAA51C,UAAAk2C,wBAAR,SAAgC13B,GAE/B/e,KAAKuP,qBAQE4mC,GAAA51C,UAAAo2C,mBAAR,SAA2B53B,GAE1B/e,KAAKo3C,WAAWr4B,EAAM7U,aAQfisC,GAAA51C,UAAAs2C,qBAAR,SAA6B93B,GAE5B,GAAIg4B,EACJ,IAAI/1B,GAA0BjC,EAAM7U,WACpC,IAAIsF,GAAaxP,KAAKu2C,WAAWh3C,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIwQ,IAAOxQ,EAAG,CAEzB+3C,EAAU/2C,KAAKu2C,WAAWv3C,EAE1B,IAAI+3C,EAAQ7sC,aAAe8W,EAAS,CACnC+1B,EAAQ91C,SAERjB,MAAKu2C,WAAWt5B,OAAOje,EAAG,EAE1B,UAIAwQ,CACF,MAAOxQ,EAAIwQ,IAAOxQ,EACjBgB,KAAKu2C,WAAWv3C,GAAGioB,QAAUjoB,EAQvBm3C,GAAA51C,UAAA62C,WAAR,SAAmBltC,GAElB,GAAIsuC,GAA6BtC,EAAYuC,SAASvuC,EAEtD,IAAI6sC,GAAmB,GAAIyB,GAAatuC,EAAalK,KAAM,KAC3D,IAAIwP,GAAaxP,KAAKu2C,WAAWh3C,MAEjCw3C,GAAQ9vB,QAAUzX,CAElBxP,MAAKu2C,WAAW/mC,GAAOunC,CAEvB/2C,MAAKuP,qBAYC4mC,GAAA51C,UAAA8I,gBAAP,SAAuBI,EAAkCyT,GAExDld,KAAKmb,qBAAqBu9B,gBAAkB,IAE5C,IAAI3B,EAEJ,IAAIvnC,GAAaxP,KAAK24C,UAAUp5C,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAAG,CACpC+3C,EAAU/2C,KAAK24C,UAAU35C,EAEzB,IAAI+3C,EAAQ7sC,YAAYb,gBAAgBrJ,KAAKuR,kBAAmBwlC,EAAQxtC,SAAUvJ,KAAKmb,qBAAsB1R,GAA4B,CACxIA,EAA4BzJ,KAAKmb,qBAAqBmqB,gBAEtDtlC;KAAKmb,qBAAqBu9B,gBAAkB3B,CAE5C,KAAK75B,EACJ,MAAO,OAIV,MAAOld,MAAKmb,qBAAqBu9B,iBAAmB,KAS9CvC,GAAA51C,UAAA4d,eAAP,SAAsBC,GAKrB,GAAIpe,KAAKkV,eACRlV,KAAKkV,eAAeC,YAErB,IAAI3F,GAAsBxP,KAAKu2C,WAAWh3C,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIwQ,EAAKxQ,IACxCof,EAAS8yB,uBAAuBlxC,KAAKu2C,WAAWv3C,IAG3Cm3C,GAAA51C,UAAAq4C,iCAAP,WAEC,GAAIppC,GAAaxP,KAAKu2C,WAAWh3C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAKu2C,WAAWv3C,GAAGyoB,iCAId0uB,GAAA51C,UAAA06B,sBAAP,SAA6Bh4B,EAAUC,EAAU6U,EAAmBgjB,GAEnE,GAAG/6B,KAAKi3C,WAAaj3C,KAAKi3C,UAAUE,cAAc53C,OAAQ,CACzDS,KAAKs2C,WAAWxgC,MAAM7S,EAAEC,EACxB,IAAI21C,GAAc74C,KAAK2V,cAAc3V,KAAKs2C,WAAYt2C,KAAKs2C,WAG3D,KAAIt2C,KAAK0P,SAAS2pB,SAASwf,EAAM51C,EAAG41C,EAAM31C,EAAG,GAC5C,MAAO,MAGR,KAAK6U,EACJ,MAAO,KlDs5TC,IkDn5TLo/B,GAAuCn3C,KAAKi3C,UAAUE,aAC1D,IAAI2B,GAA4B3B,EAAc53C,MAC9C,KAAI,GAAI2G,GAAW,EAAGA,EAAI4yC,EAAoB5yC,IAC7C,GAAIixC,EAAcjxC,GAAGI,aAAauyC,EAAM51C,EAAG41C,EAAM31C,EAAG,GACnD,MAAO,MAGV,MAAOxC,GAAAH,UAAM06B,sBAAqB37B,KAAAU,KAACiD,EAAGC,EAAG6U,EAAWgjB,GA7kBvCob,GAAAj1C,UAAmB,cA+kBlC,OAAAi1C,IAjlBmBz0B,EAmlBnBjiB,GAAcJ,QAAL82C,IlDq5TNv2B,6BAA6Bxe,UAAUK,2CAA2C,2CAA2C4e,mCAAmC,mCAAmCoD,uDAAuD,uDAAuDvC,0CAA0C,0CAA0C63B,sCAAsC,wCAAwCC,yCAAyC,SAASz6C,EAAQkB,EAAOJ,GACvhB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDrgVtB,IAAO44C,GAAK16C,EAAW,+BAIvB,IAAOmjB,GAAsBnjB,EAAW,uDAKxC,IAAO26C,GAAU36C,EAAW,uCAG5B,IAAOupB,GAAQvpB,EAAW,mCAC1B,IAAOspB,GAAkBtpB,EAAW,iDAEpC,IAAM46C,GAAS,SAAAz4C,GAASX,EAAlBo5C,EAASz4C,EAyCX,SAzCEy4C,GAyCUC,GAzChB,GAAAnd,GAAAj8B,IAyCgB,IAAAo5C,QAAA,GAAwB,CAAxBA,EAAA,KAER14C,EAAApB,KAAAU,KA1BIA,MAAAq5C,MAAgB,IA2BpBr5C,MAAKs5C,sBACLt5C,MAAKu5C,sBACLv5C,MAAKw5C,oBAAsB,CAC3Bx5C,MAAKy5C,2BAA6B,CAClCz5C,MAAK05C,QAAQ,IACb15C,MAAK25C,WAAa,IAClB35C,MAAK45C,UAAU,KAEf55C,MAAKygC,MAAQ,CACbzgC,MAAK65C,YAAc,GAAIZ,GAAMA,EAAMa,YACnC95C,MAAK+5C,sBAAwB,IAE7B/5C,MAAKg6C,aAAe,SAACj7B,GAAqB,MAAAkd,GAAKrR,kBAAoB,EACnE5qB,MAAKi6C,YAAc,SAACl7B,GAAqB,MAAAkd,GAAKrR,kBAAoB,EAClE5qB,MAAKk6C,aAAe,SAACn7B,GAAqB,MAAAkd,GAAKrR,kBAAoB,EACnE5qB,MAAKm6C,WAAa,SAACp7B,GAAqB,MAAAkd,GAAKrR,kBAAoBqR,EAAKrR,mBAAqB,EAAG,EAAI,EAElG5qB,MAAKo6C,UAAYhB,GAAY,GAAItxB,GA9BxCnnB,OAAAC,eAAWu4C,EAAA54C,UAAA,WnD0/UJM,ImD1/UP,WAEC,MAA2Bb,MAAKiP,UnD2/U1BtM,ImDx/UP,SAAmBC,GAElB5C,KAAKiP,SAAWrM,GnDy/UV7B,WAAY,KACZC,aAAc,MmDh+UlBL,QAAAC,eAAWu4C,EAAA54C,UAAA,UnDm+UPM,ImDn+UJ,WAEI,MAAOb,MAAK05C,SnDo+UZ/2C,ImDl+UJ,SAAkBC,GAEd5C,KAAK05C,QAAU92C,GnDm+Uf7B,WAAY,KACZC,aAAc,MmDj+UlBL,QAAAC,eAAWu4C,EAAA54C,UAAA,YnDo+UPM,ImDp+UJ,WAEI,MAAOb,MAAKo6C,WnDq+UZz3C,ImDl+UJ,SAAoBC,GAEhB5C,KAAKo6C,UAAYx3C,GnDm+UjB7B,WAAY,KACZC,aAAc,MmDj+UlBL,QAAAC,eAAWu4C,EAAA54C,UAAA,QnDo+UPM,ImDp+UJ,WAEI,MAAOb,MAAKq5C,OnDq+UZ12C,ImDl+UJ,SAAgBC,GAEZ5C,KAAKq5C,MAAQz2C,GnDm+Ub7B,WAAY,KACZC,aAAc,MmDj+UlBL,QAAAC,eAAWu4C,EAAA54C,UAAA,anDo+UPM,ImDp+UJ,WAEI,MAAOb,MAAKo6C,UAAUC,WnDq+UtBt5C,WAAY,KACZC,aAAc,MmDn+UXm4C,GAAA54C,UAAAkqB,YAAP,SAAmBC,GAGf1qB,KAAKo6C,UAAU3vB,YAAYzqB,KAAM0qB,GAGrC/pB,QAAAC,eAAWu4C,EAAA54C,UAAA,qBnDo+UPM,ImDp+UJ,WAEI,MAAOb,MAAKw5C,oBnDw+UZ72C,ImD96UJ,SAA6BC,GAEzB,GAAG5C,KAAKo6C,UAAUC,UAAW,CACzBz3C,EAAQQ,KAAKC,MAAMT,EACnB,IAAIkoB,GAAoB,KACxB,IAAIloB,EAAQ,EACRA,EAAQ,MACP,IAAIA,GAAS5C,KAAKo6C,UAAUC,UAAU,CACvCz3C,EAAQ5C,KAAKo6C,UAAUC,UAAY,CACnCvvB,GAAY,KAIhB9qB,KAAKs6C,aAAe,IAGpBt6C,MAAKo6C,UAAUvvB,UAAU7qB,KAAM4C,EAAOkoB,EACtC9qB,MAAKw5C,mBAAqB52C,InD86U9B7B,WAAY,KACZC,aAAc,MmDx/UlBL,QAAAC,eAAWu4C,EAAA54C,UAAA,4BnD2/UPM,ImD3/UJ,WAEI,MAAOb,MAAKy5C,2BnD4/UZ92C,ImDz/UJ,SAAoCC,GAEhC5C,KAAKy5C,0BAA4B72C,GnD0/UjC7B,WAAY,KACZC,aAAc,MmDx/UXm4C,GAAA54C,UAAAg6C,WAAP,WAEIv6C,KAAKs6C,aAAe,KAEpB,IAAIxuB,EACJ,KAAK,GAAI9sB,GAAWgB,KAAKmf,YAAc,EAAGngB,GAAK,EAAGA,IAAK,CACnD8sB,EAAQ9rB,KAAK+rB,UAAU/sB,EACvB,IAAG8sB,EAAMisB,QAAQoB,GACArtB,EAAOyuB,cAGzBpB,GAAA54C,UAAAkZ,MAAP,WAEI/Y,EAAAH,UAAMkZ,MAAKna,KAAAU,KAGXA,MAAKygC,MAAQ,CAEb,IAAGzgC,KAAKyU,QACJzU,KAAKyU,QAAQ+lC,gBAEjBx6C,MAAK25C,WAAa,IAElB35C,MAAKw5C,oBAAsB,CAC3Bx5C,MAAKy5C,2BAA6B,CAClC,KAAK,GAAIz6C,GAAWgB,KAAKmf,YAAc,EAAGngB,GAAK,EAAGA,IAC9CgB,KAAK0sB,cAAc1tB,EAEvBgB,MAAKs6C,aAAe,IAEpB,IAAIt6C,KAAKo6C,UAAUC,UAAW,CAC1Br6C,KAAKw5C,mBAAqB,CAC1Bx5C,MAAKo6C,UAAU/uB,mBAAmBrrB,KAAM,KAAM,OAO/Cm5C,GAAA54C,UAAA6qB,sBAAP,SAA6BxoB,GACzB5C,KAAKs6C,aAAe,IACpBt6C,MAAKw5C,mBAAqB52C,EA0BvBu2C,GAAA54C,UAAA4uB,mBAAP,WAEInvB,KAAK45C,UAAY,IAEjB55C,MAAK4+B,MAEL5+B,MAAKsT,iBAAiB4lC,EAAWuB,WAAYz6C,KAAKg6C,aAClDh6C,MAAKsT,iBAAiB4lC,EAAWwB,UAAW16C,KAAKi6C,YACjDj6C,MAAKsT,iBAAiB4lC,EAAWyB,WAAY36C,KAAKk6C,aAClDl6C,MAAKsT,iBAAiB4lC,EAAW0B,SAAU56C,KAAKm6C,YAG7ChB,GAAA54C,UAAAs6C,sBAAP,WAEI76C,KAAKwa,oBAAoB0+B,EAAWuB,WAAYz6C,KAAKg6C,aACrDh6C,MAAKwa,oBAAoB0+B,EAAWwB,UAAW16C,KAAKi6C,YACpDj6C,MAAKwa,oBAAoB0+B,EAAWyB,WAAY36C,KAAKk6C,aACrDl6C,MAAKwa,oBAAoB0+B,EAAW0B,SAAU56C,KAAKm6C,YAIhDhB,GAAA54C,UAAAqtB,oBAAP,SAA2BktB,GAEvB,MAAO96C,MAAKs5C,oBAAoBwB,GAG7B3B,GAAA54C,UAAAssB,gBAAP,SAAuBf,EAAqBnc,EAAcmpB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAGtDhN,EAAMiuB,sBAAwB,IAE9BjuB,GAAMrS,OAEN/Y,GAAAH,UAAMssB,gBAAevtB,KAAAU,KAAC8rB,EAAOnc,EAAO,KAEpC3P,MAAKs5C,oBAAoBxtB,EAAMhgB,YAAcggB,CAG7C,OAAOA,GAGJqtB,GAAA54C,UAAAw4B,sBAAP,SAA6B5yB,GAEzB,GAAI2lB,GAAsBprB,EAAAH,UAAMw4B,sBAAqBz5B,KAAAU,KAACmG,EAEtD,IAAG2lB,EAAMrX,QACLqX,EAAMrX,QAAQ+lC,gBAElBx6C,MAAKyU,QAAQsmC,uBAAuBjvB,SAE7B9rB,MAAKs5C,oBAAoBxtB,EAAMhgB,WAEtCggB,GAAMhgB,YAAc,CAEpB,OAAOggB,GAGXnrB,QAAAC,eAAWu4C,EAAA54C,UAAA,anDm8UPM,ImDn8UJ,WAEI,MAAOs4C,GAAUj4C,WnDo8UjBH,WAAY,KACZC,aAAc,MmD/7UXm4C,GAAA54C,UAAAy6C,KAAP,WAEIh7C,KAAK25C,WAAa,KAMfR,GAAA54C,UAAA6c,OAAP,WAEIpd,KAAKi7C,cAELpzB,GAAmBqzB,eAGnBl7C,MAAKqR,cAAcrR,KAAK65C,YAExBhyB,GAAmBqzB,eAGnBrzB,GAAmBszB,mBACnBtzB,GAAmBqzB,eAEnBl7C,MAAKu6C,aAGFpB,GAAA54C,UAAA8pB,0BAAP,SAAiChiB,GAE7B,IAAKrI,KAAKu5C,oBAAoBlxC,GAC1BrI,KAAKu5C,oBAAoBlxC,GAAMrI,KAAKo6C,UAAU/vB,0BAA0BhiB,EAG5E,OAAOrI,MAAKu5C,oBAAoBlxC,GAO7B8wC,GAAA54C,UAAAq+B,KAAP,WAEI5+B,KAAK25C,WAAa,MAGfR,GAAA54C,UAAAkI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAETA,EAA0B3T,EAAAH,UAAMkI,MAAKnJ,KAAAU,KAACqU,GAAe,GAAI8kC,GAAUn5C,KAAKo6C,WAExE/lC,GAAYglC,MAAQr5C,KAAKq5C,KAEzB,OAAOhlC,GAGP8kC,GAAA54C,UAAA6a,WAAP,SAAkBxY,GAEjBlC,EAAAH,UAAM6a,WAAU9b,KAAAU,KAAC4C,GAGRu2C,GAAA54C,UAAA06C,aAAP,SAAoBG,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,MAEhB,GAAGp7C,KAAKo6C,UAAUC,UAAW,CACzB,GAAIgB,GAAgBr7C,KAAKw5C,kBACzB,IAAI8B,GAAWt7C,KAAK25C,aAAe35C,KAAKs6C,cAAiBe,IAAkB,CAE3E,IAAIC,GAAWD,GAAiBr7C,KAAKo6C,UAAUC,UAAY,IAAMr6C,KAAKq5C,MAClEiC,EAAU,KAEd,IAAIA,GAAWD,GAAiB,GAAKr7C,KAAKo6C,UAAUC,WAAa,EAAG,CAChEr6C,KAAKw5C,mBAAqB,CAC1B8B,GAAU,MAGd,GAAIA,EAAS,CACTt7C,KAAKw5C,oBACL,IAAIx5C,KAAKw5C,oBAAsBx5C,KAAKo6C,UAAUC,UAAW,CACrDr6C,KAAK4qB,kBAAoB,MACtB,IAAIywB,GAAiBr7C,KAAKw5C,mBAAmB,CAChDx5C,KAAKo6C,UAAU/uB,mBAAmBrrB,OAI1C,IAAKo7C,EACDp7C,KAAKu7C,kBAGbv7C,KAAKs6C,aAAe,MAGhBnB,GAAA54C,UAAAg7C,gBAAR,WAEI,GAAI/rC,GAAaxP,KAAKmf,WACtB,IAAI2M,EACJ,KAAK,GAAI9sB,GAAW,EAAGA,EAAKwQ,IAAOxQ,EAAG,CAClC8sB,EAAQ9rB,KAAK+rB,UAAU/sB,EAEvB,IAAI8sB,EAAMisB,QAAQoB,GACDrtB,EAAOmvB,gBAQhC9B,GAAA54C,UAAAi7C,aAAA,SAAa7rC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAET3P,KAAKy7C,mBAAmB9rC,EAAO3P,KAE/B,IAAIwP,GAAMxP,KAAKmf,WACf,IAAI2M,EACJ,KAAK,GAAI9sB,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAAK,CACjC8sB,EAAQ9rB,KAAK+rB,UAAU/sB,EAEvB,IAAI8sB,EAAMisB,QAAQoB,GACDrtB,EAAO0vB,aAAa7rC,EAAQ,OAEzC3P,MAAKy7C,mBAAmB9rC,EAAQ,EAAGmc,IAI/CqtB,GAAA54C,UAAAk7C,mBAAA,SAAmB9rC,EAAckG,GAE7B,GAAIwT,GAAM,EACV,KAAK,GAAIrqB,GAAI,EAAGA,EAAI2Q,IAAS3Q,EACzBqqB,GAAO,IAEXA,IAAO,IAAMxT,EAAO0U,KAAO,MAAQ1U,EAAOxN,EAC1CqzC,SAAQC,IAAItyB,GAvXF8vB,GAAAj4C,UAAmB,mBA2XrC,OAAAi4C,IA7XwBz3B,EA8XxBjiB,GAAmBJ,QAAV85C,InDk6UNyC,+BAA+Bx6C,UAAUwmB,mCAAmC,mCAAmCnE,uDAAuD,uDAAuDo4B,uCAAuC,uCAAuCrsB,iDAAiD,mDAAmDssB,0CAA0C,SAASv9C,EAAQkB,EAAOJ,GACpd,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDnzVtB,IAAOwK,GAAQtM,EAAgB,gCAC/B,IAAOuM,GAAavM,EAAc,qCAClC,IAAOyM,GAAQzM,EAAgB,gCAE/B,IAAOqjB,GAASrjB,EAAe,oCAC/B,IAAO2M,GAAU3M,EAAe,uCAGhC,IAAOw9C,GAAmBx9C,EAAa,iEAEvC,IAAMy9C,GAAU,SAAAt7C,GAASX,EAAnBi8C,EAAUt7C,EAMf,SANKs7C,KAQJt7C,EAAApB,KAAAU,KANMA,MAAAi8C,SAAkB,GAClBj8C,MAAAk8C,UAAmB,GAOzBl8C,MAAK4L,WAAa,IAElB5L,MAAKm8C,gBAAkB,GAAGn8C,KAAKk8C,UAAUl8C,KAAKk8C,UAAYl8C,KAAKi8C,SAASj8C,KAAKi8C,SAG7Ej8C,MAAK+O,YAAc7D,EAAW8sB,OAGxBgkB,EAAAz7C,UAAAyiB,oBAAP,WAEC,MAAO,IAAI+4B,GAGZp7C,QAAAC,eAAWo7C,EAAAz7C,UAAA,UpDyyVJM,IoDzyVP,WAEC,MAAOb,MAAKi8C,UpD0yVNt5C,IoDvyVP,SAAkBC,GAEjB5C,KAAKi8C,SAAWr5C,CAEhB,IAAI5C,KAAKi8C,SAAW,EAAG,CACtBj8C,KAAKi8C,SAAW,MACV,IAAIj8C,KAAKi8C,SAAWj8C,KAAKk8C,UAAW,CAC1Cl8C,KAAKk8C,UAAYl8C,KAAKi8C,QACtBj8C,MAAKuP,qBAENvP,KAAKm8C,gBAAkB,GAAIn8C,KAAKk8C,UAAUl8C,KAAKk8C,UAAYl8C,KAAKi8C,SAASj8C,KAAKi8C,WpDwyVxEl7C,WAAY,KACZC,aAAc,MoDtyVdg7C,GAAAz7C,UAAA67C,eAAP,WAEC,MAAOp8C,MAAKm8C,gBAGbx7C,QAAAC,eAAWo7C,EAAAz7C,UAAA,WpDuyVJM,IoDvyVP,WAEC,MAAOb,MAAKk8C,WpDwyVNv5C,IoDryVP,SAAmBC,GAElB5C,KAAKk8C,UAAYt5C,CAEjB,IAAI5C,KAAKk8C,UAAY,EACpBl8C,KAAKk8C,UAAY,CAElB,IAAIl8C,KAAKk8C,UAAYl8C,KAAKi8C,SACzBj8C,KAAKi8C,SAAWj8C,KAAKk8C,SAEtBl8C,MAAKm8C,gBAAkB,GAAIn8C,KAAKk8C,UAAUl8C,KAAKk8C,UAAYl8C,KAAKi8C,SAASj8C,KAAKi8C,SAC9Ej8C,MAAKuP,sBpDmyVCxO,WAAY,KACZC,aAAc,MoDjyVdg7C,GAAAz7C,UAAAkV,qBAAP,WAEC/U,EAAAH,UAAMkV,qBAAoBnW,KAAAU,KAE1BA,MAAK0V,eAAeiiB,OAAS33B,KAAKk8C,UAG5BF,GAAAz7C,UAAA+iB,2BAAP,SAAkCC,EAAgB1J,EAAehE,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAI0C,GAAmBzN,EAAc8N,kBACrC,IAAIC,GAAa,GAAIhO,EAGrBgO,GAAEpI,SAAS8S,EAAO3J,wBAAwBC,GAC1ChB,GAAEs6B,OAAOnzC,KAAKsQ,SAASiF,sBACvBvV,MAAKkY,OAAOW,EAAE5C,SAEd4C,GAAEpI,SAAS8S,EAAO3J,wBAAwBC,GAC1ChB,GAAEs6B,OAAOnzC,KAAKuV,sBAEd,IAAImB,GAAU6M,EAAO7T,QACrB,IAAI2sC,GAAcxjC,EAAEkxB,qBAAqB,GAAI/+B,GAAS0L,EAAIjR,KAAMiR,EAAI7Q,OAAQ6Q,EAAI4lC,OAChF,IAAIC,GAAc1jC,EAAEkxB,qBAAqB,GAAI/+B,GAAS0L,EAAIhR,MAAOgR,EAAI9Q,IAAK8Q,EAAI8lC,MAC9E,IAAIC,GAAYJ,EAAGp5C,EAAEo5C,EAAGp5C,EAAIo5C,EAAGn5C,EAAEm5C,EAAGn5C,EAAIm5C,EAAG91C,EAAE81C,EAAG91C,CAChD,IAAIm2C,GAAYH,EAAGt5C,EAAEs5C,EAAGt5C,EAAIs5C,EAAGr5C,EAAEq5C,EAAGr5C,EAAIq5C,EAAGh2C,EAAEg2C,EAAGh2C,CAChD,IAAItG,GAAWmD,KAAKoB,KAAKi4C,EAAKC,EAAID,EAAKC,EACvC,IAAIjI,EACJ,IAAIC,EAEJ,IAAInuC,GAAWsS,EAAEzF,QAAQ,GACzBqhC,GAAOluC,EAAItG,CACXy0C,GAAOnuC,EAAItG,CAEXsY,GAAI,GAAKA,EAAI,GAAKk8B,EAAKx0C,CACvBsY,GAAI,IAAMm8B,GAAMA,EAAOD,EACvBl8B,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOk8B,EAAKl8B,EAAI,GAEpB,KAAK1C,EACJA,EAAS,GAAIhL,EAEdgL,GAAOiD,gBAAgBP,EACvB1C,GAAO2G,QAAQ3D,EAEf,OAAOhD,GAET,OAAAmmC,IAhHyBp6B,EAkHzBniB,GAAoBJ,QAAX28C,IpD0xVNt8B,gCAAgCte,UAAUue,qCAAqCve,UAAU0e,gCAAgC1e,UAAUogB,oCAAoC,oCAAoCtB,uCAAuC,uCAAuCy8B,iEAAiE,mEAAmEC,qCAAqC,SAASr+C,EAAQkB,EAAOJ,GAC7d,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqD55VtB,IAAOkL,GAAahN,EAAc,wCrD66VlC,IqD55VMs+C,GAAK,SAAAn8C,GAASX,EAAd88C,EAAKn8C,EAgBV,SAhBKm8C,KAkBJn8C,EAAApB,KAAAU,MAVDW,OAAAC,eAAIi8C,EAAAt8C,UAAA,YrDi6VGM,IqDj6VP,WAEC,MAAOb,MAAK88C,WrDk6VN/7C,WAAY,KACZC,aAAc,MqDx5Vd67C,GAAAt8C,UAAAkI,MAAP,WAEC,GAAIA,GAAc,GAAIo0C,EACtBp0C,GAAM+I,MAAQxR,KAAKwR,KACnB/I,GAAM6L,WAAatU,KAAKsU,UACxB7L,GAAM8hB,KAAOA,IACb9hB,GAAMwK,SAAWjT,KAAKiT,QACtBxK,GAAM8L,MAAQvU,KAAKuU,MAAOvU,KAAKuU,MAAMC,SAAW,IAChD/L,GAAMq0C,UAAY98C,KAAK88C,SACvB,OAAOr0C,GAET,OAAAo0C,IAhCoBtxC,EAkCpB9L,GAAeJ,QAANw9C,IrD25VNryC,wCAAwC,0CAA0CuyC,sCAAsC,SAASx+C,EAAQkB,EAAOJ,GACnJ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsDn9VtB,IAAO28C,GAASz+C,EAAe,iCAO/B,IAAOgN,GAAahN,EAAc,wCAGlC,IAAO2M,GAAU3M,EAAe,uCtDm9VhC,IsDt8VM0+C,GAAM,SAAAv8C,GAASX,EAAfk9C,EAAMv8C,EA4MX,SA5MKu8C,GA4MOC,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEXx8C,EAAApB,KAAAU,KAzMMA,MAAAm9C,iBAA0B,CAG1Bn9C,MAAAo9C,YAAqBJ,EAAUhO,MAC9BhvC,MAAAq9C,SAA0B,GAAI73C,MAC9BxF,MAAAknB,aAAkC,GAAI1hB,MAItCxF,MAAAs9C,QAAkB,KAClBt9C,MAAAu9C,QAAkB,IAiMzBv9C,MAAK4L,WAAa,IAClB5L,MAAKw9C,QAAU,GAAIh4C,OAAwBxF,KAE3CA,MAAKk9C,QAAUA,CAGfl9C,MAAK+O,YAAc7D,EAAW+sB,KA9L/Bt3B,OAAAC,eAAWq8C,EAAA18C,UAAA,kBtD08VJM,IsD18VP,WAEC,MAAOb,MAAKm9C,kBtD28VNx6C,IsDx8VP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAKm9C,kBAAoBv6C,EAC5B,MAED5C,MAAKm9C,iBAAmBv6C,CAExB5C,MAAKy9C,uBtDs8VC18C,WAAY,KACZC,aAAc,MsDj8VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,UtDu8VJM,IsDv8VP,WAEC,MAAOb,MAAKs9C,StDw8VN36C,IsDr8VP,SAAkBC,GAEjB,GAAI5C,KAAKs9C,SAAW16C,EACnB,MAED5C,MAAKs9C,QAAU16C,CAEf5C,MAAKy9C,uBtDo8VC18C,WAAY,KACZC,aAAc,MsD/7VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,UtDq8VJM,IsDr8VP,WAEC,MAAOb,MAAKu9C,StDs8VN56C,IsDn8VP,SAAkBC,GAEjB,GAAI5C,KAAKu9C,SAAW36C,EACnB,MAED5C,MAAKu9C,QAAU36C,CAEf5C,MAAKy9C,uBtDk8VC18C,WAAY,KACZC,aAAc,MsD17VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,etDm8VJM,IsDn8VP,WAEC,MAAOb,MAAK09C,etDo8VN38C,WAAY,KACZC,aAAc,MsD/7VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,gBtDq8VJM,IsDr8VP,WAEC,MAAOb,MAAK29C,etDs8VN58C,WAAY,KACZC,aAAc,MsD17VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,atDu8VJM,IsDv8VP,WAEC,MAAOb,MAAKo9C,atDw8VNz6C,IsDr8VP,SAAqBC,GAEpB,GAAI5C,KAAKo9C,aAAex6C,EACvB,MAED5C,MAAKo9C,YAAcx6C,CAEnB5C,MAAK49C,sBtDo8VC78C,WAAY,KACZC,aAAc,MsDl8Vdi8C,GAAA18C,UAAAq9C,mBAAP,WAEC,GAAIpuC,GAAaxP,KAAKq9C,SAAS99C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKq9C,SAASr+C,GAAG6+C,mBAQZZ,GAAA18C,UAAAk9C,oBAAP,WAEC,GAAIjuC,GAAaxP,KAAKq9C,SAAS99C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKq9C,SAASr+C,GAAG8+C,mBAQnBn9C,QAAAC,eAAWq8C,EAAA18C,UAAA,WtDi8VJM,IsDj8VP,WAEC,MAAOb,MAAKw9C,StDk8VNz8C,WAAY,KACZC,aAAc,MsDh8VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,YtDm8VJM,IsDn8VP,WAEC,MAAOb,MAAK4wC,WtDo8VN7vC,WAAY,KACZC,aAAc,MsD/7VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,etDq8VJM,IsDr8VP,WAEC,MAAOb,MAAKunB,ctDs8VN5kB,IsDn8VP,SAAuBC,GAEtB5C,KAAKunB,aAAe3kB,GtDo8Vd7B,WAAY,KACZC,aAAc,MsDh8VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,kBtDs8VJM,IsDt8VP,WAEC,MAAOb,MAAK8wC,iBtDu8VNnuC,IsDp8VP,SAA0BC,GAEzB5C,KAAK8wC,gBAAkBluC,GtDq8VjB7B,WAAY,KACZC,aAAc,MsDj8VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,WtDu8VJM,IsDv8VP,WAEC,MAAOb,MAAK+9C,UtDw8VNp7C,IsDr8VP,SAAmBC,GAGlB,GAAIA,GAAS5C,KAAK+9C,SACjB/9C,KAAK49C,oBAEN59C,MAAK+9C,SAAWn7C,GtDq8VV7B,WAAY,KACZC,aAAc,MsDj7VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,atDo7VJM,IsDp7VP,WAEC,MAAOo8C,GAAO/7C,WtDq7VRH,WAAY,KACZC,aAAc,MsDn7VrBL,QAAAC,eAAWq8C,EAAA18C,UAAA,gBtDs7VJM,IsDt7VP,WAEC,MAAO,QtDu7VDE,WAAY,KACZC,aAAc,MsDj7Vdi8C,GAAA18C,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAIwQ,EAEJA,GAAMxP,KAAKq9C,SAAS99C,MACpB,KAAKP,EAAI,EAAGA,EAAIwQ,EAAKxQ,IACpBgB,KAAKq9C,SAASr+C,GAAGiC,SAElBjB,MAAKq9C,SAAW,GAAI73C,MAEpB,IAAIgK,GAAaxP,KAAKknB,aAAa3nB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKknB,aAAaloB,GAAGiC,SAEtBjB,MAAKknB,aAAe,GAAI1hB,OAGlBy3C,GAAA18C,UAAA4d,eAAP,SAAsBC,IAKf6+B,GAAA18C,UAAAy9C,YAAP,SAAmBpa,GAElB5jC,KAAKq9C,SAASh3C,KAAKu9B,EAEnB,OAAOA,GAGDqZ,GAAA18C,UAAA09C,eAAP,SAAsBra,GAErB5jC,KAAKq9C,SAASpgC,OAAOjd,KAAKq9C,SAASrgC,QAAQ4mB,GAAS,EAEpD,OAAOA,GAGDqZ,GAAA18C,UAAAsc,gBAAP,SAAuBC,GAEtB9c,KAAKknB,aAAa7gB,KAAKyW,EAEvB,OAAOA,GAIDmgC,GAAA18C,UAAAwc,mBAAP,SAA0BD,GAEzB,GAAI3W,GAAenG,KAAKknB,aAAalK,QAAQF,EAE7C9c,MAAKknB,aAAajK,OAAO9W,EAAO,EAEhC,OAAO2W,GAxRMmgC,GAAA/7C,UAAmB,gBA0RlC,OAAA+7C,IA5RqB1xC,EA8RrB9L,GAAgBJ,QAAP49C,ItDq6VNiB,iCAAiC98C,UAAUoJ,wCAAwC,wCAAwC0V,uCAAuC,yCAAyCi+B,yCAAyC,SAAS5/C,EAAQkB,EAAOJ,GAC/Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuD9tWtB,IAAOujB,GAAcrlB,EAAc,4CAEnC,IAAOoD,GAAgBpD,EAAc,8CAErC,IAAOmM,GAAcnM,EAAc,sCAQnC,IAAO6/C,GAAa7/C,EAAc,wCAIlC,IAAO43C,GAAI53C,EAAiB,mCAC5B,IAAOgiB,GAAQhiB,EAAgB,mCAE/B,IAAOuD,GAAgBvD,EAAc,2CvDmyWrC,IuD/sWM8/C,GAAS,SAAA39C,GAASX,EAAlBs+C,EAAS39C,EAooBd,SApoBK29C,KAsoBJ39C,EAAApB,KAAAU,KAAM,GAAIugB,GA1nBHvgB,MAAAs+C,MAAe,EA2nBtBt+C,MAAKuT,KAAO6qC,EAAcG,OApiB3B59C,OAAAC,eAAWy9C,EAAA99C,UAAA,avDgoWJM,IuDhoWP,WAEC,MAAOw9C,GAAUn9C,WvDioWXH,WAAY,KACZC,aAAc,MuDjlWrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,iBvD6lWJM,IuD7lWP,WAEC,MAAOb,MAAKw+C,gBvD8lWNz9C,WAAY,KACZC,aAAc,MuDnlWrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,cvD+lWJM,IuD/lWP,WAEC,MAAOb,MAAKy+C,avDgmWN19C,WAAY,KACZC,aAAc,MuDr/VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,UvD4/VJM,IuD5/VP,WAEC,MAAOb,MAAK0+C,SvD6/VN39C,WAAY,KACZC,aAAc,MuD7+Vdq9C,GAAA99C,UAAAo+C,WAAP,WAEC,MAAO3+C,MAAK4+C,YAMNP,GAAA99C,UAAAs+C,WAAP,WAEC,MAAO7+C,MAAK8+C,YA+Bbn+C,QAAAC,eAAWy9C,EAAA99C,UAAA,YvDw9VJM,IuDx9VP,WAEC,MAAOb,MAAK++C,WvDy9VNh+C,WAAY,KACZC,aAAc,MuD32VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,uBvDo3VJM,IuDp3VP,WAEC,MAAOb,MAAKg/C,sBvDq3VNj+C,WAAY,KACZC,aAAc,MuD72VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,qBvDs3VJM,IuDt3VP,WAEC,MAAOb,MAAKi/C,oBvDu3VNl+C,WAAY,KACZC,aAAc,MuD70VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,QvDw1VJM,IuDx1VP,WAEC,MAAOb,MAAKs+C,OvDy1VN37C,IuDt1VP,SAAgBC,GAEfA,EAAMA,EAAMs8C,UACZ,IAAIl/C,KAAKs+C,OAAS17C,EACjB,MAED5C,MAAKs+C,MAAQ17C,CACb5C,MAAKm/C,evDs1VCp+C,WAAY,KACZC,aAAc,MuDr1VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,cvDw1VJM,IuDx1VP,WAEC,MAAOb,MAAKo/C,avDy1VNz8C,IuDt1VP,SAAsBC,GAErB,GAAI5C,KAAKo/C,aAAex8C,EACvB,MACD5C,MAAKo/C,YAAcx8C,CACnB5C,MAAKm/C,evDu1VCp+C,WAAY,KACZC,aAAc,MuD10VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,avD60VJM,IuD70VP,WAEC,MAAOb,MAAKq/C,YvD80VN18C,IuD30VP,SAAqBC,GAEpB5C,KAAKq/C,WAAaz8C,CAElB,KAAI5C,KAAKsP,iBACRtP,KAAKsP,iBAAmB,GAAI5E,EAE7B1K,MAAKsP,iBAAiBi8B,MAAQ3oC,GvD00VxB7B,WAAY,KACZC,aAAc,MuDh0VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,uBvD20VJM,IuD30VP,WAEC,MAAOb,MAAKs/C,sBvD40VNv+C,WAAY,KACZC,aAAc,MuDv0VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,avD60VJM,IuD70VP,WAEC,MAAOb,MAAKu/C,YvD80VN58C,IuD50VP,SAAqBC,GAEpB5C,KAAKu/C,WAAa38C,GvD60VZ7B,WAAY,KACZC,aAAc,MuDx0VrBL,QAAAC,eAAWy9C,EAAA99C,UAAA,cvD80VJM,IuD90VP,WAEC,MAAOb,MAAKw/C,avD+0VN78C,IuD70VP,SAAsBC,GAErB5C,KAAKw/C,YAAc58C,GvD80Vb7B,WAAY,KACZC,aAAc,MuDhxVdq9C,GAAA99C,UAAA4+C,YAAP,WAGC,GAAGn/C,KAAKo/C,aAAa,KACpB,MAGD,KAAK,GAAIpgD,GAASgB,KAAKo2C,SAASe,cAAc53C,OAAO,EAAGP,GAAG,EAAGA,IAC7DgB,KAAKo2C,SAASv1B,kBAAkB7gB,KAAKo2C,SAASe,cAAcn4C,GAE7D,IAAGgB,KAAKs+C,OAAO,GACd,MAED,IAAI/Q,GAAyB,GAAI/nC,MAGjC,IAAIi6C,GAAkBz/C,KAAKo/C,YAAYM,KAAK1/C,KAAKo/C,YAAYO,WAAWC,kBACxE,IAAIC,GAA4B7/C,KAAKo/C,YAAYO,WAAWG,QAC5D,IAAIC,GAA4B//C,KAAKo/C,YAAYO,WAAWK,QAC5D,IAAIC,GAAgBF,CACpB,IAAIG,GAA+B,IACnC,IAAIh6C,GAAW,CACf,IAAI/B,GAAW,CACf,IAAIg8C,GAA0BngD,KAAKogD,KAAKlB,WAAWmB,MAAM,KACzD,KAAK,GAAIC,GAAK,EAAGA,EAAKH,EAAU5gD,OAAQ+gD,IAAM,CAC7C,GAAIC,GAA2BJ,EAAUG,GAAID,MAAM,KACnD,KAAK,GAAIG,GAAK,EAAGA,EAAKD,EAAWhhD,OAAQihD,IAAM,CAC9C,GAAIC,GAAoB,CACxB,IAAIC,GAAe,CACnB,IAAIC,KACJ,IAAIC,KACJ,KAAK,GAAI5hD,GAAI,EAAGA,EAAIuhD,EAAWC,GAAIjhD,OAAQP,IAAK,CAC/CygD,EAAWz/C,KAAKo/C,YAAYM,KAAK1/C,KAAKo/C,YAAYO,WAAWC,kBAC7D,IAAIiB,GAAoD7gD,KAAKo/C,YAAYO,WAAWmB,oBAAoBP,EAAWC,GAAIO,WAAW/hD,GAAGkgD,WACrI,IAAG2B,GAAa,KAAM,CACrB,GAAG7gD,KAAKo/C,YAAY4B,oBAAqB,CACxCvB,EAAaz/C,KAAKo/C,YAAYM,KAAO1/C,KAAKo/C,YAAY4B,oBAAoBpB,kBAC1EiB,GAAY7gD,KAAKo/C,YAAY4B,oBAAoBF,oBAAoBP,EAAWC,GAAIO,WAAW/hD,GAAGkgD,aAIpG,GAAI2B,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CvD8wVJ,GuD5wVjBE,GAAuB,CAC3B,IAAIjB,GAAa,KAAM,CACtB,IAAK,GAAI/7C,GAAW,EAAGA,EAAI+7C,EAAUkB,iBAAiB7hD,OAAQ4E,IAAK,CAClE,GAAI+7C,EAAUkB,iBAAiBj9C,IAAMnE,KAAKs+C,MAAMyC,WAAW/hD,GAAI,CAC9DmiD,EAAgBjB,EAAUmB,cAAcl9C,EACxC,SAIHs8C,IAAgBI,EAAUS,WAAaH,GAAiB1B,EAAcz/C,KAAKo/C,YAAYmC,kBAEnF,CAEJd,GAAczgD,KAAKo/C,YAAYO,WAAW6B,uBAAyB/B,OAGhE,CAGJgB,GAAczgD,KAAKo/C,YAAYO,WAAW6B,uBAAyB/B,EAEpEmB,EAAiBF,GAAOjB,CACxBkB,GAAWD,KAASG,EAErB,GAAIY,GAAgB5B,CACpB,IAAG7/C,KAAKo/C,YAAYsC,OAAO,SAAS,CACnCD,GAAUzhD,KAAKu/C,WAAWkB,GAAY,MAElC,IAAGzgD,KAAKo/C,YAAYsC,OAAO,QAAQ,CACvCD,EAAUzhD,KAAKu/C,WAAWkB,EAAYZ,EAIvC,IAAK,GAAI7gD,GAAI,EAAGA,EAAIuhD,EAAWC,GAAIjhD,OAAQP,IAAK,CAC/C,GAAI6hD,GAA+BF,EAAW3hD,EAC9CygD,GAAamB,EAAiB5hD,EAC9B,IAAI6hD,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CACzB,GAAIU,GAA0BV,EAAar9C,UAAU/C,IAAIogD,EAAax8C,YACtE,IAAIm9C,GAA0BX,EAAax6C,OAAO5F,IAAIogD,EAAax8C,YACnE,KAAK,GAAIgD,GAAW,EAAGA,EAAIw5C,EAAax8C,YAAagD,IAAK,CACzD8lC,EAASrnC,KAAQy7C,EAAWl6C,EAAI,GAAKg4C,EAAcgC,CACnDlU,GAASrnC,KAAQy7C,EAAWl6C,EAAI,EAAI,GAAKg4C,EAAcQ,CACvD1S,GAASrnC,KAAOy7C,EAAWl6C,EAAI,EAAI,EACnC8lC,GAASrnC,KAAO07C,EAAWn6C,EAAI,EAC/B8lC,GAASrnC,KAAO07C,EAAWn6C,EAAI,EAAI,EACnC8lC,GAASrnC,KAAOlG,KAAKo/C,YAAYyC,UAAU,EAC3CtU,GAASrnC,KAAOlG,KAAKo/C,YAAYyC,UAAU,GvD6wVvB,GuD1wVjBV,GAAuB,CAC3B,IAAIjB,GAAa,KAAM,CACtB,IAAK,GAAI/7C,GAAW,EAAGA,EAAI+7C,EAAUkB,iBAAiB7hD,OAAQ4E,IAAK,CAClE,GAAI+7C,EAAUkB,iBAAiBj9C,IAAMnE,KAAKs+C,MAAMyC,WAAW/hD,GAAI,CAC9DmiD,EAAgBjB,EAAUmB,cAAcl9C,EACxC,SAIHs9C,IAAcZ,EAAUS,WAAaH,GAAiB1B,EAAcz/C,KAAKo/C,YAAYmC,kBAEjF,CAEJE,GAAUzhD,KAAKo/C,YAAYO,WAAW6B,uBAAyB/B,OAG7D,CACHgC,GAAUzhD,KAAKo/C,YAAYO,WAAW6B,uBAAyB/B,GAGjEQ,GAAUjgD,KAAKo/C,YAAYO,WAAWC,mBAAqBH,GAG7D,GAAIh5B,GAAgC,GAAI7C,GAAeI,aAAc,EACrEyC,GAAe9jB,IAAI4qC,EACnB,IAAIuU,GAAoCr7B,EAAes7B,MACvDt7B,GAAexlB,SACf,IAAI+gD,GAAkC,GAAIlgD,GAAiBggD,EAC3DE,GAAen/C,OAAO,GAAIlB,GAAiBmgD,GAC3C9hD,MAAKo2C,SAAS31B,eAAeuhC,EAC7BhiD,MAAK24C,UAAU,GAAGpvC,SAASvJ,KAAKo/C,YAAY71C,SAWtC80C,GAAA99C,UAAA0hD,WAAP,SAAkBC,GACjBliD,KAAKs+C,OAAO4D,EAON7D,GAAA99C,UAAA4hD,eAAP,YAcO9D,GAAA99C,UAAA6hD,kBAAP,SAAyBC,GAExB,MAAOriD,MAAKsiD,gBAaNjE,GAAA99C,UAAAgiD,oBAAP,SAA2Bt/C,EAAUC,GAEpC,MAAOlD,MAAKwiD,kBAcNnE,GAAA99C,UAAAkiD,wBAAP,SAA+BJ,GAE9B,MAAOriD,MAAK0iD,sBAuBNrE,GAAA99C,UAAAoiD,kBAAP,SAAyBt6C,GAExB,MAAOrI,MAAK4iD,gBAaNvE,GAAA99C,UAAAsiD,oBAAP,SAA2B5/C,EAAUC,GAEpC,MAAOlD,MAAK8iD,kBAaNzE,GAAA99C,UAAAwiD,mBAAP,SAA0BV,GAEzB,MAAOriD,MAAKgjD,iBAUN3E,GAAA99C,UAAA0iD,cAAP,SAAqBC,GAEpB,MAAOljD,MAAKmjD,YAUN9E,GAAA99C,UAAA6iD,eAAP,SAAsBF,GAErB,MAAOljD,MAAKqjD,aAYNhF,GAAA99C,UAAA+iD,cAAP,SAAqBJ,GAEpB,MAAOljD,MAAKujD,YAYNlF,GAAA99C,UAAAijD,YAAP,SAAmBN,GAElB,MAAOljD,MAAKyjD,UAeNpF,GAAA99C,UAAAmjD,mBAAP,SAA0BrB,GAEzB,MAAOriD,MAAK2jD,iBAqBNtF,GAAA99C,UAAAqjD,cAAP,SAAqB7pB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOh6B,MAAKo/C,YAoBNf,GAAA99C,UAAAsjD,oBAAP,SAA2BjhD,IAuBpBy7C,GAAA99C,UAAAujD,YAAP,SAAmB/pB,EAA2BC,EAAyBkoB,IAkBhE7D,GAAA99C,UAAAwjD,aAAP,SAAoBhqB,EAA2BC,IAkDxCqkB,GAAA99C,UAAAyjD,cAAP,SAAqBC,EAAmBlqB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrFqkB,GAAA6F,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGE/F,GAAA99C,UAAAkI,MAAP,WAEI,GAAIA,GAAQ,GAAI41C,EAChBr+C,MAAKqkD,kBAAkB57C,EACvB,OAAOA,GAGJ41C,GAAA99C,UAAA8jD,kBAAP,SAAyB57C,GAE3BA,EAAM2tC,SAAW,GAAI71B,EAErB9X,GAAM6L,WAAatU,KAAKsU,UACxB7L,GAAM+I,MAAQxR,KAAKwR,KACnB/I,GAAMoT,UAAY7b,KAAK6b,SACvBpT,GAAM+uC,WAAax3C,KAAKw3C,UAGxB/uC,GAAM8hB,KAAOvqB,KAAKuqB,IAClB9hB,GAAM+F,aAAexO,KAAKwO,YAC1B/F,GAAMgvC,uBAAyBz3C,KAAKy3C,sBACpChvC,GAAM6W,aAAetf,KAAKsf,YAC1B7W,GAAMwW,cAAgBjf,KAAKif,aAG3BxW,GAAMivC,MAAQ13C,KAAK03C,KACnBjvC,GAAMwK,SAAWjT,KAAKiT,QACtBxK,GAAM8L,MAAQvU,KAAKuU,MAAOvU,KAAKuU,MAAMC,SAAW,IvDouV1C,IuD7tVFhF,GAAaxP,KAAKmf,WACtB,KAAK,GAAIngB,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCyJ,EAAMmwB,SAAS54B,KAAK+rB,UAAU/sB,GAAGyJ,QAIlCA,GAAM67C,UAAUtkD,KAAKskD,SACrB77C,GAAM87C,WAAWvkD,KAAKukD,UAChB97C,GAAM+7C,WAAaxkD,KAAKo/C,WAExB32C,GAAM23C,KAAOpgD,KAAKs+C,MA/pCXD,GAAAn9C,UAAmB,mBAiqClC,OAAAm9C,IAnqCwBlI,EAqqCxB12C,GAAmBJ,QAAVg/C,IvD+tVN15B,4CAA4CvjB,UAAUuI,8CAA8CvI,UAAUoe,sCAAsCpe,UAAUK,2CAA2C,2CAA2C4e,mCAAmC,mCAAmC41B,mCAAmC,mCAAmCwO,wCAAwC,0CAA0CC,uCAAuC,SAASnmD,EAAQkB,EAAOJ,GACphB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwDj/XtB,IAAOnB,GAAKX,EAAe,+BAE3B,IAAMomD,GAAS,SAAAjkD,GAASX,EAAlB4kD,EAASjkD,EAEd,SAFKikD,GAEOC,GAEXlkD,EAAApB,KAAAU,KAAM4kD,GAER,MAAAD,IANwBzlD,EAQxBO,GAAmBJ,QAAVslD,IxDm/XNtpB,+BAA+Bj6B,YAAYqkC,yCAAyC,SAASlnC,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDlgYtB,IAAO44C,GAAK16C,EAAe,+BzDwgY3B,IyDjgYM8hC,GAAW,SAAA3/B,GAASX,EAApBsgC,EAAW3/B,EAMhB,SANK2/B,GAMO9sB,EAAasG,GAExBnZ,EAAApB,KAAAU,KAAMuT,EAENvT,MAAK6kD,QAAUhrC,EAGhBlZ,OAAAC,eAAWy/B,EAAA9/B,UAAA,UzD2/XJM,IyD3/XP,WAEC,MAAOb,MAAK6kD,SzD4/XN9jD,WAAY,KACZC,aAAc,MyD1gYPq/B,GAAAkD,mBAA4B,mBAe3C,OAAAlD,IAjB0B4Y,EAmB1Bx5C,GAAqBJ,QAAZghC,IzDggYNub,+BAA+Bx6C,YAAY+e,gDAAgD,SAAS5hB,EAAQkB,EAAOJ,GACtH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0D/hYtB,IAAO44C,GAAK16C,EAAe,+BAI3B,IAAM+M,GAAkB,SAAA5K,GAASX,EAA3BuL,EAAkB5K,EAiBvB,SAjBK4K,GAiBOiI,EAAauxC,GAExBpkD,EAAApB,KAAAU,KAAMuT,EACNvT,MAAK8kD,OAASA,EAlBDx5C,EAAAy5C,kBAA2B,kBAC3Bz5C,GAAA6I,uBAAgC,uBAChC7I,GAAA2I,cAAuB,cACvB3I,GAAAmI,iBAA0B,iBAC1BnI,GAAAqI,iBAA0B,iBAC1BrI,GAAAuI,aAAsB,aACtBvI,GAAAyI,cAAuB,cAKvBzI,GAAAgG,kBAA2B,kBAS1C,OAAAhG,IAtBiC2tC,EAwBLx5C,GAAAJ,QAAnBiM,I1D2hYNswC,+BAA+Bx6C,YAAY8f,2CAA2C,SAAS3iB,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2D5jYtB,IAAO44C,GAAK16C,EAAe,+B3DqkY3B,I2D1jYM+hB,GAAa,SAAA5f,GAASX,EAAtBugB,EAAa5f,EAwBlB,SAxBK4f,GAwBO/M,EAAarJ,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBxJ,EAAApB,KAAAU,KAAMuT,EAENvT,MAAKqK,aAAeH,EAMrBvJ,OAAAC,eAAW0f,EAAA/f,UAAA,e3DwiYJM,I2DxiYP,WAEC,MAAOb,MAAKqK,c3DyiYNtJ,WAAY,KACZC,aAAc,M2DniYdsf,GAAA/f,UAAAkI,MAAP,WAEC,MAAO,IAAI6X,GAActgB,KAAKuT,KAAMvT,KAAKqK,cAxC5BiW,GAAAK,mBAA4B,kBAK5BL,GAAAQ,qBAA8B,oBAK9BR,GAAAW,eAAwB,eAgCvC,OAAAX,IA/C4B24B,EAiD5Bx5C,GAAuBJ,QAAdihB,I3DsjYNs7B,+BAA+Bx6C,YAAYsiB,wCAAwC,SAASnlB,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4DvnYtB,IAAO44C,GAAK16C,EAAe,+BAE3B,IAAMojB,GAAU,SAAAjhB,GAASX,EAAnB4hB,EAAUjhB,EAKf,SALKihB,GAKOpO,GAEX7S,EAAApB,KAAAU,KAAMuT,GAIAoO,EAAAphB,UAAAkI,MAAP,WAEC,MAAO,IAAIkZ,GAAW3hB,KAAKuT,MAVdoO,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyBs3B,EAiBLx5C,GAAAJ,QAAXsiB,I5DqnYNi6B,+BAA+Bx6C,YAAYgwC,2CAA2C,SAAS7yC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6D7oYtB,IAAO44C,GAAK16C,EAAe,+BAE3B,IAAM2xC,GAAa,SAAAxvC,GAASX,EAAtBmwC,EAAaxvC,EAIlB,SAJKwvC,GAIO38B,GAEX7S,EAAApB,KAAAU,KAAMuT,GAJO28B,EAAAW,aAAsB,aAMrC,OAAAX,IAR4B+I,EAULx5C,GAAAJ,QAAd6wC,I7D8oYN0L,+BAA+Bx6C,YAAYy6C,wCAAwC,SAASt9C,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8D7pYtB,IAAO44C,GAAK16C,EAAe,+B9DoqY3B,I8DzpYM26C,GAAU,SAAAx4C,GAASX,EAAnBm5C,EAAUx4C,EAuIf,SAvIKw4C,GAuIO3lC,GAEX7S,EAAApB,KAAAU,KAAMuT,EAtIAvT,MAAAglD,qBAA+B,KA4ItCrkD,OAAAC,eAAWs4C,EAAA34C,UAAA,W9DyhYJM,I8DzhYP,WAEC,GAAIokD,GAAqBjlD,KAAKglD,oBAC9BhlD,MAAKglD,qBAAuB,IAG5B,OAAOC,I9DyhYDlkD,WAAY,KACZC,aAAc,M8DphYdk4C,GAAA34C,UAAA2kD,gBAAP,WAECllD,KAAKglD,qBAAuB,KAE5B,IAAIhlD,KAAKmlD,cACRnlD,KAAKmlD,cAAcD,kBAMdhM,GAAA34C,UAAA6kD,yBAAP,WAECplD,KAAKglD,qBAAuB,KAE5B,IAAIhlD,KAAKmlD,cACRnlD,KAAKmlD,cAAcC,2BAMdlM,GAAA34C,UAAAkI,MAAP,WAEC,GAAI48C,GAAoB,GAAInM,GAAWl5C,KAAKuT,KAO5C8xC,GAAOC,QAAUtlD,KAAKslD,OACtBD,GAAOE,QAAUvlD,KAAKulD,OAEtBF,GAAOG,KAAOxlD,KAAKwlD,IACnBH,GAAOP,OAAS9kD,KAAK8kD,MACrBO,GAAO3M,gBAAkB14C,KAAK04C,eAC9B2M,GAAO97C,SAAWvJ,KAAKuJ,QACvB87C,GAAOI,GAAKzlD,KAAKylD,EACjBJ,GAAO5iB,cAAgBziC,KAAKyiC,aAC5B4iB,GAAOK,YAAc1lD,KAAK0lD,WAC1BL,GAAOl/C,MAAQnG,KAAKmG,KACpBk/C,GAAOM,iBAAmB3lD,KAAK2lD,gBAC/BN,GAAOO,MAAQ5lD,KAAK4lD,KAEpBP,GAAOQ,QAAU7lD,KAAK6lD,OACtBR,GAAOS,SAAW9lD,KAAK8lD,QAEvBT,GAAOF,cAAgBnlD,IACvBqlD,GAAOL,qBAAuBhlD,KAAKglD,oBAEnC,OAAOK,GAMR1kD,QAAAC,eAAWs4C,EAAA34C,UAAA,iB9D4gYJM,I8D5gYP,WAEC,MAAOb,MAAK8kD,OAAOp0C,eAAe6B,gBAAgBvS,KAAKyiC,gB9D6gYjD1hC,WAAY,KACZC,aAAc,M8DxgYrBL,QAAAC,eAAWs4C,EAAA34C,UAAA,e9D8gYJM,I8D9gYP,WAEC,GAAIklD,GAAuB/lD,KAAK8kD,OAAOp0C,eAAeq5B,qBAAqB/pC,KAAK0lD,YAChFK,GAAYttC,WAEZ,OAAOstC,I9D8gYDhlD,WAAY,KACZC,aAAc,M8DvuYPk4C,GAAAuB,WAAoB,aAKpBvB,GAAAwB,UAAmB,YAKnBxB,GAAA0B,SAAkB,WAKlB1B,GAAAyB,WAAoB,aAKpBzB,GAAA8M,WAAoB,aAepB9M,GAAA+M,MAAe,SAKf/M,GAAAgN,aAAsB,eAKtBhN,GAAAiN,YAAqB,cA6KpC,OAAAjN,IAnOyBD,EAqOzBx5C,GAAoBJ,QAAX65C,I9DyjYN0C,+BAA+Bx6C,YAAYglD,kDAAkD,SAAS7nD,EAAQkB,EAAOJ,GACxH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+DhzYtB,IAAO44C,GAAK16C,EAAgB,+B/DyzY5B,I+D/yYM8nD,GAAoB,SAAA3lD,GAASX,EAA7BsmD,EAAoB3lD,EAczB,SAdK2lD,GAcO9yC,EAAa+yC,GAExB5lD,EAAApB,KAAAU,KAAMuT,EAENvT,MAAKumD,aAAeD,EAMrB3lD,OAAAC,eAAWylD,EAAA9lD,UAAA,e/DsyYJM,I+DtyYP,WAEC,MAAOb,MAAKumD,c/DuyYNxlD,WAAY,KACZC,aAAc,M+DhyYdqlD,GAAA9lD,UAAAkI,MAAP,WAEC,MAAO,IAAI49C,GAAqBrmD,KAAKuT,KAAMvT,KAAKumD,cA/BnCF,GAAAG,qBAA8B,oBAiC7C,OAAAH,IAtCmCpN,EAwCnCx5C,GAA8BJ,QAArBgnD,I/D4yYNzK,+BAA+Bx6C,YAAYskC,2CAA2C,SAASnnC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEn2YtB,IAAO44C,GAAK16C,EAAe,+BAE3B,IAAM+hC,GAAa,SAAA5/B,GAASX,EAAtBugC,EAAa5/B,EAKlB,SALK4/B,GAKO/sB,GAEX7S,EAAApB,KAAAU,KAAMuT,GALO+sB,EAAAsC,iBAA0B,iBAC1BtC,GAAAuC,gBAAyB,gBAMxC,OAAAvC,IAT4B2Y,EAWLx5C,GAAAJ,QAAdihC,IhEo2YNsb,+BAA+Bx6C,YAAYqlD,yCAAyC,SAASloD,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiEt3YtB,IAAO44C,GAAK16C,EAAe,+BAE3B,IAAMmoD,GAAW,SAAAhmD,GAASX,EAApB2mD,EAAWhmD,EAOhB,SAPKgmD,GAOOnzC,EAAaozC,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAAtZ,IAAwB,GAAAuZ,QAAA,GAAqB,CAArBA,EAAAvZ,IAEhD3sC,EAAApB,KAAAU,KAAMuT,EAENvT,MAAK6mD,WAAaF,CAClB3mD,MAAK8mD,UAAYF,EAGlBjmD,OAAAC,eAAW8lD,EAAAnmD,UAAA,ajEk3YJM,IiEl3YP,WAEC,MAAOb,MAAK6mD,YjEm3YN9lD,WAAY,KACZC,aAAc,MiEj3YrBL,QAAAC,eAAW8lD,EAAAnmD,UAAA,YjEo3YJM,IiEp3YP,WAEC,MAAOb,MAAK8mD,WjEq3YN/lD,WAAY,KACZC,aAAc,MiE14YP0lD,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0BzN,EA0B1Bx5C,GAAqBJ,QAAZqnD,IjEy3YN9K,+BAA+Bx6C,YAAY4lB,8CAA8C,SAASzoB,EAAQkB,EAAOJ,GACpH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkEz5YtB,IAAO44C,GAAK16C,EAAe,+BlEk6Y3B,IkE15YMwnB,GAAgB,SAAArlB,GAASX,EAAzBgmB,EAAgBrlB,EA8BrB,SA9BKqlB,GA8BOxS,EAAakT,GAExB/lB,EAAApB,KAAAU,KAAMuT,EAENvT,MAAKgnD,gBAAkBvgC,EAMxB9lB,OAAAC,eAAWmlB,EAAAxlB,UAAA,kBlEi4YJM,IkEj4YP,WAEC,MAAOb,MAAKgnD,iBlEk4YNjmD,WAAY,KACZC,aAAc,MkE33Yd+kB,GAAAxlB,UAAAkI,MAAP,WAEC,MAAO,IAAIsd,GAAiB/lB,KAAKuT,KAAMvT,KAAKgnD,iBA/C/BjhC,GAAAQ,gBAAyB,gBAKzBR,GAAAS,iBAA0B,iBAK1BT,GAAAW,iBAA0B,iBAK1BX,GAAAY,kBAA2B,kBAkC1C,OAAAZ,IAtD+BkzB,EAwDLx5C,GAAAJ,QAAjB0mB,IlEm5YN61B,+BAA+Bx6C,YAAY6lD,wCAAwC,SAAS1oD,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmEv9YtB,IAAO44C,GAAK16C,EAAe,+BAO3B,IAAM2oD,GAAU,SAAAxmD,GAASX,EAAnBmnD,EAAUxmD,EA4Gf,SA5GKwmD,GA4GO3zC,GAEX7S,EAAApB,KAAAU,KAAMuT,EA3GAvT,MAAAglD,qBAA+B,KAiHtCrkD,OAAAC,eAAWsmD,EAAA3mD,UAAA,WnE82YJM,ImE92YP,WAEC,GAAIokD,GAAqBjlD,KAAKglD,oBAC9BhlD,MAAKglD,qBAAuB,IAG5B,OAAOC,InE82YDlkD,WAAY,KACZC,aAAc,MmEz2YdkmD,GAAA3mD,UAAA2kD,gBAAP,WAECllD,KAAKglD,qBAAuB,KAE5B,IAAIhlD,KAAKmlD,cACRnlD,KAAKmlD,cAAcD,kBAMdgC,GAAA3mD,UAAA6kD,yBAAP,WAECplD,KAAKglD,qBAAuB,KAE5B,IAAIhlD,KAAKmlD,cACRnlD,KAAKmlD,cAAcC,2BAMd8B,GAAA3mD,UAAAkI,MAAP,WAEC,GAAI48C,GAAoB,GAAI6B,GAAWlnD,KAAKuT,KAO5C8xC,GAAOC,QAAUtlD,KAAKslD,OACtBD,GAAOE,QAAUvlD,KAAKulD,OAEtBF,GAAOG,KAAOxlD,KAAKwlD,IACnBH,GAAOP,OAAS9kD,KAAK8kD,MACrBO,GAAO3M,gBAAkB14C,KAAK04C,eAC9B2M,GAAO97C,SAAWvJ,KAAKuJ,QACvB87C,GAAOI,GAAKzlD,KAAKylD,EACjBJ,GAAO5iB,cAAgBziC,KAAKyiC,aAC5B4iB,GAAOK,YAAc1lD,KAAK0lD,WAC1BL,GAAOl/C,MAAQnG,KAAKmG,KACpBk/C;EAAOM,iBAAmB3lD,KAAK2lD,gBAE/BN,GAAOQ,QAAU7lD,KAAK6lD,OACtBR,GAAOS,SAAW9lD,KAAK8lD,QAEvBT,GAAOF,cAAgBnlD,IAEvB,OAAOqlD,GAMR1kD,QAAAC,eAAWsmD,EAAA3mD,UAAA,iBnEi2YJM,ImEj2YP,WAEC,MAAOb,MAAK8kD,OAAOp0C,eAAe6B,gBAAgBvS,KAAKyiC,gBnEk2YjD1hC,WAAY,KACZC,aAAc,MmE71YrBL,QAAAC,eAAWsmD,EAAA3mD,UAAA,enEm2YJM,ImEn2YP,WAEC,GAAIklD,GAAuB/lD,KAAK8kD,OAAOp0C,eAAeq5B,qBAAqB/pC,KAAK0lD,YAChFK,GAAYttC,WAEZ,OAAOstC,InEm2YDhlD,WAAY,KACZC,aAAc,MmE/hZPkmD,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAyKnC,OAAAL,IAtMyBjO,EAwMzBx5C,GAAoBJ,QAAX6nD,InE03YNtL,+BAA+Bx6C,YAAYomD,2DAA2D,SAASjpD,EAAQkB,EAAOJ,SAE3HooD,sDAAsD,SAASlpD,EAAQkB,EAAOJ,GoE7kZpF,GAAOqoD,GAAanpD,EAAc,qCAClC,IAAOopD,GAAeppD,EAAc,uCAGpC,IAAOwmB,GAAWxmB,EAAe,sCACjC,IAAO0+C,GAAM1+C,EAAgB,qCAE7B,IAAOqpD,GAAarpD,EAAc,6CAClC,IAAOspD,GAAetpD,EAAc,8CACpC,IAAOupD,GAAiBvpD,EAAa,gDAGrC,IAAMwpD,GAAsB,WAA5B,QAAMA,MAUSA,EAAAC,mBAAd,SAAiCtP,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgBX,QAAQhzB,GAAc,CACpE,IAAKgjC,EAAuBE,sBAC3BF,EAAuBG,4BAExB,OAAOH,GAAuBE,sBAG/B,GAAIvP,GAAmB,MAAQA,EAAgBX,QAAQkF,GAAS,CAC/D,IAAK8K,EAAuBI,4BAC3BJ,EAAuBK,kCAExB,OAAOL,GAAuBI,4BAG/B,IAAKJ,EAAuBM,wBAC3BN,EAAuBO,8BAExB,OAAOP,GAAuBM,wBAGjBN,GAAAQ,kBAAd,SAAgC7P,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,GAAIA,GAAmB,MAAQA,EAAgBX,QAAQkF,GAAS,CAC/D,IAAK8K,EAAuBS,oBAC3BT,EAAuBU,0BAExB,OAAOV,GAAuBS,oBAG/B,IAAKT,EAAuBW,gBAC3BX,EAAuBY,sBAExB,OAAOZ,GAAuBW,gBAGhBX,GAAAY,qBAAf,WAEC,IAAKZ,EAAuBa,sBAC3Bb,EAAuBc,8BAExBd,GAAuBW,gBAAkB,GAAIb,GAAgBE,EAAuBa,sBACpFb,GAAuBW,gBAAgBn+B,KAAO,iBAGhCw9B,GAAAU,yBAAf,WAEC,IAAKV,EAAuBe,wBAC3Bf,EAAuBgB,gCAExBhB,GAAuBS,oBAAsB,GAAIV,GAAkBC,EAAuBe,wBAC1Ff,GAAuBS,oBAAoBj+B,KAAO,qBAGpCw9B,GAAAgB,+BAAf,WAEC,IAAKhB,EAAuBa,sBAC3Bb,EAAuBc,8BAExB,IAAI3oD,GAAI,GAAIynD,GAAgBI,EAAuBa,sBAAsBxkD,MAEzE,KAAK,GAAIpF,GAAW,EAAGA,EAAI,EAAGA,IAC7BkB,EAAE8oD,KAAKhqD,EAAG+oD,EAAuBa,sBAElCb,GAAuBe,wBAA0B5oD,EAGnC6nD,GAAAc,6BAAf,WAEC,GAAI3oD,GAAkB,GAAIwnD,GAAc,EAAG,EAAG,MAAO,EpE8iZ/C,IoE3iZF1oD,GAAUkH,CACd,KAAKlH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAKkH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAMlH,EAAI,EAAI,CACtBkB,EAAE+oD,SAASjqD,EAAGkH,EAAG,YAKpB6hD,EAAuBa,sBAAwB1oD,EAGjC6nD,GAAAO,6BAAf,WAEC,IAAKP,EAAuBW,gBAC3BX,EAAuBY,sBAExBZ,GAAuBM,wBAA0B,GAAIT,GAAcG,EAAuBW,gBAC1FX,GAAuBM,wBAAwBa,OAAS,KACxDnB,GAAuBM,wBAAwBhd,OAAS,KACxD0c,GAAuBM,wBAAwB99B,KAAO,yBAGxCw9B,GAAAK,iCAAf,WAEC,IAAKL,EAAuBS,oBAC3BT,EAAuBU,0BAExBV,GAAuBI,4BAA8B,GAAIP,GAAcG,EAAuBS,oBAC9FT,GAAuBI,4BAA4Be,OAAS,KAC5DnB,GAAuBI,4BAA4B9c,OAAS,KAC5D0c,GAAuBI,4BAA4B59B,KAAO,6BAG5Cw9B,GAAAG,2BAAf,WAECH,EAAuBE,sBAAwB,GAAIL,EACnDG,GAAuBE,sBAAsB19B,KAAO,uBAEtD,OAAAw9B,KAEgCtoD,GAAAJ,QAAvB0oD,IpEoiZNoB,qCAAqC/nD,UAAUgoD,uCAAuChoD,UAAU0jB,sCAAsC,sCAAsCi4B,qCAAqC,qCAAqCsM,6CAA6C,6CAA6CC,8CAA8C,8CAA8CC,gDAAgD,kDAAkD/5B,kDAAkD,SAASjxB,EAAQkB,EAAOJ,GqE1qZ3lB,GAAMwoB,GAAkB,WAAxB,QAAMA,MAaSA,EAAA2hC,YAAd,SAA0BC,GAEzBzpD,KAAK0pD,aACL1pD,MAAK2pD,kBAAkB3pD,KAAK0pD,aAAaD,CACzC,OAAOzpD,MAAK0pD,YAGC7hC,GAAA+hC,cAAd,SAA4BvhD,SAEpBrI,MAAK2pD,kBAAkBthD,GAGjBwf,GAAAszB,kBAAd,WAEC,IAAI,GAAIxuB,KAAO3sB,MAAK2pD,kBAAkB,CACrC3pD,KAAK2pD,kBAAkBh9B,GAAKrtB,QAIhBuoB,GAAAkC,oBAAd,SAAkC8/B,EAAcC,GrE6pZzC,GqE1pZF9qD,GAAEgB,KAAK+pD,kBAAkBxqD,MAC7B,OAAMP,IAAI,CACTgB,KAAKgqD,YAAY3jD,KAAKrG,KAAK+pD,kBAAkB/qD,GAC7CgB,MAAKiqD,gBAAgB5jD,KAAKrG,KAAKkqD,sBAAsBlrD,IAEtDgB,KAAK+pD,oBACL/pD,MAAKkqD,wBACLlqD,MAAKgqD,YAAY3jD,KAAKwjD,EACtB7pD,MAAKiqD,gBAAgB5jD,KAAKyjD,GAGbjiC,GAAAmC,0BAAd,SAAwC6/B,EAAcC,GAErD9pD,KAAK+pD,kBAAkB1jD,KAAKwjD,EAC5B7pD,MAAKkqD,sBAAsB7jD,KAAKyjD,GAGnBjiC,GAAAqzB,cAAd,WAEC,GAAGl7C,KAAKgqD,YAAYzqD,QAAQ,GAAKS,KAAK+pD,kBAAkBxqD,QAAQ,EAC/D,MAED,IAAIP,GAAEgB,KAAK+pD,kBAAkBxqD,MAC7B,OAAMP,IAAI,CACTgB,KAAKgqD,YAAY3jD,KAAKrG,KAAK+pD,kBAAkB/qD,GAC7CgB,MAAKiqD,gBAAgB5jD,KAAKrG,KAAKkqD,sBAAsBlrD,IAEtDgB,KAAK+pD,oBACL/pD,MAAKkqD,wBAEL,IAAIL,EACJ,KAAK7qD,EAAI,EAAGA,EAAGgB,KAAKgqD,YAAYzqD,OAAQP,IAAK,CAE5C6qD,EAAG7pD,KAAKgqD,YAAYhrD,EACpB,IAAG6qD,EAAGjuC,OAAO,KAAM,CAClB,GAAIuuC,GAASN,EAAGp1C,QAAUo1C,EAAGp1C,QAAUo1C,CAEtC7pD,MAAKiqD,gBAAgBjrD,GAAGM,KAAK6qD,IAUhCnqD,KAAKgqD,cACLhqD,MAAKiqD,mBAhFSpiC,GAAAmiC,cACAniC,GAAAoiC,kBAGApiC,GAAAkiC,oBACAliC,GAAAqiC,wBAEAriC,GAAA8hC,kBAA2B,GAAIhpD,OAE/BknB,GAAA6hC,YAAmB,CAyEnC,OAAA7hC,KACApoB,GAA4BJ,QAAnBwoB,OrEypZH8d,4CAA4C,SAASpnC,EAAQkB,EAAOJ,GsEjvZ1E,GAAO2L,GAAQzM,EAAgB,gCAK/B,IAAO6rD,GAAc7rD,EAAc,uCACnC,IAAOspB,GAAkBtpB,EAAa,iDtEmvZtC,IsE7uZMgiC,GAAY,WAqCjB,QArCKA,KAAN,GAAAtE,GAAAj8B,IAISA,MAAAqqD,YAA0B,GAAI7kD,MAM9BxF,MAAAsqD,YAAuB,GAAIt/C,EAE3BhL,MAAAwL,cAAsC,GAAIhG,MAI1CxF,MAAAuqD,SAA0B,GAAIH,GAAeA,EAAexP,SAC5D56C,MAAAwqD,YAA6B,GAAIJ,GAAeA,EAAenE,MAC/DjmD,MAAAyqD,UAA2B,GAAIL,GAAeA,EAAe1P,UAC7D16C,MAAA0qD,WAA4B,GAAIN,GAAeA,EAAezP,WAC9D36C,MAAA2qD,WAA4B,GAAIP,GAAeA,EAAepE,WAC9DhmD,MAAA4qD,WAA4B,GAAIR,GAAeA,EAAe3P,WAC9Dz6C,MAAA6qD,YAA6B,GAAIT,GAAeA,EAAejE,YAC/DnmD,MAAA8qD,kBAAmC,GAAIV,GAAeA,EAAelE,aAgB5ElmD,MAAK+qD,gBAAkB,SAAChsC,GAAqB,MAAAkd,GAAK+uB,QAAQjsC,GAC1D/e,MAAKirD,sBAAwB,SAAClsC,GAAqB,MAAAkd,GAAKivB,cAAcnsC,GACtE/e,MAAKmrD,oBAAsB,SAACpsC,GAAqB,MAAAkd,GAAKmvB,YAAYrsC,GAClE/e,MAAKqrD,oBAAsB,SAACtsC,GAAqB,MAAAkd,GAAKqvB,YAAYvsC,GAClE/e,MAAKurD,kBAAoB,SAACxsC,GAAqB,MAAAkd,GAAKuvB,UAAUzsC,GAC9D/e,MAAKyrD,qBAAuB,SAAC1sC,GAAqB,MAAAkd,GAAKyvB,aAAa3sC,GACpE/e,MAAK2rD,oBAAsB,SAAC5sC,GAAqB,MAAAkd,GAAK2vB,YAAY7sC,GAClE/e,MAAK6rD,mBAAqB,SAAC9sC,GAAqB,MAAAkd,GAAK6vB,WAAW/sC,IAGnDwhB,EAAArD,YAAd,WAEC,GAAIl9B,KAAK+rD,UACR,MAAO/rD,MAAK+rD,SAEb,OAAQ/rD,MAAK+rD,UAAY,GAAIxrB,GAGvBA,GAAAhgC,UAAAikC,gBAAP,SAAuBN,GAGtB,GAAIlkC,KAAKqkC,mBAAqBrkC,KAAKgsD,yBAA0B,CAC5D,GAAIhsD,KAAKgsD,yBACRhsD,KAAK0b,cAAc1b,KAAKyqD,UAAWzqD,KAAKisD,gBAAiBjsD,KAAKgsD,yBAE/D,IAAIhsD,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAK4qD,WAAY5qD,KAAKisD,iBAI1C,GAAI/nB,GAAkBlkC,KAAKqkC,kBAC3BrkC,KAAK0b,cAAe1b,KAAK2qD,WAAY3qD,KAAKisD,gBAE3C,IAAIltC,EACJ,IAAImtC,EtEitZE,IsE9sZF18C,GAAaxP,KAAKwL,cAAcjM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAAG,CACpC+f,EAAQ/e,KAAKwL,cAAcxM,EAC3BktD,GAAantC,EAAM+lC,MAGnB,OAAOoH,EAAY,CAClB,GAAIA,EAAWluC,mBACdkuC,EAAW76C,cAAc0N,EAE1BmtC,GAAaA,EAAWv3C,OAIzBkT,EAAmBqzB,gBAKpBl7C,KAAKwL,cAAcjM,OAAS,CAE5BS,MAAKgsD,yBAA2BhsD,KAAKqkC,iBAErCrkC,MAAKokC,cAAgB,MAmBf7D,GAAAhgC,UAAA0hC,aAAP,SAAoBujB,GAEnBA,EAAK2G,YAAY74C,iBAAiB,QAAStT,KAAK+qD,gBAChDvF,GAAK2G,YAAY74C,iBAAiB,WAAYtT,KAAKirD,sBACnDzF,GAAK2G,YAAY74C,iBAAiB,aAActT,KAAKmrD,oBACrD3F,GAAK2G,YAAY74C,iBAAiB,YAAatT,KAAKmrD,oBACpD3F,GAAK2G,YAAY74C,iBAAiB,YAAatT,KAAKqrD,oBACpD7F,GAAK2G,YAAY74C,iBAAiB,UAAWtT,KAAKurD,kBAClD/F,GAAK2G,YAAY74C,iBAAiB,WAAYtT,KAAKurD,kBACnD/F,GAAK2G,YAAY74C,iBAAiB,aAActT,KAAKyrD,qBACrDjG,GAAK2G,YAAY74C,iBAAiB,YAAatT,KAAK2rD,oBACpDnG,GAAK2G,YAAY74C,iBAAiB,WAAYtT,KAAK6rD,mBAEnD7rD,MAAKqqD,YAAYhkD,KAAKm/C,GAGhBjlB,GAAAhgC,UAAAmkC,eAAP,SAAsB8gB,GAErBA,EAAK2G,YAAY3xC,oBAAoB,QAASxa,KAAK+qD,gBACnDvF,GAAK2G,YAAY3xC,oBAAoB,WAAYxa,KAAKirD,sBACtDzF,GAAK2G,YAAY3xC,oBAAoB,aAAcxa,KAAKmrD,oBACxD3F,GAAK2G,YAAY3xC,oBAAoB,YAAaxa,KAAKmrD,oBACvD3F,GAAK2G,YAAY3xC,oBAAoB,YAAaxa,KAAKqrD,oBACvD7F,GAAK2G,YAAY3xC,oBAAoB,WAAYxa,KAAKurD,kBACtD/F,GAAK2G,YAAY3xC,oBAAoB,UAAWxa,KAAKurD,kBACrD/F,GAAK2G,YAAY3xC,oBAAoB,aAAcxa,KAAKyrD,qBACxDjG,GAAK2G,YAAY3xC,oBAAoB,YAAaxa,KAAK2rD,oBACvDnG,GAAK2G,YAAY3xC,oBAAoB,WAAYxa,KAAK6rD,mBAEtD7rD,MAAKqqD,YAAY+B,MAAMpsD,KAAKqqD,YAAYrtC,QAAQwoC,GAAO,GAOhDjlB,GAAAhgC,UAAAmb,cAAR,SAAsBqD,EAAsBstC,EAAwBC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGnE,GAAID,EAAa,CAChBttC,EAAM8mC,QAAUwG,EAAYxG,OAC5B9mC,GAAMwtC,OAASF,EAAYE,MAC3BxtC,GAAM+mC,SAAWuG,EAAYvG,QAC7B/mC,GAAMumC,QAAU+G,EAAYG,OAC5BztC,GAAMwmC,QAAU8G,EAAYI,QAG7B,GAAIH,GAAY,KACfA,EAAWtsD,KAAKqkC,iBAGjB,IAAIioB,EAAU,CAEbvtC,EAAM+lC,OAASwH,EAAS38B,aACxB5Q,GAAM25B,gBAAkB4T,EAAS5T,eAEjC35B,GAAM0mC,GAAK6G,EAAS7G,EAEpB1mC,GAAM0jB,cAAgB6pB,EAAS7pB,cAAe6pB,EAAS7pB,cAAch6B,QAAU,IAE/EsW,GAAM2mC,YAAc4G,EAAS5G,YAAa4G,EAAS5G,YAAYj9C,QAAU,IAEzEsW,GAAM5Y,MAAQmmD,EAASnmD,UACjB,CAEN4Y,EAAM0mC,GAAK,IACX1mC,GAAM+lC,OAAS,IACf/lC,GAAM0jB,cAAgBziC,KAAKsqD,WAC3BvrC,GAAM2mC,YAAc1lD,KAAKsqD,WACzBvrC,GAAM5Y,MAAQ,CACd4Y,GAAM4mC,iBAAmB,EAI1B3lD,KAAKwL,cAAcnF,KAAK0Y,GAOjBwhB,GAAAhgC,UAAA+qD,YAAR,SAAoBvsC,GAEnB/e,KAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAK2qD,WAAY3qD,KAAKisD,gBAAkBltC,GAGrDwhB,GAAAhgC,UAAAurD,WAAR,SAAmB/sC,GAElB/e,KAAKmkC,YAAc,IAEnBnkC,MAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAKyqD,UAAW1rC,GAG7BwhB,GAAAhgC,UAAAqrD,YAAR,SAAoB7sC,GAEnB/e,KAAKmkC,YAA+BplB,EAAMlJ,MAE1C7V,MAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAe1b,KAAK4qD,WAAY7rC,GAG/BwhB,GAAAhgC,UAAAyqD,QAAR,SAAgBjsC,GAEf/e,KAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAKwqD,YAAazrC,GAG/BwhB,GAAAhgC,UAAA2qD,cAAR,SAAsBnsC,GAErB/e,KAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAK8qD,kBAAmB/rC,GAGrCwhB,GAAAhgC,UAAA6qD,YAAR,SAAoBrsC,GAEnBA,EAAM4tC,gBAEN3sD,MAAKmkC,YAA+BplB,EAAMlJ,MAE1C7V,MAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAK0qD,WAAY3rC,GAG9BwhB,GAAAhgC,UAAAirD,UAAR,SAAkBzsC,GAEjBA,EAAM4tC,gBAEN3sD,MAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAKuqD,SAAWxrC,GAG7BwhB,GAAAhgC,UAAAmrD,aAAR,SAAqB3sC,GAEpB/e,KAAK0sD,gBAAgB3tC,EAErB,IAAI/e,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAK6qD,YAAa9rC,GAI/BwhB,GAAAhgC,UAAAmsD,gBAAR,SAAwB3tC,GAEvB,GAAI/e,KAAKokC,cACR,MAED,IAAIohB,EACJ,IAAIoH,EACJ,IAAIC,GAAiB9tC,EAAMytC,SAAW,KAAOztC,EAAMytC,QAAUztC,EAAM+tC,eAAe,GAAGN,OACrF,IAAIO,GAAiBhuC,EAAM0tC,SAAW,KAAO1tC,EAAM0tC,QAAU1tC,EAAM+tC,eAAe,GAAGL,OACrF,IAAIj9C,GAAaxP,KAAKqqD,YAAY9qD,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAAK,CACpCwmD,EAAOxlD,KAAKqqD,YAAYrrD,EACxB4tD,GAASpH,EAAK2G,YAAYa,uBAC1B,IAAIH,EAASD,EAAOnnD,MAAQonD,EAASD,EAAOlnD,OAASqnD,EAASH,EAAOhnD,KAAOmnD,EAASH,EAAO/mD,OAAQ,CACnG2/C,EAAKtjB,SAAW,IAChBsjB,GAAKrjB,SAAW,SACV,CACNqjB,EAAKtjB,SAAW2qB,EAASD,EAAOnnD,IAChC+/C,GAAKrjB,SAAW4qB,EAASH,EAAOhnD,GAChC4/C,GAAKrgB,gBAEL,IAAIqgB,EAAKngB,aAAerlC,KAAKqkC,kBAC5B,OAIHrkC,KAAKokC,cAAgB,KAEvB,OAAA7D,KAEA9gC,GAAsBJ,QAAbkhC,ItE0pZNzgB,gCAAgC1e,UAAUy6C,uCAAuC,uCAAuCrsB,iDAAiD,mDAAmDy9B,4CAA4C,SAAS1uD,EAAQkB,EAAOJ,GuEt9ZnS,GAAO2L,GAAQzM,EAAgB,gCAK/B,IAAO2uD,GAAc3uD,EAAc,uCAEnC,IAAM4uD,GAAY,WA6BjB,QA7BKA,KAAN,GAAAlxB,GAAAj8B,IAISA,MAAAotD,aAAuB,IACvBptD,MAAAsqD,YAAuB,GAAIt/C,EAO3BhL,MAAAwL,cAAsC,GAAIhG,MAO1CxF,MAAAqtD,UAA2B,GAAIH,GAAeA,EAAe5F,UAC7DtnD,MAAAstD,YAA6B,GAAIJ,GAAeA,EAAe9F,YAC/DpnD,MAAAutD,WAA4B,GAAIL,GAAeA,EAAe7F,WAC9DrnD,MAAAwtD,UAA2B,GAAIN,GAAeA,EAAe/F,UAC7DnnD,MAAAytD,WAA4B,GAAIP,GAAeA,EAAe3F,WAQrEvnD,MAAK0tD,aAAe,GAAIloD,MACxBxF,MAAK2tD,kBAAoB,GAAIhtD,OAC7BwsD,GAAaS,6BAA+B,GAAIjtD,OAChDwsD,GAAaU,oCAAsC,GAAIltD,OAEvDX,MAAK8tD,qBAAuB,SAAC/uC,GAAqB,MAAAkd,GAAK8xB,aAAahvC,GACpE/e,MAAKguD,oBAAsB,SAACjvC,GAAqB,MAAAkd,GAAKgyB,YAAYlvC,GAClE/e,MAAKkuD,mBAAqB,SAACnvC,GAAqB,MAAAkd,GAAKkyB,WAAWpvC,IAGnDouC,EAAAjwB,YAAd,WAEC,GAAIl9B,KAAK+rD,UACR,MAAO/rD,MAAK+rD,SAEb,OAAQ/rD,MAAK+rD,UAAY,GAAIoB,GAOvBA,GAAA5sD,UAAA4kC,eAAP,SAAsBipB,IAWfjB,GAAA5sD,UAAA8tD,gBAAP,SAAuBD,GAEtB,GAAIpvD,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKsuD,kBAAmBtvD,EAAG,CAC1CgB,KAAKuuD,YAAcvuD,KAAK0tD,aAAa1uD,EAErCgB,MAAKqkC,kBAAoB8oB,EAAaS,6BAA8B5tD,KAAKuuD,YAAYlmD,GACrFrI,MAAKgsD,yBAA2BmB,EAAaU,oCAAqC7tD,KAAKuuD,YAAYlmD,GACnG,IAAIrI,KAAKqkC,mBAAqBrkC,KAAKgsD,yBAA0B,CAC5D,GAAIhsD,KAAKgsD,yBACRhsD,KAAK0b,cAAc1b,KAAKqtD,UAAWrtD,KAAKwuD,gBAAiBxuD,KAAKgsD,yBAA0BhsD,KAAKuuD,YAC9F,IAAIvuD,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAKytD,WAAYztD,KAAKwuD,gBAAiBxuD,KAAKqkC,kBAAmBrkC,KAAKuuD,aAGzF,GAAIH,GAAkBpuD,KAAKqkC,kBAC1BrkC,KAAK0b,cAAc1b,KAAKutD,WAAYvtD,KAAKwuD,gBAAiBxuD,KAAKqkC,kBAAmBrkC,KAAKuuD,aAGzF,GAAIxvC,EACJ,IAAImtC,EvEs7ZE,IuEn7ZF18C,GAAaxP,KAAKwL,cAAcjM,MACpC,KAAKP,EAAI,EAAGA,EAAIwQ,IAAOxQ,EAAG,CAEzB+f,EAAQ/e,KAAKwL,cAAcxM,EAC3BktD,GAAantC,EAAM+lC,MAEnB,OAAOoH,IAAeA,EAAWluC,mBAChCkuC,EAAaA,EAAWv3C,MAEzB,IAAIu3C,EACHA,EAAW76C,cAAc0N,GAE3B/e,KAAKwL,cAAcjM,OAAS,CAE5BS,MAAKotD,aAAe,KAEpB,KAAKpuD,EAAI,EAAGA,EAAIgB,KAAKsuD,kBAAmBtvD,EAAG,CAC1CgB,KAAKuuD,YAAcvuD,KAAK0tD,aAAc1uD,EACtCmuD,GAAaU,oCAAqC7tD,KAAKuuD,YAAYlmD,IAAO8kD,EAAaS,6BAA8B5tD,KAAKuuD,YAAYlmD,KAIjI8kD,GAAA5sD,UAAA0hC,aAAP,SAAoBujB,GAEnBA,EAAK2G,YAAY74C,iBAAiB,aAActT,KAAK8tD,qBACrDtI,GAAK2G,YAAY74C,iBAAiB,YAAatT,KAAKguD,oBACpDxI,GAAK2G,YAAY74C,iBAAiB,WAAYtT,KAAKkuD,oBAG7Cf,GAAA5sD,UAAAmkC,eAAP,SAAsB8gB,GAErBA,EAAK2G,YAAY3xC,oBAAoB,aAAcxa,KAAK8tD,qBACxDtI,GAAK2G,YAAY3xC,oBAAoB,YAAaxa,KAAKguD,oBACvDxI,GAAK2G,YAAY3xC,oBAAoB,WAAYxa,KAAKkuD,oBAO/Cf,GAAA5sD,UAAAmb,cAAR,SAAsBqD,EAAsBstC,EAAwBC,EAA6BmC,GAGhG1vC,EAAM8mC,QAAUwG,EAAYxG,OAC5B9mC,GAAMwtC,OAASF,EAAYE,MAC3BxtC,GAAM+mC,SAAWuG,EAAYvG,QAC7B/mC,GAAMumC,QAAUmJ,EAAMxrD,CACtB8b,GAAMwmC,QAAUkJ,EAAMvrD,CACtB6b,GAAM2vC,aAAeD,EAAMpmD,EAG3B,IAAIikD,EAAU,CAEbvtC,EAAM+lC,OAASwH,EAAS38B,aACxB5Q,GAAM25B,gBAAkB4T,EAAS5T,eAEjC35B,GAAM0mC,GAAK6G,EAAS7G,EAEpB1mC,GAAM0jB,cAAgB6pB,EAAS7pB,cAAe6pB,EAAS7pB,cAAch6B,QAAU,IAE/EsW,GAAM2mC,YAAc4G,EAAS5G,YAAa4G,EAAS5G,YAAYj9C,QAAU,IAEzEsW,GAAM5Y,MAAQmmD,EAASnmD,KAEvB4Y,GAAM4mC,iBAAmB2G,EAASnmD,UAE5B,CAEN4Y,EAAM0mC,GAAK,IACX1mC,GAAM+lC,OAAS,IACf/lC,GAAM0jB,cAAgBziC,KAAKsqD,WAC3BvrC,GAAM2mC,YAAc1lD,KAAKsqD,WACzBvrC,GAAM5Y,MAAQ,CACd4Y,GAAM4mC,iBAAmB,EAI1B3lD,KAAKwL,cAAcnF,KAAK0Y,GAOjBouC,GAAA5sD,UAAAwtD,aAAR,SAAqBhvC,GAGpB,GAAI0vC,GAAmB,GAAI/+B,EAI3B1vB,MAAKsuD,iBACLtuD,MAAK0tD,aAAarnD,KAAKooD,EACvBzuD,MAAK2tD,kBAAmBc,EAAMpmD,IAAOomD,CAIrCzuD,MAAKqkC,kBAAoB8oB,EAAaS,6BAA8Ba,EAAMpmD,GAC1E,IAAIrI,KAAKqkC,kBACRrkC,KAAK0b,cAAc1b,KAAKstD,YAAavuC,EAAO/e,KAAKqkC,kBAAmBoqB,EAErEzuD,MAAKotD,aAAe,KAGbD,GAAA5sD,UAAA0tD,YAAR,SAAoBlvC,IAkBZouC,GAAA5sD,UAAA4tD,WAAR,SAAmBpvC,IAiBpB,OAAAouC,KAKA,IAAMz9B,GAAU,WAAhB,QAAMA,MAKN,MAAAA,KAPAjwB,GAkF+GJ,QAlFtG8tD,IvE+5ZNrtC,gCAAgC1e,UAAU6lD,uCAAuC,yCAAyCoC,8CAA8C,SAAS9qD,EAAQkB,EAAOJ,GACnM,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEhpatB,IAAOsuD,GAAOpwD,EAAgB,+BAE9B,IAAOqwD,GAAYrwD,EAAe,4CAElC,IAAOspD,GAAetpD,EAAc,8CACpC,IAAOswD,GAAWtwD,EAAe,0CxEqpajC,IwE/oaMqpD,GAAa,SAAAlnD,GAASX,EAAtB6nD,EAAalnD,EAyBlB,SAzBKknD,GAyBOkH,EAAyBC,EAAwB3jB,EAAwB8d,GAAzE,GAAA4F,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAA3jB,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAA8d,QAAA,GAAsB,CAAtBA,EAAA,MAEpFxoD,EAAApB,KAAAU,KAvBUA,MAAAgvD,eAAyB,KAyBnC,IAAIF,YAAwBH,GAC3BG,EAAe,GAAIjH,GAAgBiH,EAEpC,IAAIA,YAAwBD,GAAa,CACxC7uD,KAAKivD,QAAwBH,CAE7B9uD,MAAKqrC,OAAU0jB,GAAe,KAAO,KAAO,KAC5C/uD,MAAKorC,OAASA,CACdprC,MAAKkpD,OAASA,MACR,CACNlpD,KAAKurC,MAAQujB,EAAc/qD,OAAO+qD,GAAgB,QAClD9uD,MAAKwrC,MAASujB,GAAe,KAAO,EAAIhrD,OAAOgrD,IA/BjDpuD,OAAAC,eAAWgnD,EAAArnD,UAAA,axEgqaJM,IwEhqaP,WAEC,MAAO+mD,GAAc1mD,WxEiqafH,WAAY,KACZC,aAAc,MwE/nalBL,QAAAC,eAAWgnD,EAAArnD,UAAA,iBxEqoaPM,IwEroaJ,WAEI,MAAOb,MAAKgvD,gBxEsoaZrsD,IwEpoaJ,SAAyBC,GAErB,GAAI5C,KAAKgvD,gBAAkBpsD,EACvB,MACJ5C,MAAKgvD,eAAiBpsD,CACtB5C,MAAK49C,sBxEqoaL78C,WAAY,KACZC,aAAc,MwE3raP4mD,GAAA1mD,UAAmB,2BAuDlC,OAAA0mD,IAzD4BgH,EA2D5BnvD,GAAuBJ,QAAduoD,IxEyoaNsH,+BAA+B9tD,UAAU+tD,4CAA4C,4CAA4C7F,8CAA8C,8CAA8C8F,0CAA0C,4CAA4CC,6CAA6C,SAAS9wD,EAAQkB,EAAOJ,GAY3X,GyEhtaMiwD,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAj0C,IAAa,CAC5B,OAAAi0C,KAEsB7vD,GAAAJ,QAAbiwD,OzEitaHH,6CAA6C,SAAS5wD,EAAQkB,EAAOJ,GAC3E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0EtvatB,IAAO28C,GAASz+C,EAAe,iCAC/B,IAAOmM,GAAcnM,EAAc,sCAInC,IAAO06C,GAAK16C,EAAgB,+BAE5B,IAAOiC,GAASjC,EAAe,oCAQ/B,IAAO2xC,GAAa3xC,EAAc,0CAClC,IAAO8nD,GAAoB9nD,EAAa,iDAGxC,IAAOspD,GAAetpD,EAAc,8C1EuvapC,I0EzuaMqwD,GAAY,SAAAluD,GAASX,EAArB6uD,EAAYluD,EAqEjB,SArEKkuD,KAAN,GAAA3yB,GAAAj8B,IAuEEU,GAAApB,KAAAU,KApEOA,MAAAyvD,oBAA8B,KAE9BzvD,MAAA0vD,eAAyB,KACzB1vD,MAAA2vD,OAAgB,CAGhB3vD,MAAAq9C,SAA0B,GAAI73C,MAE/BxF,MAAAm9C,iBAA0B,CAC1Bn9C,MAAA4vD,aAAuB,KACtB5vD,MAAA6vD,oBAA8B,IAC9B7vD,MAAA8vD,sBAA+B,CAC/B9vD,MAAA+vD,qBAA8B,CAsB/B/vD,MAAAgwD,aAAsB,CAEtBhwD,MAAAiwD,sBAA+B,CAE9BjwD,MAAAkwD,WAAqB,KAUtBlwD,MAAAo9C,YAAqBJ,EAAUhO,MAE9BhvC,MAAAs9C,QAAkB,IAClBt9C,MAAAu9C,QAAkB,IAClBv9C,MAAAmwD,QAAkB,KAClBnwD,MAAA6hB,OAAgB,QAKjB7hB,MAAAowD,SAAkB,CAClBpwD,MAAAqwD,QAAiB,CAWvBrwD,MAAKgwD,aAAejsD,OAAO/D,KAAKqI,GAEhCrI,MAAKw9C,QAAU,GAAIh4C,MAEnBxF,MAAKswD,uBAAyB,SAACvxC,GAAgB,MAAAkd,GAAKs0B,eAAexxC,GAEnE/e,MAAKwwD,mBAAqB,MAM3B7vD,OAAAC,eAAWguD,EAAAruD,UAAA,S1E6raJM,I0E7raP,WAEC,MAAOb,MAAK2vD,Q1E8raNhtD,I0E3raP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAK2vD,QAAU/sD,EAClB,MAED5C,MAAK2vD,OAAS/sD,CAEd,IAAI5C,KAAK8wC,iBAAmB,KAC3B9wC,KAAK8wC,gBAAkB,GAAIpmC,EAE5B1K,MAAK8wC,gBAAgBzhC,gBAAkBzM,CAEvC5C,MAAK49C,sB1EuraC78C,WAAY,KACZC,aAAc,M0ElrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,kB1EwraJM,I0ExraP,WAEC,MAAOb,MAAK8wC,iB1EyraNnuC,I0EtraP,SAA0BC,GAEzB5C,KAAK8wC,gBAAkBluC,CAEvB5C,MAAK49C,sB1EsraC78C,WAAY,KACZC,aAAc,M0EhrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,iB1EuraJM,I0EvraP,WAEC,MAAOb,MAAK0vD,gB1EwraN/sD,I0ErraP,SAAyBC,GAExB,GAAI5C,KAAK0vD,gBAAkB9sD,EAC1B,MAED5C,MAAK0vD,eAAiB9sD,CAEtB5C,MAAK49C,sB1EoraC78C,WAAY,KACZC,aAAc,M0ElrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,a1EqraJM,I0ErraP,WAEC,MAAOb,MAAKywD,Y1EsraN1vD,WAAY,KACZC,aAAc,M0EjrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,U1EuraJM,I0EvraP,WAEC,MAAOb,MAAKowD,U1EwraNrvD,WAAY,KACZC,aAAc,M0EnrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,gB1EyraJM,I0EzraP,WAEC,MAAOb,MAAK29C,e1E0raN58C,WAAY,KACZC,aAAc,M0EjrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,e1E0raJM,I0E1raP,WAEC,MAAOb,MAAK09C,e1E2raN/6C,I0ExraP,SAAuBC,GAEtB,GAAI5C,KAAK09C,eAAiB96C,EACzB,MAED,IAAI5C,KAAK09C,cACR19C,KAAK09C,cAAcljC,oBAAoBy+B,EAAMyX,OAAQ1wD,KAAKswD,uBAE3DtwD,MAAK09C,cAAgB96C,CAErB,IAAI5C,KAAK09C,cACR19C,KAAK09C,cAAcpqC,iBAAiB2lC,EAAMyX,OAAQ1wD,KAAKswD,uBAExDtwD,MAAK49C,sB1EqraC78C,WAAY,KACZC,aAAc,M0EhrarBL,QAAAC,eAAWguD,EAAAruD,UAAA,U1EsraJM,I0EtraP,WAEC,MAAOb,MAAKs9C,S1EuraN36C,I0EpraP,SAAkBC,GAEjB,GAAI5C,KAAKs9C,SAAW16C,EACnB,MAED5C,MAAKs9C,QAAU16C,CAEf5C,MAAK2wD,sB1EmraC5vD,WAAY,KACZC,aAAc,M0E9qarBL,QAAAC,eAAWguD,EAAAruD,UAAA,U1EoraJM,I0EpraP,WAEC,MAAOb,MAAKu9C,S1EqraN56C,I0ElraP,SAAkBC,GAEjB,GAAI5C,KAAKu9C,SAAW36C,EACnB,MAED5C,MAAKu9C,QAAU36C,CAEf5C,MAAK2wD,sB1EiraC5vD,WAAY,KACZC,aAAc,M0E3qarBL,QAAAC,eAAWguD,EAAAruD,UAAA,U1EkraJM,I0ElraP,WAEC,MAAOb,MAAKmwD,S1EmraNxtD,I0EhraP,SAAkBC,GAEjB,GAAI5C,KAAKmwD,SAAWvtD,EACnB,MAED5C,MAAKmwD,QAAUvtD,CAEf5C,MAAK2wD,sB1E+qaC5vD,WAAY,KACZC,aAAc,M0E1qarBL,QAAAC,eAAWguD,EAAAruD,UAAA,S1EgraJM,I0EhraP,WAEC,MAAOb,MAAK6hB,Q1EiraNlf,I0E9qaP,SAAiBC,GAEhB,GAAI5C,KAAK6hB,QAAUjf,EAClB,MAED5C,MAAK6hB,OAASjf,CAEd5C,MAAK2wD,sB1E6qaC5vD,WAAY,KACZC,aAAc,M0ExqarBL,QAAAC,eAAWguD,EAAAruD,UAAA,W1E8qaJM,I0E9qaP,WAEC,MAAOb,MAAK4wD,W1E+qaNjuD,I0E5qaP,SAAmBC,GAElB,GAAI5C,KAAK4wD,WAAahuD,EACrB,MAED5C,MAAK4wD,UAAYhuD,CAEjB5C,MAAK2wD,oBAEL,IAAI3wD,KAAK4wD,UAAU7Y,QAAQ8P,GAAkB,CAC5C,GAAIgJ,GAAoD7wD,KAAK4wD,SAC7D5wD,MAAKywD,WAAaI,EAAgBC,UAAUngB,SAE5C3wC,MAAKowD,SAAWS,EAAgBC,UAAUC,KAAK1sD,MAC/CrE,MAAKqwD,QAAUQ,EAAgBC,UAAUC,KAAK3sD,UACxC,CACNpE,KAAKywD,WAAa,IAClBzwD,MAAKowD,SAAW,CAChBpwD,MAAKqwD,QAAU,EAIhBrwD,KAAKgxD,uB1EwqaCjwD,WAAY,KACZC,aAAc,M0EnqarBL,QAAAC,eAAWguD,EAAAruD,UAAA,c1EyqaJM,I0EzqaP,WAEC,MAAOb,MAAK4vD,c1E0qaNjtD,I0EvqaP,SAAsBC,GAErB,GAAI5C,KAAK4vD,cAAgBhtD,EACxB,MAED5C,MAAK4vD,aAAehtD,CAEpB5C,MAAK2wD,sB1EsqaC5vD,WAAY,KACZC,aAAc,M0EjqarBL,QAAAC,eAAWguD,EAAAruD,UAAA,qB1EuqaJM,I0EvqaP,WAEC,MAAOb,MAAKyvD,qB1EwqaN9sD,I0ErqaP,SAA6BC,GAE5B,GAAI5C,KAAKyvD,qBAAuB7sD,EAC/B,MACD5C,MAAKyvD,oBAAsB7sD,CAC3B5C,MAAK2wD,sB1EsqaC5vD,WAAY,KACZC,aAAc,M0EhqarBL,QAAAC,eAAWguD,EAAAruD,UAAA,sB1EuqaJM,I0EvqaP,WAEC,MAAOb,MAAK6vD,qB1EwqaNltD,I0ErqaP,SAA8BC,GAE7B,GAAI5C,KAAK6vD,qBAAuBjtD,EAC/B,MAED5C,MAAK6vD,oBAAsBjtD,CAE3B5C,MAAK2wD,sB1EoqaC5vD,WAAY,KACZC,aAAc,M0E5parBL,QAAAC,eAAWguD,EAAAruD,UAAA,uB1EqqaJM,I0ErqaP,WAEC,MAAOb,MAAK+vD,sB1EsqaNptD,I0EnqaP,SAA+BC,GAE9B,GAAI5C,KAAK+vD,sBAAwBntD,EAChC,MAED5C,MAAK+vD,qBAAuBntD,CAE5B5C,MAAK2wD,sB1EkqaC5vD,WAAY,KACZC,aAAc,M0E1parBL,QAAAC,eAAWguD,EAAAruD,UAAA,wB1EmqaJM,I0EnqaP,WAEC,MAAOb,MAAK8vD,uB1EoqaNntD,I0EjqaP,SAAgCC,GAE/B,GAAI5C,KAAK8vD,uBAAyBltD,EACjC,MAED5C,MAAK8vD,sBAAwBltD,CAE7B5C,MAAK2wD,sB1EgqaC5vD,WAAY,KACZC,aAAc,M0E1pad4tD,GAAAruD,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAIwQ,EAEJA,GAAMxP,KAAKq9C,SAAS99C,MACpB,KAAKP,EAAI,EAAGA,EAAIwQ,EAAKxQ,IACpBgB,KAAKq9C,SAASr+C,GAAGiC,SAElBjB,MAAKq9C,SAAW,GAAI73C,OAMrB7E,QAAAC,eAAWguD,EAAAruD,UAAA,a1E6paJM,I0E7paP,WAEC,MAAOb,MAAKkwD,Y1E8paNvtD,I0E3paP,SAAqBC,GAEpB,GAAI5C,KAAKkwD,WAAattD,EACrB,MAED5C,MAAKkwD,WAAattD,CAElB5C,MAAK2wD,sB1E0paC5vD,WAAY,KACZC,aAAc,M0E9oarBL,QAAAC,eAAWguD,EAAAruD,UAAA,a1E2paJM,I0E3paP,WAEC,MAAOb,MAAKo9C,a1E4paNz6C,I0EzpaP,SAAqBC,GAEpB,GAAI5C,KAAKo9C,aAAex6C,EACvB,MAED5C,MAAKo9C,YAAcx6C,CAEnB5C,MAAK49C,sB1EwpaC78C,WAAY,KACZC,aAAc,M0EjparBL,QAAAC,eAAWguD,EAAAruD,UAAA,sB1EypaJM,I0EzpaP,WAEC,MAAOb,MAAKixD,qB1E0paNtuD,I0EvpaP,SAA8BC,GAE7B,GAAI5C,KAAKixD,qBAAuBruD,EAC/B,MAED5C,MAAKixD,oBAAsBruD,CAE3B5C,MAAK2wD,sB1EspaC5vD,WAAY,KACZC,aAAc,M0E/oarBL,QAAAC,eAAWguD,EAAAruD,UAAA,kB1EupaJM,I0EvpaP,WAEC,MAAOb,MAAKm9C,kB1EwpaNx6C,I0ErpaP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAKm9C,kBAAoBv6C,EAC5B,MAED5C,MAAKm9C,iBAAmBv6C,CAExB5C,MAAK2wD,sB1EmpaC5vD,WAAY,KACZC,aAAc,M0E9oarBL,QAAAC,eAAWguD,EAAAruD,UAAA,S1EopaJM,I0EppaP,WAEC,MAAOb,MAAKqwD,S1EqpaNtvD,WAAY,KACZC,aAAc,M0Evoad4tD,GAAAruD,UAAA+mB,UAAP,SAAiB4pC,GAEhBlxD,KAAKw9C,QAAQn3C,KAAK6qD,EAElB,IAAIC,EACJ,IAAIhqC,GAAiC+pC,EAAM/pC,QAE3C,IAAIA,EACHgqC,EAA+BhqC,EAASgqC,YAEzC,IAAID,EAAM/pC,SAAU,CACnB,GAAInnB,KAAK29C,eAAiBwT,GAAgBnxD,KAAK29C,cAAe,CAC7D,KAAM,IAAIz+C,OAAM,iGACV,CACN,GAAIc,KAAK29C,eAAiBwT,EAAc,CAEvCnxD,KAAK29C,cAAgBwT,CAErBnxD,MAAKoxD,wBAKRF,EAAM7/C,cAAc,GAAIg1C,GAAqBA,EAAqBG,qBAAsBxmD,OASlF4uD,GAAAruD,UAAA8mB,aAAP,SAAoB6pC,GAEnBlxD,KAAKw9C,QAAQvgC,OAAOjd,KAAKw9C,QAAQxgC,QAAQk0C,GAAQ,EAEjD,IAAIlxD,KAAKw9C,QAAQj+C,QAAU,EAAG,CAC7BS,KAAK29C,cAAgB,IAErB39C,MAAKoxD,sBAGNF,EAAM7/C,cAAc,GAAIg1C,GAAqBA,EAAqBG,qBAAsBxmD,OAQzFW,QAAAC,eAAWguD,EAAAruD,UAAA,W1E0oaJM,I0E1oaP,WAEC,MAAOb,MAAKw9C,S1E2oaNz8C,WAAY,KACZC,aAAc,M0Epoad4tD,GAAAruD,UAAAowD,mBAAP,WAEC,GAAInhD,GAAaxP,KAAKq9C,SAAS99C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKq9C,SAASr+C,GAAG8+C,mBAGX8Q,GAAAruD,UAAA6wD,oBAAR,WAEC,GAAI5hD,GAAaxP,KAAKq9C,SAAS99C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKq9C,SAASr+C,GAAGoyD,sBAGZxC,GAAAruD,UAAAq9C,mBAAP,WAEC,GAAIpuC,GAAaxP,KAAKq9C,SAAS99C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAKq9C,SAASr+C,GAAG6+C,mBAMX+Q,GAAAruD,UAAAgwD,eAAR,SAAuBxxC,GAEtB/e,KAAK49C,qBAGCgR,GAAAruD,UAAAywD,oBAAP,WAEC,IAAKhxD,KAAKqxD,aACTrxD,KAAKqxD,aAAe,GAAInhB,GAAcA,EAAcW,aAErD7wC,MAAKqR,cAAcrR,KAAKqxD,cAGlBzC,GAAAruD,UAAAy9C,YAAP,SAAmBpa,GAElB5jC,KAAKq9C,SAASh3C,KAAKu9B,EAEnB,OAAOA,GAGDgrB,GAAAruD,UAAA09C,eAAP,SAAsBra,GAErB5jC,KAAKq9C,SAASpgC,OAAOjd,KAAKq9C,SAASrgC,QAAQ4mB,GAAS,EAEpD,OAAOA,GAET,OAAAgrB,IApnB2BpuD,EAsnB3Bf,GAAsBJ,QAAbuvD,I1E6naN1Q,iCAAiC98C,UAAUw6C,+BAA+Bx6C,UAAUoe,sCAAsCpe,UAAUD,oCAAoCC,UAAUgwC,0CAA0C,0CAA0CgV,iDAAiD,iDAAiDkD,8CAA8C,gDAAgDgI,6DAA6D,SAAS/yD,EAAQkB,EAAOJ,GAC9hB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2ExxbtB,IAAOG,GAASjC,EAAe,oC3Ekyb/B,I2EjxbMgzD,GAAe,SAAA7wD,GAASX,EAAxBwxD,EAAe7wD,EAqBpB,SArBK6wD,KAuBJ7wD,EAAApB,KAAAU,KAnBMA,MAAAwxD,iBAA0B,CAC1BxxD,MAAAyxD,uBAAgC,CAChCzxD,MAAA0xD,wBAAiC,CACjC1xD,MAAA2xD,8BAAuC,CACvC3xD,MAAA4xD,iBAA0B,EAqB1BL,EAAAhxD,UAAAU,QAAP,YAOAN,QAAAC,eAAW2wD,EAAAhxD,UAAA,a3EmwbJM,I2EnwbP,WAEC,MAAO0wD,GAAgBrwD,W3EowbjBH,WAAY,KACZC,aAAc,M2E/vbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,wB3EqwbJM,I2ErwbP,WAEC,MAAOb,MAAKyxD,wB3EswbN1wD,WAAY,KACZC,aAAc,M2EjwbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,kB3EuwbJM,I2EvwbP,WAEC,MAAOb,MAAKwxD,kB3EwwbNzwD,WAAY,KACZC,aAAc,M2EnwbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,+B3EywbJM,I2EzwbP,WAEC,MAAOb,MAAK2xD,+B3E0wbN5wD,WAAY,KACZC,aAAc,M2ErwbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,yB3E2wbJM,I2E3wbP,WAEC,MAAOb,MAAK0xD,yB3E4wbN3wD,WAAY,KACZC,aAAc,M2EvwbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,kB3E6wbJM,I2E7wbP,WAEC,MAAOb,MAAK4xD,kB3E8wbN7wD,WAAY,KACZC,aAAc,M2EzwbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,e3E+wbJM,I2E/wbP,WAEC,MAAOb,MAAK6xD,e3EgxbN9wD,WAAY,KACZC,aAAc,M2E3wbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,qB3EixbJM,I2EjxbP,WAEC,MAAOb,MAAK8xD,qB3EkxbN/wD,WAAY,KACZC,aAAc,M2E7wbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,sB3EmxbJM,I2EnxbP,WAEC,MAAOb,MAAK+xD,sB3EoxbNhxD,WAAY,KACZC,aAAc,M2E/wbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,4B3EqxbJM,I2ErxbP,WAEC,MAAOb,MAAKgyD,4B3EsxbNjxD,WAAY,KACZC,aAAc,M2EjxbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,e3EuxbJM,I2EvxbP,WAEC,MAAOb,MAAKiyD,e3EwxbNlxD,WAAY,KACZC,aAAc,M2EnxbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,qB3EyxbJM,I2EzxbP,WAEC,MAAOb,MAAKkyD,qB3E0xbNnxD,WAAY,KACZC,aAAc,M2ErxbrBL,QAAAC,eAAW2wD,EAAAhxD,UAAA,mB3E2xbJM,I2E3xbP,WAEC,MAAOb,MAAKmyD,mB3E4xbNpxD,WAAY,KACZC,aAAc,M2EvxbduwD,GAAAhxD,UAAA6xD,cAAP,SAAqBt1C,GAEpB9c,KAAKqyD,mBAAmBv1C,GAOjBy0C,GAAAhxD,UAAA8xD,mBAAR,SAA2Bv1C,G3E4xbpB,G2EzxbFw1C,GAAqBx1C,EAAWy1C,aAAav4C,aACjD,IAAIw4C,EAEJ,IAAI56B,GAAY06B,EAAUrvD,EAAG40B,EAAYy6B,EAAUpvD,EAAG40B,EAAYw6B,EAAU/rD,CAC5E,IAAIK,GAAWC,EAAWsS,CAC1B,IAAIzR,GAAU+qD,EAAe,CAC7B,IAAIzzD,EAGJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAK4xD,mBAAoB5yD,EAAG,CAE3CwzD,EAAWxyD,KAAKiyD,cAAcjzD,GAAGgb,aACjCpT,GAAKgxB,EAAK46B,EAASvvD,CACnB4D,GAAKgxB,EAAK26B,EAAStvD,CACnBiW,GAAK2e,EAAK06B,EAASjsD,CAEnBmB,GAAId,EAAGA,EAAKC,EAAGA,EAAKsS,EAAGA,CAGvBzR,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtB1H,MAAKkyD,oBAAoBlzD,GAAK0I,CAC9B+qD,IAAS/qD,EAIV+qD,EAAQ,EAAEA,CAEV,KAAKzzD,EAAI,EAAGA,EAAIgB,KAAK4xD,mBAAoB5yD,EACxCgB,KAAKkyD,oBAAoBlzD,IAAMyzD,EAlLnBlB,GAAArwD,UAAmB,qBAoLlC,OAAAqwD,IAtL8B/wD,EAwL9Bf,GAAyBJ,QAAhBkyD,I3EqxbNpwD,oCAAoCC,YAAYsxD,+DAA+D,SAASn0D,EAAQkB,EAAOJ,GAC1I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Ep+btB,IAAO44C,GAAK16C,EAAgB,+BAG5B,IAAOo1C,GAAgBp1C,EAAc,+CACrC,IAAO02C,GAAU12C,EAAe,yCAChC,IAAOy9C,GAAUz9C,EAAe,yCAChC,IAAOojB,GAAUpjB,EAAe,uCAChC,IAAOgzD,GAAehzD,EAAc,4D5E0+bpC,I4En+bMo0D,GAAiB,SAAAjyD,GAASX,EAA1B4yD,EAAiBjyD,EAStB,SATKiyD,GASOC,GATb,GAAA32B,GAAAj8B,IAWEU,GAAApB,KAAAU,KAEAA,MAAK6yD,4BAA8B,SAAC9zC,GAAqB,MAAAkd,GAAK62B,mBAAmB/zC,GAEjF/e,MAAK4yD,OAASA,EAMfjyD,OAAAC,eAAW+xD,EAAApyD,UAAA,U5E89bJM,I4E99bP,WAEC,MAAOb,MAAK+yD,S5E+9bNpwD,I4E59bP,SAAkBC,GAEjB,GAAIowD,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAInwC,EAEJ,IAAIjjB,KAAK+yD,QACR/yD,KAAKqzD,gBAENrzD,MAAK+yD,QAAUnwD,CACf5C,MAAKmyD,kBAAoBvvD,CACzB5C,MAAK6xD,cAAgB,GAAIrsD,MACzBxF,MAAK+xD,qBAAuB,GAAIvsD,MAChCxF,MAAK8xD,oBAAsB,GAAItsD,MAC/BxF,MAAKgyD,2BAA6B,GAAIxsD,MACtCxF,MAAKiyD,cAAgB,GAAIzsD,MAEzB,IAAIgK,GAAa5M,EAAMrD,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAAG,CACpCikB,EAAQrgB,EAAM5D,EACdikB,GAAM3P,iBAAiBqO,EAAWuB,oBAAqBljB,KAAK6yD,4BAE5D,IAAI5vC,YAAiB+4B,GAAY,CAChC,GAAI/4B,EAAMzU,aACTxO,KAAK+xD,qBAAqBmB,KAAwCjwC,MAElEjjB,MAAK6xD,cAAcmB,KAAiC/vC,MAE/C,IAAIA,YAAiB0wB,GAAkB,CAC7C,GAAI1wB,EAAMzU,aACTxO,KAAKgyD,2BAA2BmB,KAAoDlwC,MAEpFjjB,MAAK8xD,oBAAoBmB,KAA6ChwC,MAEjE,IAAIA,YAAiBgyB,GAAY,CACvCj1C,KAAKiyD,cAAcmB,KAAiCnwC,GAItD,GAAIjjB,KAAKyxD,wBAA0BwB,GAAwBjzD,KAAKwxD,kBAAoBwB,GAAkBhzD,KAAK4xD,kBAAoBwB,GAAkBpzD,KAAK0xD,yBAA2BwB,GAAyBlzD,KAAK2xD,+BAAiCwB,EAC/O,MAEDnzD,MAAKyxD,uBAAyBwB,CAC9BjzD,MAAK2xD,8BAAgCwB,CACrCnzD,MAAKwxD,iBAAmBwB,CACxBhzD,MAAK0xD,wBAA0BwB,CAC/BlzD,MAAK4xD,iBAAmBwB,CAGxBpzD,MAAKkyD,oBAAsB,GAAI1sD,OAAcpC,KAAKmB,KAAK6uD,EAAe,GAAG,EAGzEpzD,MAAKqR,cAAc,GAAI4nC,GAAMA,EAAMyX,U5Eo9b7B3vD,WAAY,KACZC,aAAc,M4E98bb2xD,GAAApyD,UAAA8yD,eAAR,WAEC,GAAI7jD,GAAaxP,KAAK+yD,QAAQxzD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EACjCgB,KAAK+yD,QAAQ/zD,GAAGwb,oBAAoBmH,EAAWuB,oBAAqBljB,KAAK6yD,6BAMnEF,GAAApyD,UAAAuyD,mBAAR,SAA2B/zC,GAK1B,GAAIkE,GAA8BlE,EAAMlJ,MAExC,IAAIoN,YAAiB+4B,GACpBh8C,KAAKszD,mBAAgCrwC,OACjC,IAAIA,YAAiB0wB,GACzB3zC,KAAKuzD,yBAA4CtwC,EAElDjjB,MAAKqR,cAAc,GAAI4nC,GAAMA,EAAMyX,SAM5BiC,GAAApyD,UAAAgzD,yBAAR,SAAiCtwC,GAEhC,GAAIuwC,GAAyCvwC,CAE7C,IAAIA,EAAMzU,aAAc,GACrBxO,KAAKyxD,yBACLzxD,KAAK2xD,6BAGP3xD,MAAK8xD,oBAAoB70C,OAAOjd,KAAK8xD,oBAAoB90C,QAAQw2C,GAAK,EACtExzD,MAAKgyD,2BAA2B3rD,KAAK4c,OAE/B,GACJjjB,KAAKyxD,yBACLzxD,KAAK2xD,6BAEP3xD,MAAKgyD,2BAA2B/0C,OAAOjd,KAAKgyD,2BAA2Bh1C,QAAQw2C,GAAK,EACpFxzD,MAAK8xD,oBAAoBzrD,KAAK4c,IAOxB0vC,GAAApyD,UAAA+yD,mBAAR,SAA2BrwC,GAE1B,GAAIwwC,GAA6BxwC,CAEjC,IAAIA,EAAMzU,aAAc,GACrBxO,KAAKwxD,mBACLxxD,KAAK0xD,uBACP1xD,MAAK6xD,cAAc50C,OAAOjd,KAAK6xD,cAAc70C,QAAQy2C,GAAK,EAC1DzzD,MAAK+xD,qBAAqB1rD,KAAK4c,OACzB,GACJjjB,KAAKwxD,mBACLxxD,KAAK0xD,uBAEP1xD,MAAK+xD,qBAAqB90C,OAAOjd,KAAK+xD,qBAAqB/0C,QAAQy2C,GAAK,EACxEzzD,MAAK6xD,cAAcxrD,KAAK4c,IAG3B,OAAA0vC,IA9JgCpB,EAgKL9xD,GAAAJ,QAAlBszD,I5Es8bN/W,+BAA+Bx6C,UAAUqyC,+CAA+C,+CAA+CuB,yCAAyC,yCAAyC8G,yCAAyC,yCAAyCp4B,uCAAuC,uCAAuC4tC,4DAA4D,8DAA8DoC,kEAAkE,SAASn1D,EAAQkB,EAAOJ,GAChlB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6ExnctB,IAAOyK,GAAavM,EAAc,qCAClC,IAAO0xC,GAAS1xC,EAAe,iCAC/B,IAAO06C,GAAK16C,EAAgB,+BAC5B,IAAO0mB,GAAe1mB,EAAc,yCAEpC,IAAOo1D,GAAoBp1D,EAAa,mDAKxC,IAAO6hC,GAAM7hC,EAAgB,qCAC7B,IAAOm1C,GAAuBn1C,EAAY,qEAG1C;GAAMq1D,GAAmB,SAAAlzD,GAASX,EAA5B6zD,EAAmBlzD,EAgBxB,SAhBKkzD,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXnzD,EAAApB,KAAAU,KAfOA,MAAA8zD,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAI30D,OAAM,iDAEjBc,MAAK+zD,aAAeF,CACpB7zD,MAAKg0D,kBAAoB,GAAI/uC,GAAgBjlB,KAC7CA,MAAKqoB,OAGCurC,EAAArzD,UAAA0zD,cAAP,SAAqB9tD,GAEpB,MAAOnG,MAAKk0D,aAAa/tD,GAGnBytD,GAAArzD,UAAA4zD,cAAP,SAAqBhuD,EAAuBvD,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIuD,GAASnG,KAAK+zD,aACjB,KAAM,IAAI70D,OAAM,qDAEjBc,MAAKk0D,aAAa/tD,GAASvD,EAGrBgxD,GAAArzD,UAAA6zD,oBAAP,SAA2Bv4C,GAE1B,MAAO7b,MAAKq0D,cAAcx4C,GAAWo3B,eAG9B2gB,GAAArzD,UAAA8nB,KAAR,WAECroB,KAAKk0D,aAAe,GAAI1uD,OAAcxF,KAAK+zD,aAC3C/zD,MAAKs0D,oBAAsB,GAAI9uD,OAAcxF,KAAK+zD,aAElD,IAAIn1D,GAAW,CACf,KAAK,GAAII,GAAmBgB,KAAK+zD,aAAe,EAAG/0D,GAAK,IAAKA,EAAG,CAC/DgB,KAAKk0D,aAAal1D,GAAKJ,CACvBA,IAAK,GAGNoB,KAAKu0D,aAAe/uD,OAAe,EAAG,GAAI,EAAG,EAC7CxF,MAAKw0D,aAAehvD,MAAc,EAAG,GAAI,GAAI,EAC7CxF,MAAKy0D,eAAiB,GAAIjvD,OAAiB,EAC3CxF,MAAK00D,aAAe,GAAIlvD,MACxBxF,MAAKq0D,cAAgB,GAAI7uD,MAEzB,KAAKxG,EAAI,EAAGA,EAAIgB,KAAK+zD,eAAgB/0D,EAAG,CACvCgB,KAAK00D,aAAa11D,GAAK,GAAI20D,EAC3B3zD,MAAKq0D,cAAcr1D,GAAK,GAAIohC,GAAOpgC,KAAK00D,aAAa11D,KAIhD40D,GAAArzD,UAAAo0D,kBAAP,SAAyB/xD,GAExBlC,EAAAH,UAAMo0D,kBAAiBr1D,KAAAU,KAAC4C,EAExB5C,MAAK40D,yBAGEhB,GAAArzD,UAAAq0D,uBAAR,WAEC50D,KAAK8zD,sBAAwB,KAG9BnzD,QAAAC,eAAWgzD,EAAArzD,UAAA,e7EklcJM,I6EllcP,WAEC,MAAOb,MAAK+zD,c7EmlcNpxD,I6EhlcP,SAAuBC,GAEtB,GAAIA,GAAS5C,KAAK+zD,aACjB,MAED,IAAInxD,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAI1D,OAAM,iDAEjBc,MAAK+zD,aAAenxD,CACpB5C,MAAK40D,wBACL50D,MAAKqoB,MACLroB,MAAKqR,cAAc,GAAI4nC,GAAMA,EAAMyX,U7E+kc7B3vD,WAAY,KACZC,aAAc,M6E7kcd4yD,GAAArzD,UAAAs0D,cAAP,SAAqBh/C,EAAwB+F,EAAawC,GAEzD,GAAIpe,KAAK8zD,sBACR9zD,KAAK80D,oBAEN90D,MAAK+0D,kBAAkBC,WAAah1D,KAAKi1D,YACzCj1D,MAAK+0D,kBAAkBl7C,OAAS7Z,KAAKk1D,oBACrCl1D,MAAK+0D,kBAAkBp7C,OACvBiC,GAAMikB,mBAAmB7/B,KAAK+0D,kBAE9B32C,GAAS+2C,iBAAiBn1D,KAAK+0D,kBAAmBl/C,EAAOi7C,UAAUsE,QAASp1D,KAAK+zD,aAAc/zD,KAAKy0D,eAAgBz0D,KAAKq0D,eAGlHT,GAAArzD,UAAAu0D,mBAAR,WAEC,GAAIO,GAAcr1D,KAAKs1D,eAAe,EAEtCt1D,MAAKy0D,eAAe,GAAK,GAAIxkB,GAAU,EAAG,EAAGolB,EAAMA,EACnDr1D,MAAKy0D,eAAe,GAAK,GAAIxkB,GAAUolB,EAAM,EAAGA,EAAMA,EACtDr1D,MAAKy0D,eAAe,GAAK,GAAIxkB,GAAU,EAAGolB,EAAMA,EAAMA,EACtDr1D,MAAKy0D,eAAe,GAAK,GAAIxkB,GAAUolB,EAAMA,EAAMA,EAAMA,EAEzDr1D,MAAK8zD,sBAAwB,MAGvBF,GAAArzD,UAAAg1D,uBAAP,SAA8BC,GAE7B,GAAI//B,EACJ,IAAIgO,GAAyB+xB,EAAW/xB,UACxC,IAAIgyB,GAAwBhyB,EAAWiyB,IACvC,IAAIC,GAAyBlyB,EAAWmyB,IAAMH,CAE9Cz1D,MAAK61D,oCAAoCL,EAAYA,EAAW/xB,WAAWqyB,eAAgB91D,KAAK+1D,SAChG/1D,MAAK+1D,SAASjnD,YAAY,IAAK,IAAK,EACpC9O,MAAKg2D,yBAAyBvgC,OAASz1B,KAAK+1D,QAC5C/1D,MAAKi2D,kBAAkBT,EAEvB,KAAK,GAAIx2D,GAAmB,EAAGA,EAAIgB,KAAK+zD,eAAgB/0D,EAAG,CAC1Dy2B,EAASz1B,KAAK00D,aAAa11D,GAAGy2B,MAE9Bz1B,MAAKs0D,oBAAoBt1D,GAAKy2D,EAAiBz1D,KAAKk0D,aAAal1D,GAAG22D,CACpE31D,MAAKq0D,cAAcr1D,GAAGoK,UAAUytB,SAAW72B,KAAKk1D,qBAAqB9rD,UAAUytB,QAE/E72B,MAAKk2D,0BAA0BzgC,EAAQz1B,KAAKk0D,aAAal1D,GAAIgB,KAAKu0D,aAAav1D,GAAIgB,KAAKw0D,aAAax1D,GAErGgB,MAAK00D,aAAa11D,GAAGy2B,OAASA,GAIxBm+B,GAAArzD,UAAA21D,0BAAR,SAAkCzgC,EAAiB0gC,EAAmBC,EAAmBC,GAExF,GAAI99C,GAAmBzN,EAAc8N,kBACrC,IAAI09C,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIn8B,GAAcz2B,OAAO6yD,kBAAmBn8B,EAAc12B,OAAO6yD,kBAAmBl8B,CACpF,IAAIC,GAAc52B,OAAO8yD,kBAAmBj8B,EAAc72B,OAAO8yD,kBAAmBh8B,EAAc92B,OAAO8yD,iBACzG,IAAI73D,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACds3D,EAAKt2D,KAAK82D,eAAe93D,EACzBu3D,GAAKv2D,KAAK82D,eAAe93D,EAAI,EAC7Bw3D,GAAKx2D,KAAK82D,eAAe93D,EAAI,EAC7By3D,GAAKH,GAAMt2D,KAAK82D,eAAe93D,EAAI,IAAMs3D,GAAIH,CAC7CO,GAAKH,GAAMv2D,KAAK82D,eAAe93D,EAAI,IAAMu3D,GAAIJ,CAC7CQ,GAAKH,GAAMx2D,KAAK82D,eAAe93D,EAAI,IAAMw3D,GAAIL,CAC7C,IAAIG,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAKj8B,EACRA,EAAOi8B,CACR,IAAIA,EAAK97B,EACRA,EAAO87B,CACR,IAAIC,EAAKj8B,EACRA,EAAOi8B,CACR,IAAIA,EAAK97B,EACRA,EAAO87B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR33D,IAAK,EAGN07B,EAAO,CAEP,IAAIhzB,GAAYizB,EAAOH,CACvB,IAAIu8B,GAAYn8B,EAAOH,CACvB,IAAIx6B,GAAW,GAAG46B,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQx6B,KAAKg3D,MACd,IAAIv8B,EAAO,EACVA,GAAQz6B,KAAKg3D,MACdx8B,GAAOp3B,KAAKC,MAAMm3B,EAAKx6B,KAAKg3D,QAAQh3D,KAAKg3D,MACzCv8B,GAAOr3B,KAAKC,MAAMo3B,EAAKz6B,KAAKg3D,QAAQh3D,KAAKg3D,MAEzC,IAAIC,GAAe,EAAEj3D,KAAKg3D,MAC1BtvD,GAAItE,KAAKC,MAAMqE,EAAEuvD,EAAQ,GAAGA,CAC5BF,GAAI3zD,KAAKC,MAAM0zD,EAAEE,EAAQ,GAAGA,CAE5Bt8B,GAAOH,EAAO9yB,CACdkzB,GAAOH,EAAOs8B,CAEdrvD,GAAI,EAAEA,CACNqvD,GAAI,EAAEA,CAENx+C,GAAI,GAAK,EAAE7Q,CACX6Q,GAAI,GAAK,EAAEw+C,CACXx+C,GAAI,IAAMtY,CACVsY,GAAI,MAAQoiB,EAAOH,GAAM9yB,CACzB6Q,GAAI,MAAQqiB,EAAOH,GAAMs8B,CACzBx+C,GAAI,KAAOmiB,EAAKz6B,CAChBsY,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFkd,GAAO3c,gBAAgBP,EACvBkd,GAAO3mB,YAAY,IAAK,IAAK,EAC7B2mB,GAAOrZ,kBAAkBg6C,EAAYC,EAAY,EACjD5gC,GAAO3mB,YAAY,GAAI,GAAI,GAGrB8kD,GAAArzD,UAAA+S,iBAAP,SAAwBC,EAAaC,GAEpCxT,KAAKg0D,kBAAkB1gD,iBAAiBC,EAAMC,GAGxCogD,GAAArzD,UAAAia,oBAAP,SAA2BjH,EAAaC,GAEvCxT,KAAKg0D,kBAAkBx5C,oBAAoBjH,EAAMC,GAG3CogD,GAAArzD,UAAA8Q,cAAP,SAAqB0N,GAEpB,MAAO/e,MAAKg0D,kBAAkB3iD,cAAc0N,GAGtC60C,GAAArzD,UAAAka,iBAAP,SAAwBlH,GAEvB,MAAOvT,MAAKg0D,kBAAkBv5C,iBAAiBlH,GAGhD5S,QAAAC,eAAIgzD,EAAArzD,UAAA,wB7E8icGM,I6E9icP,WAEC,MAAOb,MAAKs0D,qB7E+icNvzD,WAAY,KACZC,aAAc,M6E9ictB,OAAA4yD,IA/PkClgB,EAiQlCj0C,GAA6BJ,QAApBu0D,I7EkjcNhY,+BAA+Bx6C,UAAUwkB,yCAAyCxkB,UAAUue,qCAAqCve,UAAU+vC,iCAAiC/vC,UAAU81D,mDAAmD91D,UAAUokC,qCAAqC,qCAAqCsP,qEAAqE,uEAAuE6H,kEAAkE,SAASp+C,EAAQkB,EAAOJ,GACtiB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Ev0ctB,IAAO82D,GAAS54D,EAAe,iCAM/B,IAAO6hC,GAAM7hC,EAAgB,qCAE7B,IAAO64D,GAAgB74D,EAAc,8DAErC,IAAOupD,GAAiBvpD,EAAa,gDAErC,IAAMw9C,GAAmB,SAAAr7C,GAASX,EAA5Bg8C,EAAmBr7C,EAMxB,SANKq7C,KAQJr7C,EAAApB,KAAAU,KAEAA,MAAKs1D,eAAiB,GACtBt1D,MAAKq3D,aAAe,GAAI7xD,MACxBxF,MAAKs3D,cAGEvb,EAAAx7C,UAAA+2D,YAAR,WAECt3D,KAAKq0D,cAAgB,GAAI7uD,MACzBxF,MAAKu3D,aAAe,GAAI/xD,MAGxBxF,MAAKw3D,UAAU,EAAG,GAAI,EACtBx3D,MAAKw3D,UAAU,GAAI,GAAI,EACvBx3D,MAAKw3D,WAAW,GAAI,EAAG,EACvBx3D,MAAKw3D,UAAU,GAAI,EAAG,EACtBx3D,MAAKw3D,UAAU,EAAG,EAAG,EACrBx3D,MAAKw3D,UAAU,EAAG,IAAK,GAGhBzb,GAAAx7C,UAAAi3D,UAAR,SAAkBxnD,EAAkBC,EAAkBC,GAErD,GAAIunD,GAAa,GAAIr3B,EACrBq3B,GAAIznD,UAAYA,CAChBynD,GAAIxnD,UAAYA,CAChBwnD,GAAIvnD,UAAYA,CAChBunD,GAAIh0B,WAAWiyB,KAAO,GAEtB,IAAIjyB,GAA2Dg0B,EAAIh0B,UACnEA,GAAWi0B,YAAc,EACzB13D,MAAKu3D,aAAalxD,KAAKo9B,EACvBg0B,GAAIh0B,WAAWC,cAAgB,CAC/B1jC,MAAKq0D,cAAchuD,KAAKoxD,GAIlB1b,GAAAx7C,UAAAo3D,oBAAP,WAEE,MAAO,IAAI7P,GAAkB,GAAIqP,GAAUn3D,KAAKs1D,iBAI3CvZ,GAAAx7C,UAAAg1D,uBAAP,SAA8BC,GAE7B,GAAIvyC,GAAgCjjB,KAAY,OAChD,IAAI43D,GAAqB30C,EAAMi5B,SAC/B,IAAInmC,GAAe/V,KAAK63D,QAAQ79C,aAGhC,KAAK,GAAIhb,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCgB,KAAKu3D,aAAav4D,GAAG42D,IAAMgC,CAC3B53D,MAAKq0D,cAAcr1D,GAAGoK,UAAU6M,SAAWF,CAC3C/V,MAAKq3D,aAAar4D,GAAK,MAKlB+8C,GAAAx7C,UAAAs0D,cAAP,SAAqBh/C,EAA0B+F,EAAawC,GAE3D,IAAK,GAAIpf,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIgB,KAAKq3D,aAAar4D,GAAI,CACzBgB,KAAK+0D,kBAAkBl7C,OAAS7Z,KAAKq0D,cAAcr1D,EACnDgB,MAAK+0D,kBAAkBp7C,OACvBiC,GAAMikB,mBAAmB7/B,KAAK+0D,kBAC9B32C,GAAS05C,SAAS93D,KAAK+0D,kBAAmBl/C,EAAOkiD,YAAYC,UAAW,KAAMh5D,KAIlF,OAAA+8C,IA7EkCqb,EA+ElC33D,GAA6BJ,QAApB08C,I9E+ycNkc,iCAAiC72D,UAAUokC,qCAAqC,qCAAqC0yB,8DAA8D,8DAA8D3O,gDAAgD,kDAAkDzU,sEAAsE,SAASv2C,EAAQkB,EAAOJ,GACpb,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+E/4ctB,IAAOsuD,GAAOpwD,EAAgB,+BAC9B,IAAOsM,GAAQtM,EAAgB,gCAC/B,IAAOuM,GAAavM,EAAc,qCAGlC,IAAOo1D,GAAoBp1D,EAAa,mDAIxC,IAAO6hC,GAAM7hC,EAAgB,qCAE7B,IAAO64D,GAAgB74D,EAAc,8DACrC,IAAOspD,GAAetpD,EAAc,8CAEpC,IAAMm1C,GAAuB,SAAAhzC,GAASX,EAAhC2zC,EAAuBhzC,EAc5B,SAdKgzC,KAgBJhzC,EAAApB,KAAAU,KAXMA,MAAAm4D,cAAuB,GAGvBn4D,MAAAg3D,OAAgB,EAUtBh3D,MAAKi1D,eACLj1D,MAAKg2D,yBAA2B,GAAIrC,EACpC3zD,MAAKk1D,qBAAuB,GAAI90B,GAAOpgC,KAAKg2D,yBAC5Ch2D,MAAK82D,iBACL92D,MAAK+1D,SAAW,GAAIlrD,GAGrBlK,OAAAC,eAAW8yC,EAAAnzC,UAAA,Q/E83cJM,I+E93cP,WAEC,MAAOb,MAAKg3D,Q/E+3cNr0D,I+E53cP,SAAgBC,GAEf5C,KAAKg3D,OAASp0D,G/E63cR7B,WAAY,KACZC,aAAc,M+E33crBL,QAAAC,eAAW8yC,EAAAnzC,UAAA,e/E83cJM,I+E93cP,WAEC,MAAOb,MAAKm4D,e/E+3cNx1D,I+E53cP,SAAuBC,GAEtB5C,KAAKm4D,cAAgBv1D,G/E63cf7B,WAAY,KACZC,aAAc,M+E13crBL,QAAAC,eAAW8yC,EAAAnzC,UAAA,oB/E83cJM,I+E93cP,WAEC,MAAOb,MAAKk1D,qBAAqBjiB,gB/E+3c3BlyC,WAAY,KACZC,aAAc,M+E53crBL,QAAAC,eAAW8yC,EAAAnzC,UAAA,S/Eg4cJM,I+Eh4cP,WAEC,MAAOb,MAAKo4D,OAASp4D,KAAKq4D,Q/Ei4cpBt3D,WAAY,KACZC,aAAc,M+E/3cd0yC,GAAAnzC,UAAA+3D,aAAP,SAAoBC,GAEnB,GAAIv4D,KAAKw4D,WAAaD,EACrB,MAED73D,GAAAH,UAAM+3D,aAAYh5D,KAAAU,KAACu4D,EAEnB,IAAIv4D,KAAKw4D,UAAW,CACnBx4D,KAAKy4D,kBAAoB,IACzBz4D,MAAKs1D,eAAiBiD,EAASn0D,UACzB,CACNpE,KAAKy4D,kBAAoB,OAIpB/kB,GAAAnzC,UAAAo3D,oBAAP,WAEC,MAAO,IAAI9P,GAAgB,GAAI8G,GAAQ3uD,KAAKs1D,eAAgBt1D,KAAKs1D,iBAI3D5hB,GAAAnzC,UAAAs0D,cAAP,SAAqBh/C,EAAwB+F,EAAawC,GAEzDpe,KAAK+0D,kBAAkBl7C,OAAS7Z,KAAKk1D,oBACrCl1D,MAAK+0D,kBAAkBC,WAAah1D,KAAKi1D,YACzCj1D,MAAK+0D,kBAAkBp7C,OACvBiC,GAAMikB,mBAAmB7/B,KAAK+0D,kBAC9B32C,GAAS05C,SAAS93D,KAAK+0D,kBAAmBl/C,EAAOi7C,UAAUsE,SAIrD1hB,GAAAnzC,UAAA01D,kBAAP,SAAyBT,GAExB,GAAIkD,GAAoC14D,KAAKk1D,qBAAqByD,aAClE,IAAIC,GAAmCpD,EAAWmD,aAClD34D,MAAKi1D,aAAa11D,OAAS,CAE3BS,MAAKi1D,aAAa,GAAKyD,EAAmB,EAC1C14D,MAAKi1D,aAAa,GAAKyD,EAAmB,EAC1C14D,MAAKi1D,aAAa,GAAKyD,EAAmB,EAC1C14D,MAAKi1D,aAAa,GAAKyD,EAAmB,EAE1C,IAAIz1C,GAA4CjjB,KAAK63D,OACrD,IAAIgB,GAAe51C,EAAM61C,cACzB,IAAIC,GAAcF,EAAI51D,CACtB,IAAI+1D,GAAcH,EAAI31D,CACtB,IAAI+1D,GAAcJ,EAAItyD,CACtB,IAAIL,GAAW,CACf,KAAK,GAAIlH,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIw1B,GAAgBokC,EAAkB55D,EACtC,IAAIw1B,EAAMz1B,EAAEg6D,EAAOvkC,EAAMt0B,EAAE84D,EAAOxkC,EAAMC,EAAEwkC,EAAO,EAChDj5D,KAAKi1D,aAAa/uD,KAAOsuB,GAKrBkf,GAAAnzC,UAAAg1D,uBAAP,SAA8BC,GAE7Bx1D,KAAK61D,oCAAoCL,EAAYA,EAAW/xB,WAAWqyB,eAAgB91D,KAAK+1D,SAChG/1D,MAAKg2D,yBAAyBvgC,OAASz1B,KAAK+1D,QAC5C/1D,MAAKi2D,kBAAkBT,GAGjB9hB,GAAAnzC,UAAAs1D,oCAAP,SAA2CL,EAAmB0D,EAAuBzjC,GAEpF,GAAIld,GAAmBzN,EAAc8N,kBACrC,IAAIigD,EACJ,IAAI51D,GAAUC,EAAUqD,CACxB,IAAIi0B,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAI57B,EAEJ,IAAIikB,GAA4CjjB,KAAK63D,OACrDgB,GAAM51C,EAAM61C,cACZ94D,MAAKk1D,qBAAqB9rD,UAAUytB,SAAW72B,KAAK63D,QAAQnnD,cAC5DzN,GAAIG,KAAKC,OAAOmyD,EAAWvyD,EAAI41D,EAAI51D,EAAEjD,KAAKm4D,eAAen4D,KAAKg3D,QAAQh3D,KAAKg3D,MAC3E9zD,GAAIE,KAAKC,OAAOmyD,EAAWtyD,EAAI21D,EAAI31D,EAAElD,KAAKm4D,eAAen4D,KAAKg3D,QAAQh3D,KAAKg3D,MAC3EzwD,GAAInD,KAAKC,OAAOmyD,EAAWjvD,EAAIsyD,EAAItyD,EAAEvG,KAAKm4D,eAAen4D,KAAKg3D,QAAQh3D,KAAKg3D,MAC3Eh3D,MAAKk1D,qBAAqBjyD,EAAIA,CAC9BjD,MAAKk1D,qBAAqBhyD,EAAIA,CAC9BlD,MAAKk1D,qBAAqB3uD,EAAIA,CAE9BvG,MAAK+1D,SAAStlD,SAASzQ,KAAKk1D,qBAAqB3/C,sBACjDvV,MAAK+1D,SAASv5C,QAAQg5C,EAAW9kD,eACjC1Q,MAAK+1D,SAAS3hB,iBAAiB8kB,EAASl5D,KAAK82D,eAE7Ct8B,GAAOG,EAAO36B,KAAK82D,eAAe,EAClCr8B,GAAOG,EAAO56B,KAAK82D,eAAe,EAClC92D,MAAKo4D,OAASp4D,KAAK82D,eAAe,EAElC93D,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdiE,EAAIjD,KAAK82D,eAAe93D,EACxBkE,GAAIlD,KAAK82D,eAAe93D,EAAI,EAC5BuH,GAAIvG,KAAK82D,eAAe93D,EAAI,EAC5B,IAAIiE,EAAIu3B,EACPA,EAAOv3B,CACR,IAAIA,EAAI03B,EACPA,EAAO13B,CACR,IAAIC,EAAIu3B,EACPA,EAAOv3B,CACR,IAAIA,EAAI03B,EACPA,EAAO13B,CACR,IAAIqD,EAAIvG,KAAKo4D,OACZp4D,KAAKo4D,OAAS7xD,CACfvH,IAAK,EAGNgB,KAAKq4D,OAAS,CAEd,IAAI3wD,GAAWizB,EAAOH,CACtB,IAAIu8B,GAAWn8B,EAAOH,CACtB,IAAIx6B,GAAW,GAAGD,KAAKo4D,OAASp4D,KAAKq4D,OAErC,IAAI79B,EAAO,EACVA,GAAQx6B,KAAKg3D,MAEd,IAAIv8B,EAAO,EACVA,GAAQz6B,KAAKg3D,MAEdx8B,GAAOp3B,KAAKC,MAAMm3B,EAAKx6B,KAAKg3D,QAAQh3D,KAAKg3D,MACzCv8B,GAAOr3B,KAAKC,MAAMo3B,EAAKz6B,KAAKg3D,QAAQh3D,KAAKg3D,MAEzC,IAAIC,GAAe,EAAEj3D,KAAKg3D,MAC1BtvD,GAAItE,KAAKC,MAAMqE,EAAEuvD,EAAQ,GAAGA,CAC5BF,GAAI3zD,KAAKC,MAAM0zD,EAAEE,EAAQ,GAAGA,CAE5Bt8B,GAAOH,EAAO9yB,CACdkzB,GAAOH,EAAOs8B,CAEdrvD,GAAI,EAAEA,CACNqvD,GAAI,EAAEA,CAENx+C,GAAI,GAAK,EAAE7Q,CACX6Q,GAAI,GAAK,EAAEw+C,CACXx+C,GAAI,IAAMtY,CACVsY,GAAI,MAAQoiB,EAAOH,GAAM9yB,CACzB6Q,GAAI,MAAQqiB,EAAOH,GAAMs8B,CACzBx+C,GAAI,KAAOvY,KAAKq4D,OAAOp4D,CACvBsY,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFkd,GAAO3c,gBAAgBP,GAEzB,OAAAm7B,IAzMsC0jB,EA2ML33D,GAAAJ,QAAxBq0C,I/Eu2cNwb,+BAA+B9tD,UAAUse,gCAAgCte,UAAUue,qCAAqCve,UAAU81D,mDAAmD91D,UAAUokC,qCAAqC,qCAAqC0yB,8DAA8D,8DAA8D5O,8CAA8C,gDAAgD6P,0EAA0E,SAAS56D,EAAQkB,EAAOJ,GACxkB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgFpkdtB,IAAOqzC,GAAuBn1C,EAAY,qEAE1C,IAAM66D,GAA2B,SAAA14D,GAASX,EAApCq5D,EAA2B14D,EAIhC,SAJK04D,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEX34D,EAAApB,KAAAU,KAEAA,MAAKq5D,cAAgBA,EAMtB14D,OAAAC,eAAWw4D,EAAA74D,UAAA,iBhFkkdJM,IgFlkdP,WAEC,MAAOb,MAAKs5D,gBhFmkdN32D,IgFhkdP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAET5C,MAAKs5D,eAAiB12D,GhFikdhB7B,WAAY,KACZC,aAAc,MgF/jddo4D,GAAA74D,UAAAg1D,uBAAP,SAA8BC,GAE7B,GAAI0D,GAAwB1D,EAAW/xB,WAAWqyB,cAElD,KAAK,GAAI92D,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAIyI,GAAWyxD,EAAQl6D,EACvBgB,MAAK82D,eAAe93D,GAAKyI,CACzBzH,MAAK82D,eAAe93D,EAAI,IAAMyI,GAAKyxD,EAAQl6D,EAAI,IAAMyI,GAAGzH,KAAKs5D,eAG9Dt5D,KAAK61D,oCAAoCL,EAAYx1D,KAAK82D,eAAgB92D,KAAK+1D,SAC/E/1D,MAAKg2D,yBAAyBvgC,OAASz1B,KAAK+1D,SAE9C,OAAAqD,IAzC0C1lB,EA2C1Cj0C,GAAqCJ,QAA5B+5D,IhFgkdNtkB,qEAAqE,uEAAuEojB,+DAA+D,SAAS35D,EAAQkB,EAAOJ,GiF9mdtO,GAAOoiB,GAAmBljB,EAAa,6CAMvC,IAAOg7D,GAAqBh7D,EAAY,oDAIxC,IAAM64D,GAAgB,WAYrB,QAZKA,KAMEp3D,KAAAs1D,eAAwB,IAGvBt1D,MAAAw5D,mBAA6B,IAKpCx5D,MAAK+0D,kBAAoB/0D,KAAKy5D,yBAGxBrC,EAAA72D,UAAAk5D,uBAAP,WAEC,MAAO,IAAIF,GAGZ54D,QAAAC,eAAWw2D,EAAA72D,UAAA,qBjF2ldJM,IiF3ldP,WAEC,MAAOb,MAAKw5D,oBjF4ldN72D,IiFzldP,SAA6BC,GAE5B5C,KAAKw5D,mBAAqB52D,GjF0ldpB7B,WAAY,KACZC,aAAc,MiFxlddo2D,GAAA72D,UAAAm5D,cAAP,WAEC15D,KAAK25D,iBAAmB,KAGlBvC,GAAA72D,UAAA+3D,aAAP,SAAoBC,GAEnB,GAAIv4D,KAAKw4D,YAAcx4D,KAAKy4D,kBAC3Bz4D,KAAKw4D,UAAUv3D,SAEhBjB,MAAKw4D,UAAYD,EAGlB53D,QAAAC,eAAWw2D,EAAA72D,UAAA,SjFsldJM,IiFtldP,WAEC,MAAOb,MAAK63D,SjFuldNl1D,IiFpldP,SAAiBC,GAEhB5C,KAAK63D,QAAUj1D,GjFqldT7B,WAAY,KACZC,aAAc,MiFnldrBL,QAAAC,eAAWw2D,EAAA72D,UAAA,YjFsldJM,IiFtldP,WAEC,IAAKb,KAAKw4D,UACTx4D,KAAKw4D,UAAYx4D,KAAK23D,qBAEvB,OAAO33D,MAAKw4D,WjFsldNz3D,WAAY,KACZC,aAAc,MiFpldrBL,QAAAC,eAAWw2D,EAAA72D,UAAA,gBjFuldJM,IiFvldP,WAEC,MAAOb,MAAKs1D,gBjFwldN3yD,IiFrldP,SAAwBC,GAEvB,GAAIA,GAAS5C,KAAKs1D,eACjB,MAEDt1D,MAAK20D,kBAAkB/xD,IjFqldjB7B,WAAY,KACZC,aAAc,MiFnlddo2D,GAAA72D,UAAAU,QAAP,WAECjB,KAAK+0D,kBAAoB,IAEzB,IAAI/0D,KAAKw4D,YAAcx4D,KAAKy4D,kBAC3Bz4D,KAAKw4D,UAAUv3D,SAEhBjB,MAAKw4D,UAAY,KAGXpB,GAAA72D,UAAAo3D,oBAAP,WAEC,KAAM,IAAIl2C,GAGJ21C,GAAA72D,UAAAq5D,gBAAP,SAAuBC,EAAiCz7C,GAEvDpe,KAAK25D,iBAAmB,KAExB35D,MAAKu1D,uBAAuBsE,EAAgBhgD,OAE5C,KAAK7Z,KAAKw4D,UACTx4D,KAAKw4D,UAAYx4D,KAAK23D,qBAEvB33D,MAAK60D,cAAc70D,KAAKw4D,UAAWqB,EAAgBj+C,MAAOwC,GAGpDg5C,GAAA72D,UAAAg1D,uBAAP,SAA8BC,GAE7B,KAAM,IAAI/zC,GAGJ21C,GAAA72D,UAAAs0D,cAAP,SAAqBh/C,EAAoB+F,EAAawC,GAErD,KAAM,IAAIqD,GAGJ21C,GAAA72D,UAAAo0D,kBAAP,SAAyB/xD,GAExB5C,KAAKs1D,eAAiB1yD,CAEtB,IAAI5C,KAAKy4D,kBAAmB,CAC3B,KAAMv5D,OAAM,2DACN,IAAIc,KAAKw4D,UAAW,CAC1Bx4D,KAAKw4D,UAAUv3D,SACfjB,MAAKw4D,UAAY,MAGpB,OAAApB,KAEA33D,GAA0BJ,QAAjB+3D,IjFukdN5zC,6CAA6CpiB,UAAU04D,oDAAoD,sDAAsD95B,+CAA+C,SAASzhC,EAAQkB,EAAOJ,GAC3O,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkFltdtB,IAAO05D,GAAQx7D,EAAgB,wCAC/B,IAAOy7D,GAAaz7D,EAAc,6ClFwtdlC,IkFltdMihC,GAAc,SAAA9+B,GAASX,EAAvBy/B,EAAc9+B,EAEnB,SAFK8+B,KAIJ9+B,EAAApB,KAAAU,KAEAA,MAAKi6D,UAAY,GAAIF,GAEvB,MAAAv6B,IAR6Bw6B,EAU7Bv6D,GAAwBJ,QAAfmgC,IlFktdN06B,wCAAwC,wCAAwCC,6CAA6C,+CAA+CC,2CAA2C,SAAS77D,EAAQkB,EAAOJ,GAClP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFxudtB,IAAOg6D,GAAU97D,EAAe,0CnF8udhC,ImFrudM+7D,GAAU,SAAA55D,GAASX,EAAnBu6D,EAAU55D,EAEf,SAFK45D,GAEOC,EAAqB1gD,EAAegC,GAE/Cnb,EAAApB,KAAAU,KAAMu6D,EAAM1gD,EAAQgC,GAMdy+C,EAAA/5D,UAAAi6D,gBAAP,SAAuB16B,IAIxB,OAAAw6B,IAdyBD,EAgBL56D,GAAAJ,QAAXi7D,InFoudNG,0CAA0C,4CAA4CC,8CAA8C,SAASn8D,EAAQkB,EAAOJ,GAC/J,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoF7vdtB,IAAO05D,GAAQx7D,EAAW,wCpFmwd1B,IoF1vdMo8D,GAAa,SAAAj6D,GAASX,EAAtB46D,EAAaj6D,EAef,SAfEi6D,GAeUJ,EAAwBK,EAAkC/+C,GAElEnb,EAAApB,KAAAU,KAfGA,MAAA66D,gBAA0B,IAOzB76D,MAAA86D,aAA6B,GAAIt1D,MACjCxF,MAAA+6D,YAA2B,GAAIv1D,MAC/BxF,MAAAg7D,eAAwB,CAQ5Bh7D,MAAKi7D,MAAQV,CACbv6D,MAAKk7D,WAAaN,CAClB56D,MAAKm7D,WAAat/C,EAGtBlb,OAAAC,eAAW+5D,EAAAp6D,UAAA,iBpF+udPM,IoF/udJ,WAEI,MAAOb,MAAKk7D,YpFgvdZn6D,WAAY,KACZC,aAAc,MoF1udX25D,GAAAp6D,UAAAi6D,gBAAP,SAAuB16B,GAGnB,GAAI9/B,KAAKo7D,aAAe,EACpB,MAEJ,IAAIp7D,KAAKq7D,aACLr7D,KAAKq7D,aAAab,gBAAgB16B,EAEtC,IAAI9gC,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKg7D,eAAgBh8D,IACjCgB,KAAK+6D,YAAY/7D,GAAGw7D,gBAAgB16B,EAExC,KAAK9gC,EAAI,EAAGA,EAAIgB,KAAKs7D,gBAAiBt8D,IAClCgB,KAAKu7D,aAAav8D,GAAGw7D,gBAAgB16B,GAQtC66B,GAAAp6D,UAAAi7D,kBAAP,SAAyBC,GAErB,IAAKA,EAAKZ,iBAAmBY,EAAK9rC,cAAc+rC,YAC5C,MAAO17D,MAAKi7D,MAAMU,QAAiCF,EAAK9rC,cAE5D,OAAO3vB,MAAKi7D,MAAMU,QAAQF,EAAK9rC,cAAchb,QAQ1CgmD,GAAAp6D,UAAAq7D,SAAP,SAAgBH,GAEZA,EAAK9mD,OAAS3U,IAEd,KAAKy7D,EAAKZ,iBAAmBY,EAAK9rC,cAAc+rC,YAAa,CACzD17D,KAAKq7D,aAAeI,MACjB,IAAIA,EAAK9rC,cAAc1c,SAAU,CACpCjT,KAAK+6D,YAAY10D,KAAKo1D,EACtBz7D,MAAKg7D,eAAiBh7D,KAAK+6D,YAAYx7D,WACpC,CACH,GAAIoQ,GAAe8rD,EAAK9rC,cAAc5jB,QACtC,IAAIyD,GAAaxP,KAAK86D,aAAav7D,MACnC,IAAI4G,GAAeqJ,CAEnB,OAAOrJ,IACH,GAAInG,KAAK86D,aAAa30D,GAASwJ,EAC3B,KAERxJ,IAEA,IAAIA,EAAQqJ,EAAK,CACbxP,KAAKu7D,aAAat+C,OAAO9W,EAAO,EAAGs1D,EACnCz7D,MAAK86D,aAAa79C,OAAO9W,EAAO,EAAGwJ,OAChC,CACH3P,KAAKu7D,aAAal1D,KAAKo1D,EACvBz7D,MAAK86D,aAAaz0D,KAAKsJ,GAE3B3P,KAAKs7D,gBAAkBt7D,KAAK86D,aAAav7D,OAG7Ck8D,EAAKI,6BAA6B77D,KAAK87D,qBAEvC,IAAIV,GAAqBK,EAAKL,WAC9BK,GAAOz7D,IAEP,GAAG,CACCy7D,EAAKL,aAAeA,SACdK,EAAoBA,EAAK9mD,SAAW,MAQ3CgmD,GAAAp6D,UAAAw7D,YAAP,SAAmBN,GAEf,IAAKA,EAAKZ,iBAAmBY,EAAK9rC,cAAc+rC,YAAa,CACzD17D,KAAKq7D,aAAe,SACjB,IAAII,EAAK9rC,cAAc1c,SAAU,CACpCjT,KAAK+6D,YAAY99C,OAAOjd,KAAK+6D,YAAY/9C,QAAQy+C,GAAO,EACxDz7D,MAAKg7D,eAAiBh7D,KAAK+6D,YAAYx7D,WACpC,CACH,GAAI4G,GAAenG,KAAKu7D,aAAav+C,QAAQy+C,EAE7Cz7D,MAAKu7D,aAAat+C,OAAO9W,EAAO,EAChCnG,MAAK86D,aAAa79C,OAAO9W,EAAO,EAEhCnG,MAAKs7D,gBAAkBt7D,KAAK86D,aAAav7D,OAG7Ck8D,EAAKI,6BAA6B,MAElC,IAAIT,GAAqBK,EAAKL,WAC9BK,GAAOz7D,IAEP,GAAG,CACCy7D,EAAKL,aAAeA,SACdK,EAA4BA,EAAK9mD,SAAW,MAE9D,OAAAgmD,IA1I4BZ,EA2I5Bt6D,GAAuBJ,QAAds7D,IpFiudNT,wCAAwC,0CAA0C8B,qDAAqD,SAASz9D,EAAQkB,EAAOJ,GAClK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqF/3dtB,IAAOg6D,GAAU97D,EAAe,0CAGhC,IAAOo1C,GAAgBp1C,EAAc,+CrFm4drC,IqF73dM09D,GAAoB,SAAAv7D,GAASX,EAA7Bk8D,EAAoBv7D,EAUzB,SAVKu7D,GAUO1B,EAAqB2B,EAAmCrgD,GAEnEnb,EAAApB,KAAAU,KAAMu6D,EAAM2B,EAAkBrgD,EAE9B7b,MAAKm8D,kBAAoBD,EAMnBD,EAAA17D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAIA,EAAUs8B,UAAUp8D,MACvB8/B,EAAUu8B,sBAAsBr8D,KAAKm8D,mBAOhCF,GAAA17D,UAAA+7D,gBAAP,WAEC,MAAO,OA9BML,GAAA3xD,WAAyBqpC,CAgCxC,OAAAsoB,IAlCmC5B,EAoCL56D,GAAAJ,QAArB48D,IrFs3dNxoB,+CAA+C,+CAA+CgnB,0CAA0C,4CAA4CA,2CAA2C,SAASl8D,EAAQkB,EAAOJ,GAC1P,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFv6dtB,IAAO2K,GAAQzM,EAAgB,gCAG/B,IAAOo1B,GAAsBp1B,EAAY,mDACzC,IAAO+4B,GAAc/4B,EAAc,2CAEnC,IAAO2M,GAAU3M,EAAe,uCAChC,IAAO45B,GAAU55B,EAAe,uCAEhC,IAAOw7D,GAAQx7D,EAAgB,wCtFy6d/B,IsF95dM87D,GAAU,SAAA35D,GAASX,EAAnBs6D,EAAU35D,EAUf,SAVK25D,GAUOE,EAAqBh3C,EAAsB1H,GAEtDnb,EAAApB,KAAAU,KAVMA,MAAA66D,gBAA0B,KAYhC76D,MAAKi7D,MAAQV,CACbv6D,MAAKu8D,QAAUh5C,CACfvjB,MAAKm7D,WAAat/C,CAClB7b,MAAKo7D,YAAc,CAEnBp7D,MAAKyP,cAELzP,MAAK8S,aAAe9S,KAAKu8D,QAAQzpD,aAGlCnS,OAAAC,eAAWy5D,EAAA95D,UAAA,iBtFm5dJM,IsFn5dP,WAEC,MAAOb,MAAKu8D,StFo5dNx7D,WAAY,KACZC,aAAc,MsF94ddq5D,GAAA95D,UAAA+7D,gBAAP,WAEC,MAAOt8D,MAAK2vB,cAAcnhB,aASpB6rD,GAAA95D,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKr0B,KAAKu8D,QAAQl/C,cACjB,MAAO,MAER,OAAO,MAODg9C,GAAA95D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAIA,EAAUs8B,UAAUp8D,MAAO,CAC9B8/B,EAAU08B,YAAsBx8D,KAAKu8D,QAErC,IAAIv8D,KAAKy8D,wBAA0B38B,EAAU48B,kBAC5C58B,EAAU08B,YAAYx8D,KAAK28D,gBAOvBtC,GAAA95D,UAAAq8D,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAK98D,KAAKu8D,QAAQl/C,cACjB,MAAO,MAER,IAAI7T,GAAwCxJ,KAAKu8D,QAAQQ,oBACzDvzD,GAAmBwzD,iBAAmBh9D,KAAKu8D,QAAQhnD,sBAAsBhD,gBAAgBsqD,EACzFrzD,GAAmByzD,kBAAoBj9D,KAAKu8D,QAAQhnD,sBAAsBw0B,qBAAqB+yB,EAE/F,KAAKtzD,EAAmBk8C,YACvBl8C,EAAmBk8C,YAAc,GAAI16C,EAEtC,IAAIs6B,GAA0BtlC,KAAKgV,QAAQ8f,gBAAgBtrB,EAAmBwzD,iBAAkBxzD,EAAmByzD,kBAAmBzzD,EAAmBk8C,YAEzJ,IAAIpgB,EAAmB,EACtB,MAAO,MAER97B,GAAmB87B,iBAAmBA,CACtC97B,GAAmBqzD,YAAcA,CACjCrzD,GAAmBszD,aAAeA,CAClCtzD,GAAmB0zD,wBAA0B53B,GAAoB,CAEjE,OAAO,MAOD+0B,GAAA95D,UAAA48D,oBAAP,WAEC,MAAOn9D,MAAKgV,QAAQooD,gBAGd/C,GAAA95D,UAAAkb,oBAAP,WAECzb,KAAKgV,QAAQmR,aAKPk0C,GAAA95D,UAAAkP,aAAP,WAEC,GAAIzP,KAAKu8D,QAAQ/kB,YAActsC,EAAW8D,iBACzChP,KAAKgV,QAAU,GAAI2e,GAAuB3zB,KAAKu8D,aAC3C,IAAIv8D,KAAKu8D,QAAQ/kB,YAActsC,EAAW8sB,OAC9Ch4B,KAAKgV,QAAU,GAAIsiB,GAAet3B,KAAKu8D,aACnC,IAAIv8D,KAAKu8D,QAAQ/kB,YAActsC,EAAW+sB,KAC9Cj4B,KAAKgV,QAAU,GAAImjB,EAEpBn4B,MAAKq9D,oBAEP,OAAAhD,IAzHyBN,EA2HzBt6D,GAAoBJ,QAAXg7D,ItF+3dNv6C,gCAAgC1e,UAAUmyB,mDAAmD,mDAAmD6D,2CAA2C,2CAA2ClX,uCAAuC,uCAAuCgY,uCAAuC,uCAAuCgiC,wCAAwC,0CAA0CoD,mDAAmD,SAAS/+D,EAAQkB,EAAOJ,SAE5hBk+D,sCAAsC,SAASh/D,EAAQkB,EAAOJ,SAE9Dm+D,+CAA+C,SAASj/D,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFxhetB,IAAOg6D,GAAU97D,EAAe,0CvF8hehC,IuFrheMk/D,GAAc,SAAA/8D,GAASX,EAAvB09D,EAAc/8D,EAUnB,SAVK+8D,GAUOlD,EAAqBmD,EAAuB7hD,GAEvDnb,EAAApB,KAAAU,KAAMu6D,EAAMmD,EAAY7hD,EAExB7b,MAAK29D,YAAcD,EAMbD,EAAAl9D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAIA,EAAUs8B,UAAUp8D,MACvB8/B,EAAU89B,gBAAgB59D,KAAK29D,aAO1BF,GAAAl9D,UAAA+7D,gBAAP,WAEC,MAAO,OA9BMmB,GAAAp1D,GAAY,gBAgC3B,OAAAo1D,IAlC6BpD,EAoCL56D,GAAAJ,QAAfo+D,IvF8geNhD,0CAA0C,4CAA4CP,yCAAyC,SAAS37D,EAAQkB,EAAOJ,GwF1je1J,GAAOoiB,GAAmBljB,EAAa,6CxF+jevC,IwFtjeMw7D,GAAQ,WAqDb,QArDKA,KAKE/5D,KAAAu7D,aAA4B,GAAI/1D,MAChCxF,MAAAs7D,gBAAyB,CAMzBt7D,MAAAo7D,YAAqB,EAM5Bz6D,OAAAC,eAAWm5D,EAAAx5D,UAAA,gBxFijeJM,IwFjjeP,WAEC,MAAOb,MAAK69D,uBxFkjeNl7D,IwF/ieP,SAAwBC,GAEvB,GAAI5C,KAAK69D,uBAAyBj7D,EACjC,MAED5C,MAAK69D,sBAAwBj7D,CAE7B5C,MAAK67D,6BAA6B77D,KAAK2U,OAAQ3U,KAAK2U,OAAOmnD,qBAAuB,QxF8ie5E/6D,WAAY,KACZC,aAAc,MwF3ierBL,QAAAC,eAAWm5D,EAAAx5D,UAAA,wBxF8ieJM,IwF9ieP,WAEC,MAAOb,MAAK89D,uBxF+ieNn7D,IwF5ieP,SAAgCC,GAE/B,GAAI5C,KAAK89D,uBAAyBl7D,EACjC,MAED5C,MAAK89D,sBAAwBl7D,CAE7B,KAAK,GAAI5D,GAAW,EAAGA,EAAIgB,KAAKs7D,kBAAmBt8D,EAClDgB,KAAKu7D,aAAav8D,GAAG68D,6BAA6B77D,KAAK89D,wBxF2ielD/8D,WAAY,KACZC,aAAc,MwF3hed+4D,GAAAx5D,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASD0lC,GAAAx5D,UAAAq8D,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAOD/C,GAAAx5D,UAAA+7D,gBAAP,WAEC,MAAO,MAQDvC,GAAAx5D,UAAAi7D,kBAAP,SAAyBC,GAExB,MAAOz7D,MAOD+5D,GAAAx5D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAI9/B,KAAKo7D,aAAe,IAAMp7D,KAAKy8D,uBAClC,MAED,IAAI38B,EAAUs8B,UAAUp8D,MAAO,CAC9B,IAAK,GAAIhB,GAAW,EAAGA,EAAIgB,KAAKs7D,gBAAiBt8D,IAChDgB,KAAKu7D,aAAav8D,GAAGw7D,gBAAgB16B,EAEtC,IAAI9/B,KAAKy8D,wBAA0B38B,EAAU48B,kBAC5C58B,EAAU08B,YAAYx8D,KAAK28D,gBAQvB5C,GAAAx5D,UAAAw9D,iBAAP,SAAwBj+B,GAEvB,GAAI9/B,KAAK28D,eAAiB,KACzB38D,KAAK28D,cAAgB38D,KAAKm9D,qBAE3Br9B,GAAU08B,YAAYx8D,KAAK28D,eAQrB5C,GAAAx5D,UAAAq7D,SAAP,SAAgBH,GAEfA,EAAK9mD,OAAS3U,IACdA,MAAKo7D,aAAeK,EAAKL,WACzBp7D,MAAKu7D,aAAcv7D,KAAKs7D,mBAAsBG,CAE9CA,GAAKI,6BAA6B77D,KAAK87D,qBAEvC,IAAIV,GAAqBK,EAAKL,WAC9BK,GAAOz7D,IAEP,GAAG,CACFy7D,EAAKL,aAAeA,SACXK,EAAOA,EAAK9mD,SAAW,MAQ3BolD,GAAAx5D,UAAAw7D,YAAP,SAAmBN,GAElB,GAAIt1D,GAAenG,KAAKu7D,aAAav+C,QAAQy+C,EAC7Cz7D,MAAKu7D,aAAap1D,GAASnG,KAAKu7D,eAAev7D,KAAKs7D,gBACpDt7D,MAAKu7D,aAAayC,KAElBvC,GAAKI,6BAA6B,MAElC,IAAIT,GAAqBK,EAAKL,WAC9BK,GAAOz7D,IAEP,GAAG,CACFy7D,EAAKL,aAAeA,SACXK,EAAOA,EAAK9mD,SAAW,MAG3BolD,GAAAx5D,UAAAs7D,6BAAP,SAAoCj5D,GAEnC,GAAI5C,KAAKy8D,wBAA0Bz8D,KAAK69D,uBAAyBj7D,EAChE,MAED5C,MAAKy8D,uBAAyBz8D,KAAK69D,uBAAyBj7D,CAE5D,KAAK,GAAI5D,GAAW,EAAGA,EAAIgB,KAAKs7D,kBAAmBt8D,EAClDgB,KAAKu7D,aAAav8D,GAAG68D,6BAA6B77D,KAAK89D,sBAExD,IAAI99D,KAAKy8D,uBAAwB,CAChCz8D,KAAK28D,cAAgB38D,KAAKm9D,0BACpB,CAENn9D,KAAK28D,cAAgB,MAKhB5C,GAAAx5D,UAAA88D,kBAAP,WAEC,GAAIr9D,KAAKy8D,uBAAwB,CAEhCz8D,KAAK28D,cAAgB38D,KAAKm9D,uBAIrBpD,GAAAx5D,UAAA48D,oBAAP,WAEC,KAAM,IAAI17C,GAEZ,OAAAs4C,KAEAt6D,GAAkBJ,QAAT06D,IxFqgeNv2C,6CAA6CpiB,YAAY+4D,8CAA8C,SAAS57D,EAAQkB,EAAOJ,GyFztelI,GAAO4+D,GAAc1/D,EAAc,yCzF8tenC,IyFtteMy7D,GAAa,WAQlB,QARKA,KAKGh6D,KAAAk+D,aAAuB,KAK9Bl+D,MAAKm+D,gBAAkB,GAAIF,GAAej+D,MAGpCg6D,EAAAz5D,UAAAw/B,SAAP,SAAgBD,GAEf,GAAI9/B,KAAKk+D,aACRl+D,KAAKo+D,gBAENp+D,MAAKi6D,UAAUO,gBAAgB16B,GAGzBk6B,GAAAz5D,UAAA89D,eAAP,SAAsB5C,GAErB,GAAIh9D,GAAuBuB,KAAKs+D,YAEhC,OAAO7/D,EAAG,CACT,GAAIg9D,GAAQh9D,EACX,MAEDA,GAAIA,EAAE8/D,kBAGP9C,EAAK8C,kBAAoBv+D,KAAKs+D,YAE9Bt+D,MAAKs+D,aAAe7C,CACpBz7D,MAAKk+D,aAAe,KAGdlE,GAAAz5D,UAAAi+D,cAAP,SAAqB/C,GAEpB,GAAIh9D,EAEJ,IAAIg9D,EAAK9mD,OAAQ,CAChB8mD,EAAK9mD,OAAOonD,YAAYN,EACxBA,GAAK9mD,OAAS,KAIf,GAAI8mD,GAAQz7D,KAAKs+D,aAAc,CAC9Bt+D,KAAKs+D,aAAe7C,EAAK8C,sBACnB,CACN9/D,EAAIuB,KAAKs+D,YACT,OAAO7/D,GAAKA,EAAE8/D,mBAAqB9C,EAClCh9D,EAAIA,EAAE8/D,iBAEP,IAAI9/D,EACHA,EAAE8/D,kBAAoB9C,EAAK8C,kBAG7B9C,EAAK8C,kBAAoB,IAEzB,KAAKv+D,KAAKs+D,aACTt+D,KAAKk+D,aAAe,MAGdlE,GAAAz5D,UAAA69D,eAAR,WAEC,GAAI3C,GAA0Bz7D,KAAKs+D,YACnC,OAAO7C,EAAM,CAEZA,EAAK9rC,cAAcxS,kBACnBs+C,GAAOA,EAAK8C,kBAIb9C,EAAOz7D,KAAKs+D,YACZ,IAAIG,EACJ,IAAIhgE,EACJuB,MAAKs+D,aAAe,IACpBt+D,MAAKk+D,aAAe,KAEpB,GAAG,CACFO,EAAaz+D,KAAKi6D,UAAUuB,kBAAkBC,EAE9C,IAAIA,EAAK9mD,QAAU8pD,EAAY,CAC9B,GAAIhD,EAAK9mD,OACR8mD,EAAK9mD,OAAOonD,YAAYN,EACzBgD,GAAW7C,SAASH,GAGrBh9D,EAAIg9D,EAAK8C,iBACT9C,GAAK8C,kBAAoB,YAEhB9C,EAAOh9D,IAAM,MAMjBu7D,GAAAz5D,UAAA2b,iBAAP,SAAwByT,GAEvB,GAAIA,EAAcnU,SACjBxb,KAAKq+D,eAAer+D,KAAKm+D,gBAAgBxC,QAAQhsC,IAM5CqqC,GAAAz5D,UAAAyb,mBAAP,SAA0B2T,GAEzB,GAAIA,EAAcnU,SACjBxb,KAAKw+D,cAAcx+D,KAAKm+D,gBAAgBO,YAAY/uC,IAEvD,OAAAqqC,KAEuBv6D,GAAAJ,QAAd26D,IzFsreN2E,yCAAyC,2CAA2CC,+CAA+C,SAASrgE,EAAQkB,EAAOJ,GAC9J,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0FvzetB,IAAOg6D,GAAU97D,EAAe,0C1F6zehC,I0FpzeMsgE,GAAc,SAAAn+D,GAASX,EAAvB8+D,EAAcn+D,EAUnB,SAVKm+D,GAUOtE,EAAqBuE,EAAuBjjD,GAEvDnb,EAAApB,KAAAU,KAAMu6D,EAAMuE,EAAYjjD,EAExB7b,MAAK++D,YAAcD,EAMbD,EAAAt+D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAIA,EAAUs8B,UAAUp8D,MACvB8/B,EAAUk/B,gBAAgBh/D,KAAK++D,aAO1BF,GAAAt+D,UAAA+7D,gBAAP,WAEC,MAAO,OA9BMuC,GAAAx2D,GAAY,gBAgC3B,OAAAw2D,IAlC6BxE,EAoCL56D,GAAAJ,QAAfw/D,I1F6yeNpE,0CAA0C,4CAA4CwE,oDAAoD,SAAS1gE,EAAQkB,EAAOJ,GACrK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2F71etB,IAAO25D,GAAaz7D,EAAc,6CAClC,IAAO2gE,GAAiB3gE,EAAa,4C3Fm2erC,I2F91eM4gE,GAAmB,SAAAz+D,GAASX,EAA5Bo/D,EAAmBz+D,EAIxB,SAJKy+D,GAIOC,GAEX1+D,EAAApB,KAAAU,KAEAA,MAAKq/D,mBAAqB,GAAIH,GAAkBl/D,KAEhDA,MAAKi6D,UAAYj6D,KAAKq/D,mBAAmB1D,QAAQyD,GAG3CD,EAAA5+D,UAAAw/B,SAAP,SAAgBD,GAEfp/B,EAAAH,UAAMw/B,SAAQzgC,KAAAU,KAAC8/B,GAMTq/B,GAAA5+D,UAAA2b,iBAAP,SAAwByT,GAEvBjvB,EAAAH,UAAM2b,iBAAgB5c,KAAAU,KAAC2vB,EAEvB,IAAIA,EAAc+rC,YACjB17D,KAAKq+D,eAAer+D,KAAKq/D,mBAAmB1D,QAAiChsC,IAMxEwvC,GAAA5+D,UAAAyb,mBAAP,SAA0B2T,GAEzBjvB,EAAAH,UAAMyb,mBAAkB1c,KAAAU,KAAC2vB,EAEzB,IAAIA,EAAc+rC,YACjB17D,KAAKw+D,cAAcx+D,KAAKq/D,mBAAmBX,YAAqC/uC,IAEnF,OAAAwvC,IAvCkCnF,EAyCLv6D,GAAAJ,QAApB8/D,I3Fm1eNhF,6CAA6C,6CAA6CmF,4CAA4C,8CAA8CC,2CAA2C,SAAShhE,EAAQkB,EAAOJ,GAC1P,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Fx4etB,IAAOg6D,GAAU97D,EAAe,0C5Fg5ehC,I4Fr4eMihE,GAAU,SAAA9+D,GAASX,EAAnBy/D,EAAU9+D,EAUf,SAVK8+D,GAUOjF,EAAqBkF,EAAe5jD,GAE/Cnb,EAAApB,KAAAU,KAAMu6D,EAAMkF,EAAQ5jD,EAEpB7b,MAAK0/D,QAAUD,EAMTD,EAAAj/D,UAAAi6D,gBAAP,SAAuB16B,GAEtB,GAAIA,EAAUs8B,UAAqBp8D,MAClC8/B,EAAU6/B,YAAY3/D,KAAK0/D,SAStBF,GAAAj/D,UAAA4zB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKr0B,KAAK0/D,QAAQriD,YACjB,MAAO,MAGR,OAAO,MApCMmiD,GAAAn3D,GAAY,YAsC3B,OAAAm3D,IAxCyBnF,EA0CL56D,GAAAJ,QAAXmgE,I5F63eN/E,0CAA0C,4CAA4CmF,mCAAmC,SAASrhE,EAAQkB,EAAOJ,SAE9IwgE,4CAA4C,SAASthE,EAAQkB,EAAOJ,SAEpEygE,6CAA6C,SAASvhE,EAAQkB,EAAOJ,G6F17e3E,GAAO2L,GAAQzM,EAAiB,gCAChC,IAAOwM,GAAKxM,EAAiB,6B7Fo8e7B,I6Fh7eMwhE,GAAiB,WAStB,QATKA,GASOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEXhgE,KAAKigE,sBAAwBD,EAYvBD,EAAAx/D,UAAA0wC,uBAAP,SAA8BivB,EAAqB32D,EAAuBC,EAAuCC,GAEhHD,EAAmBkvC,gBAAkB,IAUrC,OAAO,OAYDqnB,GAAAx/D,UAAA6yB,sBAAP,SAA6B+sC,EAAyC52D,EAAuBC,EAAuCC,GAEnI,GAAIozD,GAAuBrzD,EAAmBwzD,gBAC9C,IAAIF,GAAwBtzD,EAAmByzD,iBAC/C,IAAIx+D,EACJ,IAAI2hE,GAAWC,EAAWC,CAC1B,IAAI1oC,GAAWC,EAAWC,CAC1B,IAAIhxB,GAAWC,EAAWw5D,CAC1B,IAAIl7D,GAAWC,EAAWuwB,CAC1B,IAAI2qC,GAAc1hE,EAAU2I,EAAUC,CACtC,IAAIyP,GAAYC,EAAYqpD,CAC5B,IAAIppD,GAAYC,EAAYopD,CAC5B,IAAInpD,GAAYC,EAAYmpD,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAI/4D,GAAsBw3D,EAAoBx3D,QAAQ9H,IAAIs/D,EAAoBwB,YAC9E,IAAIC,IAAiC,CACrC,IAAIC,GAAoBt4D,EAASs4D,SAEjC,IAAIj+D,GAAyBu8D,EAAoBv8D,UAAU/C,IAAIs/D,EAAoB17D,YACnF,IAAIZ,GAAgBs8D,EAAoBv8D,UAAUE,UAClD,IAAI+E,GAAmBs3D,EAAoBt3D,IAAIhI,IAAIs/D,EAAoB17D,YACvE,IAAIq9D,IAAe3B,EAAoBt3D,IAAI/E,UAC3C,IAAIi+D,IAAoBp5D,EAAQpJ,MAChC,KAAK,GAAI4G,IAAe,EAAGA,GAAQ47D,GAAY57D,IAAS,EAAG,CAE1Di6D,EAAKz3D,EAAQxC,IAAOtC,CACpBw8D,GAAK13D,EAAQxC,GAAQ,GAAGtC,CACxBy8D,GAAK33D,EAAQxC,GAAQ,GAAGtC,CAGxBsT,GAAMvT,EAAUw8D,EAChBhpD,GAAMxT,EAAUw8D,EAAK,EACrBK,GAAM78D,EAAUw8D,EAAK,EACrB/oD,GAAMzT,EAAUy8D,EAChB/oD,GAAM1T,EAAUy8D,EAAK,EACrBK,GAAM98D,EAAUy8D,EAAK,EACrB9oD,GAAM3T,EAAU08D,EAChB9oD,GAAM5T,EAAU08D,EAAK,EACrBK,GAAM/8D,EAAU08D,EAAK,EAGrBM,GAAMvpD,EAAMF,CACZ0pD,GAAMvpD,EAAMF,CACZ0pD,GAAMJ,EAAMD,CACZM,GAAMxpD,EAAMJ,CACZ6pD,GAAMxpD,EAAMJ,CACZ6pD,GAAMN,EAAMF,CACZ35D,GAAK+5D,EAAII,EAAMH,EAAIE,CACnBj6D,GAAK+5D,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAE99D,KAAKoB,KAAKsC,EAAGA,EAAKC,EAAGA,EAAKw5D,EAAGA,EACpCz5D,IAAMo6D,CACNn6D,IAAMm6D,CACNX,IAAMW,CAGNC,GAAQr6D,EAAGg2D,EAAa75D,EAAI8D,GAAK+1D,EAAa55D,EAAIq9D,EAAGzD,EAAav2D,CAClE,KAAOs7D,GAAaV,EAAQ,GAAWU,GAAaV,GAAS,EAAO,CAEnEC,IAAOt6D,EAAGqQ,EAAMpQ,EAAGqQ,EAAMmpD,EAAGE,EAC5BY,KAAgBv6D,EAAG+1D,EAAY55D,EAAI8D,EAAG81D,EAAY35D,EAAIq9D,EAAG1D,EAAYt2D,EAAI66D,EACzE3iE,GAAI4iE,EAAWF,CAEf97D,GAAKw3D,EAAY55D,EAAIxE,EAAEq+D,EAAa75D,CACpCqC,GAAKu3D,EAAY35D,EAAIzE,EAAEq+D,EAAa55D,CACpC2yB,GAAKgnC,EAAYt2D,EAAI9H,EAAEq+D,EAAav2D,CAEpC+6D,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BrpC,GAAKvyB,EAAK8R,CACV0gB,GAAKvyB,EAAK8R,CACV0gB,GAAKjC,EAAK4qC,CACVgB,GAAM7pC,EAAGgpC,EAAM/oC,EAAGgpC,EAAM/oC,EAAGgpC,CAC3BY,GAAM9pC,EAAGmpC,EAAMlpC,EAAGmpC,EAAMlpC,EAAGmpC,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5B75D,GAAI+4D,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3Bh6D,GAAI84D,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAIj6D,EAAI,EACP,QACD,IAAIC,EAAI,EACP,QACD5I,GAAI,EAAI2I,EAAIC,CACZ,MAAO5I,EAAI,IAAOL,EAAI,GAAKA,EAAIgL,EAA2B,CACzDA,EAA4BhL,CAC5BmjE,GAAyBz7D,GAAM,CAC/BqD,GAAmB87B,iBAAmB7mC,CACtC+K,GAAmBi5B,cAAgB,GAAIz3B,GAAS3F,EAAIC,EAAIuwB,EACxDrsB,GAAmBk8C,YAAc,GAAI16C,GAASlE,EAAIC,EAAIw5D,EACtD/2D,GAAmBi8C,GAAKzlD,KAAKgiE,gBAAgBr5D,EAASE,EAAK1C,GAAOsB,EAAGC,EAAG5I,EAAGgjE,GAC3Et4D,GAAmBrD,MAAQA,EAI3B,KAAKnG,KAAKigE,sBACT,MAAO,QAMX,GAAI2B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAYD7B,GAAAx/D,UAAAmJ,mBAAP,SAA0Bu4D,EAAmC14D,EAAuBC,EAAuCC,GAE1H,GAAIozD,GAAuBrzD,EAAmBwzD,gBAC9C,IAAIF,GAAwBtzD,EAAmByzD,iB7F+5ezC,I6F35eFzoC,GAAiB,GAAIxpB,GAAS,EAAE,GAAG,EAAE,EAEzC,IAAIq6C,GAAkB,GAAIr6C,EAC1B,IAAI2P,GAAkB6Z,EAAMvxB,EAAI45D,EAAY55D,EAAIuxB,EAAMtxB,EAAI25D,EAAY35D,EAAIsxB,EAAMjuB,EAAIs2D,EAAYt2D,EAAIiuB,EAAM9sB,CAC1G29C,GAAOpiD,EAAI45D,EAAY55D,EAAMuxB,EAAMvxB,EAAE0X,CACrC0qC,GAAOniD,EAAI25D,EAAY35D,EAAMsxB,EAAMtxB,EAAEyX,CACrC0qC,GAAO9+C,EAAIs2D,EAAYt2D,EAAMiuB,EAAMjuB,EAAEoU,CACrC,IAAIunD,GAAkB,GAAIl3D,GAASwpB,EAAMvxB,EAAEuxB,EAAMtxB,EAAEsxB,EAAMjuB,EACzD,IAAI9H,IAAao+D,EAAYsF,WAAWD,GAAUpF,EAAaqF,WAAWD,EAC1EpF,GAAa7yB,QAAQxrC,EACrB,IAAI0B,GAAa08D,EAAY7yB,IAAI8yB,EAEjC,IAAIn0D,GAAsBs5D,EAAiBt5D,QAAQ9H,IAAIohE,EAAiBN,YACxE,IAAIS,IAA8B,CAClC,IAAIP,GAAoBt4D,EAASs4D,SAGjC,IAAIj+D,GAAyBq+D,EAAiBr+D,UAAU/C,IAAIohE,EAAiBx9D,YAC7E,IAAIZ,GAAgBo+D,EAAiBr+D,UAAUE,UAC/C,IAAI2C,GAAsBw7D,EAAiBx7D,OAAO5F,IAAIohE,EAAiBx9D,YACvE,IAAI+B,GAAkBy7D,EAAiBx7D,OAAO3C,UAC9C,IAAI+E,GAAmBo5D,EAAiBp5D,IAAIhI,IAAIohE,EAAiBx9D,YACjE,IAAIq9D,GAAeG,EAAiBp5D,IAAI/E,UACxC,IAAIi+D,GAAoBp5D,EAAQpJ,MAGhC,KAAI,GAAI4G,GAAe,EAAGA,EAAQ47D,EAAY57D,GAAO,EACrD,CACC,GAAIrB,GAAa6D,EAAQxC,EACzB,IAAIpB,GAAa4D,EAAQxC,EAAQ,GAAKtC,CACtC,IAAImB,GAAa2D,EAAQxC,EAAQ,GAAKtC,CAEtC,IAAIoB,GAAYrB,EAAUkB,EAAMjB,EAChC,IAAIqB,GAAYtB,EAAUkB,EAAMjB,EAAS,EACzC,IAAIsB,GAAYvB,EAAUmB,EAC1B,IAAIK,GAAYxB,EAAUmB,EAAM,EAChC,IAAIM,GAAYzB,EAAUoB,EAC1B,IAAIM,GAAY1B,EAAUoB,EAAM,EAEhC,IAAIiC,GAAgBR,EAAO3B,EAAM0B,EACjC,IAAIqB,GAAYjE,EAAUkB,EAAMjB,EAAS,E7Fq5ehC,I6Fh5eL+C,GAAY3B,EAAK9E,EAAE8C,CACvB,IAAI4D,GAAY3B,EAAK/E,EAAE+C,C7Fk5ed,I6F/4eL4D,GAAY1B,EAAKF,CACrB,IAAI6B,KAAc5B,EAAKF,E7Fi5ed,I6F74eL+B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EACT,QAEDJ,GAAKzB,EAAKhF,EAAE8C,CACZ4D,GAAKzB,EAAKjF,EAAE+C,CACZ4D,GAAKxB,EAAKF,CACV2B,KAAO1B,EAAKF,EAEZ6B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAEDJ,GAAKvB,EAAKlF,EAAE8C,CACZ4D,GAAKvB,EAAKnF,EAAE+C,CACZ4D,GAAK5B,EAAKI,CACVyB,KAAO9B,EAAKI,EAEZ2B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAGD,IAAIC,GAAU,EAAG,CAEhB,GAAIC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKF,CACtB,IAAIkC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAa/B,EAAKJ,CACtB,IAAIoC,GAAanH,EAAE8C,EAAIgC,CACvB,IAAIsC,GAAapH,EAAE+C,EAAIgC,CAEvB,IAAIsC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAI1I,GAAW,EAAI2I,EAAIC,CAEvB,IAAIC,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIzH,GAAW0H,EAAKA,EAAKC,CAEzB,IAAK3H,EAAI,GAAK4H,IAAO,GAAO5H,EAAI,GAAK4H,GAAM,EAC1C,SAIF,GAAI8S,EAAWlR,EAA2B,CACzCA,EAA4BkR,CAC5BynD,GAAsBj8D,EAAM,CAC5BqD,GAAmB87B,iBAAmB3qB,CACtCnR,GAAmBi5B,cAAgBtiC,CACnCqJ,GAAmBk8C,YAAc,GAAI16C,GAAS,EAAG,EAAG,EACpDxB;EAAmBi8C,GAAKzlD,KAAKgiE,gBAAgBr5D,EAASE,EAAK1C,EAAOsB,EAAGC,EAAG5I,EAAGgjE,EAC3Et4D,GAAmBrD,MAAQA,CAI3B,KAAKnG,KAAKigE,sBACT,MAAO,OAIV,GAAImC,GAAuB,EAC1B,MAAO,KAER,OAAO,OAYDrC,GAAAx/D,UAAAmkB,kBAAP,SAAyB29C,EAAiC94D,EAAuBC,EAAuCC,GAEvH,MAAO,OAIAs2D,GAAAx/D,UAAAyhE,gBAAR,SAAwBr5D,EAAqB25D,EAAqBC,EAAsB96D,EAAUC,EAAU5I,EAAUgjE,GAErH,GAAIrc,GAAW,GAAI16C,EACnB,IAAIy3D,GAAgB75D,EAAQ45D,GAAeT,CAC3C,IAAIW,GAAe,GAAIz3D,GAASs3D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS75D,EAAQ45D,EAAgB,GAAGT,CACpC,IAAIY,GAAe,GAAI13D,GAASs3D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS75D,EAAQ45D,EAAgB,GAAGT,CACpC,IAAIa,GAAe,GAAI33D,GAASs3D,EAAOE,GAASF,EAAOE,EAAS,GAChE/c,GAAGxiD,EAAInE,EAAE2jE,EAAIx/D,EAAIwE,EAAEi7D,EAAIz/D,EAAIyE,EAAEi7D,EAAI1/D,CACjCwiD,GAAGviD,EAAIpE,EAAE2jE,EAAIv/D,EAAIuE,EAAEi7D,EAAIx/D,EAAIwE,EAAEi7D,EAAIz/D,CACjC,OAAOuiD,GAET,OAAAsa,KAEAtgE,GAA2BJ,QAAlB0gE,I7F63eNngD,6BAA6Bxe,UAAU0e,gCAAgC1e,YAAYgf,8CAA8C,SAAS7hB,EAAQkB,EAAOJ,GAS5J,G8FttfMgM,GAAkB,WA0EvB,QA1EKA,GA0EOskB,GAEX3vB,KAAK2vB,cAAgBA,EAGvB,MAAAtkB,KAEA5L,GAA4BJ,QAAnBgM,O9FkpfHu6B,yCAAyC,SAASrnC,EAAQkB,EAAOJ,G+FjvfvE,GAAO2L,GAAQzM,EAAgB,gCAU/B,IAAOqkE,GAAgBrkE,EAAc,+C/FivfrC,I+FvufM4hC,GAAa,WAiClB,QAjCKA,GAiCO6/B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJhgE,KAAA6iE,mBACA7iE,MAAA8iE,kBAA4B,IAG5B9iE,MAAA+iE,aAAsB,CAwB7B/iE,MAAKgjE,kBAAoB,GAAIJ,EAE7B5iE,MAAKigE,sBAAwBD,CAC7BhgE,MAAKijE,UAAY,GAAIz9D,OArBtB7E,OAAAC,eAAWu/B,EAAA5/B,UAAA,oB/F0ufJM,I+F1ufP,WAEC,MAAOb,MAAK8iE,mB/F2ufNngE,I+FxufP,SAA4BC,GAE3B5C,KAAK8iE,kBAAoBlgE,G/FyufnB7B,WAAY,KACZC,aAAc,M+Fttfdm/B,GAAA5/B,UAAAgkC,iBAAP,SAAwBthC,EAAUC,EAAUsiD,GAE3CxlD,KAAKuN,GAAKtK,CACVjD,MAAKwN,GAAKtK,CACVlD,MAAKkjE,MAAQ1d,C/F4tfP,I+FztfFqX,GAAuBrX,EAAKnjB,UAAUp/B,EAAGC,EAAG,EAChD,IAAI45D,GAAwBtX,EAAKnjB,UAAUp/B,EAAGC,EAAG,GAAGwV,SAASmkD,EAE7D,OAAO78D,MAAKmjE,kBAAkBtG,EAAaC,EAActX,EAAK5pC,OAMxDukB,GAAA5/B,UAAA4iE,kBAAP,SAAyBtG,EAAsBC,EAAuBlhD,GAGrE5b,KAAKgjE,kBAAkBrpD,OAGvB3Z,MAAKgjE,kBAAkBnG,YAAcA,CACrC78D,MAAKgjE,kBAAkBlG,aAAeA,CAGtClhD,GAAMikB,mBAAmB7/B,KAAKgjE,kBAE9BhjE,MAAK+iE,aAAe,CACpB,IAAItH,GAAsBz7D,KAAKgjE,kBAAkBI,UACjD,IAAI7/C,EAEJ,OAAOk4C,EAAM,CACZ,IAAKz7D,KAAKqjE,UAAU9/C,EAASk4C,EAAKl4C,QACjCvjB,KAAKijE,UAAUjjE,KAAK+iE,gBAAkBx/C,CAEvCk4C,GAAOA,EAAK6H,KAIb,IAAKtjE,KAAK+iE,aACT,MAAO,KAER,OAAO/iE,MAAKujE,sBAAsBvjE,KAAKgjE,mBAoBjC7iC,GAAA5/B,UAAAijE,cAAP,SAAqBC,GAEpBzjE,KAAK6iE,iBAAmBY,EAGjBtjC,GAAA5/B,UAAA8iE,UAAR,SAAkB9/C,GAEjB,GAAIvjB,KAAK8iE,oBAAsBv/C,EAAOvF,mBACrC,MAAO,KAER,IAAIxO,GAAaxP,KAAK6iE,iBAAiBtjE,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/B,GAAIgB,KAAK6iE,iBAAiB7jE,IAAMukB,EAC/B,MAAO,KAET,OAAO,OAGA4c,GAAA5/B,UAAAmjE,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ5G,qBAAqBz3B,iBAAmBs+B,EAAQ7G,qBAAqBz3B,iBAAkB,GAAK,EAGpGnF,GAAA5/B,UAAAgjE,sBAAR,SAA8BM,GAG7B7jE,KAAKijE,UAAU1jE,OAASS,KAAK+iE,YAG7B/iE,MAAKijE,UAAYjjE,KAAKijE,UAAUa,KAAK9jE,KAAK0jE,Y/FwsfpC,I+FjsfFj6D,GAAmC1F,OAAOC,SAC9C,IAAI+/D,EACJ,IAAIv6D,EACJ,IAAI+Z,EACJ,IAAIvkB,EAEJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAK+iE,eAAgB/jE,EAAG,CACvCukB,EAASvjB,KAAKijE,UAAUjkE,EACxBwK,GAAqB+Z,EAAOw5C,oBAC5B,IAAIx5C,EAAOja,gBAAiB,CAE3B,IAAKy6D,GAAmB,MAAQv6D,EAAmB87B,iBAAmBy+B,EAAgBz+B,mBAAqB/hB,EAAOla,gBAAgBI,EAA2BzJ,KAAKigE,uBAAwB,CACzLx2D,EAA4BD,EAAmB87B,gBAC/Cy+B,GAAkBv6D,CAClB,KAAKxJ,KAAKigE,sBAAuB,CAChCjgE,KAAKgkE,oBAAoBx6D,EACzB,OAAOA,SAGH,IAAIu6D,GAAmB,MAAQv6D,EAAmB87B,iBAAmBy+B,EAAgBz+B,iBAAkB,CAK7G,IAAK97B,EAAmB0zD,yBAA2Bl9D,KAAKikE,kBAAkB1gD,EAAO7F,mBAAqB,CACrG1d,KAAKgkE,oBAAoBx6D,EACzB,OAAOA,KAKV,MAAOu6D,GAGA5jC,GAAA5/B,UAAA0jE,kBAAR,SAA0B1vD,GAGzB,GAAIA,GAAS,KAAM,CAClB,GAAI0B,GAAoBjW,KAAKkjE,MAAM7gC,UAAUriC,KAAKuN,GAAIvN,KAAKwN,GAAI,IAC/D,IAAI0R,GAAmB3K,EAAMhV,MAC7B,IAAI2kE,EACJ,IAAI/kD,EACJ,IAAIglD,EACJ,KAAK,GAAInlE,GAAW,EAAGA,EAAIkgB,EAAWlgB,IAAK,CAC1CklE,EAAW3vD,EAAMvV,EACjBmgB,GAAc+kD,EAAS3kE,MACvB4kE,GAAW,KACX,KAAK,GAAIj+D,GAAW,EAAGA,EAAIiZ,EAAajZ,IAAK,CAC5C,GAAIg+D,EAASh+D,GAAGI,aAAa2P,EAAShT,EAAGgT,EAAS/S,EAAG,KAAM,MAAO,CACjEihE,EAAW,IACX,QAIF,IAAKA,EACJ,MAAO,QAIV,MAAO,MAIAhkC,GAAA5/B,UAAAyjE,oBAAR,SAA4Bx6D,GAE3B,GAAI46D,GAA0B56D,EAAmBi5B,eAAiB,KAASj5B,EAAmBi5B,cAAgB,GAAIz3B,GAAcxB,EAAmBi5B,aAEnJ,IAAI4hC,GAAkB76D,EAAmByzD,iBACzC,IAAIqH,GAAkB96D,EAAmBwzD,gBACzC,IAAIv+D,GAAW+K,EAAmB87B,gBAClC8+B,GAAanhE,EAAIqhE,EAAOrhE,EAAIxE,EAAE4lE,EAAOphE,CACrCmhE,GAAalhE,EAAIohE,EAAOphE,EAAIzE,EAAE4lE,EAAOnhE,CACrCkhE,GAAa79D,EAAI+9D,EAAO/9D,EAAI9H,EAAE4lE,EAAO99D,EAG/B45B,GAAA5/B,UAAAU,QAAP,YAID,OAAAk/B,KAEuB1gC,GAAAJ,QAAd8gC,I/FwrfNrgB,gCAAgC1e,UAAUmjE,+CAA+C,iDAAiDjF,6CAA6C,SAAS/gE,EAAQkB,EAAOJ,GgG36flN,GAAOs7D,GAAap8D,EAAc,6ChGg7flC,IgG16fM2gE,GAAiB,WAYtB,QAZKA,GAYOrjD,GARJ7b,KAAAq/D,mBAA4B,GAAI1+D,OAUvCX,MAAKm7D,WAAat/C,EASZqjD,EAAA3+D,UAAAo7D,QAAP,SAAe6I,GAEd,MAAQxkE,MAAKq/D,mBAAmBmF,EAAuBn8D,MAAQrI,KAAKq/D,mBAAmBmF,EAAuBn8D,IAAMm8D,EAAuBtpC,mBAAmB,GAAIy/B,GAAc36D,KAAMwkE,EAAwBxkE,KAAKm7D,cAQ7M+D,GAAA3+D,UAAAm+D,YAAP,SAAmB8F,GAElB,GAAIC,GAA8BzkE,KAAKq/D,mBAAmBmF,EAAuBn8D,GAEjF,IAAIo8D,EAAe,CAClBD,EAAuBrpC,sBAAsBspC,SAEtCzkE,MAAKq/D,mBAAmBmF,EAAuBn8D,IAGvD,MAAOo8D,GAzCOvF,GAAAwF,WAAoB,GAAI/jE,OA2CxC,OAAAu+D,KAEAz/D,GAA2BJ,QAAlB6/D,IhGg6fNxE,6CAA6C,+CAA+CiK,8CAA8C,SAASpmE,EAAQkB,EAAOJ,GiGt9frK,GAAOulE,GAAcrmE,EAAc,yCjG29fnC,IiGt9fMsmE,GAAkB,WASvB,QATKA,KAGG7kE,KAAA8kE,OAAgB,CAChB9kE,MAAA+kE,UAAmB,CAO1B/kE,MAAKi7D,MAAQ,GAAIz1D,OAMXq/D,EAAAtkE,UAAAo7D,QAAP,WAEC,GAAIqJ,EACJ,IAAIhlE,KAAK8kE,QAAU9kE,KAAK+kE,UAAW,CAClCC,EAAO,GAAIJ,EACX5kE,MAAKi7D,MAAMj7D,KAAK8kE,UAAYE,IAC1BhlE,KAAK+kE,cACD,CACNC,EAAOhlE,KAAKi7D,MAAMj7D,KAAK8kE,UAExB,MAAOE,GAMDH,GAAAtkE,UAAA0kE,QAAP,WAECjlE,KAAK8kE,OAAS,EAGRD,GAAAtkE,UAAAU,QAAP,WAECjB,KAAKi7D,MAAM17D,OAAS,EAEtB,OAAAslE,KAE4BplE,GAAAJ,QAAnBwlE,IjG+8fNK,yCAAyC,2CAA2CA,0CAA0C,SAAS3mE,EAAQkB,EAAOJ,GAIzJ,GkG//fMulE,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEAnlE,GAAwBJ,QAAfulE,OlGy/fHjG,0CAA0C,SAASpgE,EAAQkB,EAAOJ,GmGvggBxE,GAAO+gC,GAAM7hC,EAAgB,qCAC7B,IAAOo1C,GAAgBp1C,EAAc,+CACrC,IAAO43C,GAAI53C,EAAiB,mCAC5B,IAAO46C,GAAS56C,EAAe,wCAC/B,IAAO4xC,GAAS5xC,EAAe,wCAC/B,IAAOg3C,GAAWh3C,EAAe,0CACjC,IAAO8/C,GAAS9/C,EAAe,wCAC/B,IAAOy9C,GAAUz9C,EAAe,yCAChC,IAAO02C,GAAU12C,EAAe,yCAChC,IAAO0+C,GAAM1+C,EAAgB,qCAC7B,IAAO+7D,GAAU/7D,EAAe,0CAEhC,IAAO09D,GAAoB19D,EAAa,oDACxC,IAAO87D,GAAU97D,EAAe,0CAChC,IAAOk/D,GAAcl/D,EAAc,8CACnC,IAAOsgE,GAActgE,EAAc,8CACnC,IAAOihE,GAAUjhE,EAAe,0CnG2ggBhC,ImGpggBM0/D,GAAc,WAYnB,QAZKA,GAYOpiD,GARJ7b,KAAAm+D,gBAAyB,GAAIx9D,OAUpCX,MAAKm7D,WAAat/C,EASZoiD,EAAA19D,UAAAo7D,QAAP,SAAehsC,GAEd,MAAQ3vB,MAAKm+D,gBAAgBxuC,EAActnB,MAAQrI,KAAKm+D,gBAAgBxuC,EAActnB,IAAMsnB,EAAc/Q,gBAAgB,IAAKq/C,EAAexlB,SAAS9oB,IAAgB3vB,KAAM2vB,EAAe3vB,KAAKm7D,cAQ3L8C,GAAA19D,UAAAm+D,YAAP,SAAmB/uC,GAElB,GAAI9Q,GAAwB7e,KAAKm+D,gBAAgBxuC,EAActnB,GAE/D,IAAIwW,EAAY,CACf8Q,EAAc7Q,mBAAmBD,SAE1B7e,MAAKm+D,gBAAgBxuC,EAActnB,IAG3C,MAAOwW,GAOMo/C,GAAAkH,cAAd,SAA4BC,EAAkC96D,GAE7D2zD,EAAeyG,WAAWp6D,EAAWpJ,WAAakkE,EAOrCnH,GAAAxlB,SAAd,SAAuB9oB,GAEtB,MAAOsuC,GAAeyG,WAAW/0C,EAAczuB,WAKjC+8D,GAAAoH,YAAf,WAECpH,EAAekH,cAAc7K,EAAYl6B,EACzC69B,GAAekH,cAAclJ,EAAsBtoB,EACnDsqB,GAAekH,cAAc9K,EAAYlkB,EACzC8nB,GAAekH,cAAc9K,EAAYlqB,EACzC8tB,GAAekH,cAAc9K,EAAY9kB,EACzC0oB,GAAekH,cAAc9K,EAAYhc,EACzC4f,GAAekH,cAAc9K,EAAYlhB,EACzC8kB,GAAekH,cAAc1H,EAAgBxoB,EAC7CgpB,GAAekH,cAActG,EAAgB7iB,EAC7CiiB,GAAekH,cAAc3F,EAAYviB,GA3E3BghB,GAAAyG,WAAoB,GAAI/jE,OA8DxBs9D,GAAAqH,KAAOrH,EAAeoH,aAetC,OAAApH,KAEAx+D,GAAwBJ,QAAf4+D,InGm/fNjuB,wCAAwC,wCAAwCxK,qCAAqC,qCAAqCiO,+CAA+C,+CAA+CuB,yCAAyC,yCAAyCM,0CAA0C,0CAA0CW,mCAAmC,mCAAmC+C,wCAAwC,wCAAwC8C,yCAAyC,yCAAyCiB,qCAAqC,qCAAqCoB,wCAAwC,wCAAwCic,0CAA0C,0CAA0C4B,oDAAoD,oDAAoDvB,0CAA0C,0CAA0C+C,8CAA8C,8CAA8CoB,8CAA8C,8CAA8CW,0CAA0C,4CAA4CgG,4CAA4C,SAAShnE,EAAQkB,EAAOJ,SAE/3CmmE,uCAAuC,SAASjnE,EAAQkB,EAAOJ,SAE/DomE,mCAAmC,SAASlnE,EAAQkB,EAAOJ,SAE3DqmE,sCAAsC,SAASnnE,EAAQkB,EAAOJ,SAE9D05C,uCAAuC,SAASx6C,EAAQkB,EAAOJ,GoGjmgBrE,GAAO0lB,GAAWxmB,EAAe,sCACjC,IAAO+0B,GAAe/0B,EAAc,0CACpC,IAAO0L,GAAY1L,EAAe,uCpGsmgBlC,IoGjmgBM23C,GAAW,WAAjB,QAAMA,MAQSA,EAAAivB,cAAd,SAA4BQ,GAE3BzvB,EAAY0vB,UAAUD,EAAar7D,WAAWpJ,WAAaykE,EAO9CzvB,GAAAuC,SAAd,SAAuBvuC,GAEtB,MAAOgsC,GAAY0vB,UAAU17D,EAAYhJ,WAK3Bg1C,GAAAmvB,YAAf,WAECnvB,EAAYivB,cAAcpgD,EAC1BmxB,GAAYivB,cAAc7xC,EAC1B4iB,GAAYivB,cAAcl7D,GA1BZisC,GAAA0vB,UAAmB,GAAIjlE,OAoBvBu1C,GAAAovB,KAAOpvB,EAAYmvB,aAQnC,OAAAnvB,KAEAz2C,GAAqBJ,QAAZ62C,IpG6lgBNnsC,uCAAuC,uCAAuC+a,sCAAsC,sCAAsCuO,0CAA0C,4CAA4CwyC,yCAAyC,SAAStnE,EAAQkB,EAAOJ,GACpT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqG/ogBtB,IAAOG,GAASjC,EAAc,oCAC9B,IAAOkjB,GAAmBljB,EAAY,6CrGqpgBtC,IqG9ogBMunE,GAAU,SAAAplE,GAASX,EAAnB+lE,EAAUplE,EASf,SATKolE,KAWJplE,EAAApB,KAAAU,KATMA,MAAA+lE,UAAiC,GAAIvgE,OAerCsgE,EAAAvlE,UAAAy2B,aAAP,WAEC,GAAI8tB,GAAuB9kD,KAAKgmE,gBAEhChmE,MAAK+lE,UAAU1/D,KAAKy+C,EAEpB,OAAOA,GAYDghB,GAAAvlE,UAAAylE,eAAP,WAEC,KAAM,IAAIvkD,GAGJqkD,GAAAvlE,UAAA4U,WAAP,YAID,OAAA2wD,IA5CyBtlE,EA8CLf,GAAAJ,QAAXymE,IrGoogBNtiD,6CAA6CpiB,UAAUD,oCAAoCC,YAAY6kE,qDAAqD,SAAS1nE,EAAQkB,EAAOJ,GACvL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsG1rgBtB,IAAO6lE,GAAmB3nE,EAAY,iDtGgsgBtC,IsG3rgBM4nE,GAAsB,SAAAzlE,GAASX,EAA/BomE,EAAsBzlE,EA6F3B,SA7FKylE,GA6FOxuC,EAAoBtzB,EAAqB+hE,EAAuBC,EAAuBC,GAAvF,GAAA3uC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAtzB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA+hE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElG5lE,EAAApB,KAAAU,KAxFOA,MAAAgC,aAAsB,CA0F7BhC,MAAKu3B,QAAUI,CACf33B,MAAKoQ,QAAU/L,CACfrE,MAAKumE,WAAaH,CAClBpmE,MAAKwmE,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDrmE,MAAKymE,KAAOH,EAzFb3lE,OAAAC,eAAWulE,EAAA5lE,UAAA,UtG2sgBJM,IsG3sgBP,WAEC,MAAOb,MAAKu3B,StG4sgBN50B,IsGzsgBP,SAAkBC,GAEjB5C,KAAKu3B,QAAU30B,CAEf5C,MAAK0mE,wBtGysgBC3lE,WAAY,KACZC,aAAc,MsGpsgBrBL,QAAAC,eAAWulE,EAAA5lE,UAAA,UtG0sgBJM,IsG1sgBP,WAEC,MAAOb,MAAKoQ,StG2sgBNzN,IsGxsgBP,SAAkBC,GAEjB5C,KAAKoQ,QAAUxN,CACf5C,MAAK0mE,wBtGysgBC3lE,WAAY,KACZC,aAAc,MsGpsgBrBL,QAAAC,eAAWulE,EAAA5lE,UAAA,atG0sgBJM,IsG1sgBP,WAEC,MAAOb,MAAKumE,YtG2sgBN5jE,IsGxsgBP,SAAqBC,GAEpB5C,KAAKumE,WAAa3jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mBtGwsgBC5lE,WAAY,KACZC,aAAc,MsGnsgBrBL,QAAAC,eAAWulE,EAAA5lE,UAAA,atGysgBJM,IsGzsgBP,WAEC,MAAOb,MAAKwmE,YtG0sgBN7jE,IsGvsgBP,SAAqBC,GAEpB5C,KAAKwmE,WAAc5jE,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9C5C,MAAK0mE,sBACL1mE,MAAK2mE,mBtGusgBC5lE,WAAY,KACZC,aAAc,MsGlsgBrBL,QAAAC,eAAWulE,EAAA5lE,UAAA,OtGwsgBJM,IsGxsgBP,WAEC,MAAOb,MAAKymE,MtGysgBN9jE,IsGtsgBP,SAAeC,GAEd5C,KAAKymE,KAAO7jE,CAEZ5C,MAAK0mE,wBtGssgBC3lE,WAAY,KACZC,aAAc,MsG9qgBdmlE,GAAA5lE,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI/E,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAI7zB,EACJ,IAAIkH,EACJ,IAAI2gE,GAAkB,CACtB,IAAI1gE,GAAe,CACnB,IAAI2gE,EACJ,IAAIC,GAAcC,EAAcC,EAAWzmB,CAC3C,IAAIuhB,GAAoB,CAExB,IAAIhrC,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE7V,MAAKgC,cAAgBhC,KAAKwmE,WAAa,IAAIxmE,KAAKumE,WAAa,EAC7DxE,IAAc/hE,KAAKwmE,WAAa,GAAGxmE,KAAKumE,WAAW,CAGnD,IAAIvmE,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CACtDkE,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,YACxD/9D,GAAYsjE,EAAiBtjE,UAAU/C,IAAIb,KAAKgC,aAChD4wB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAIb,KAAKgC,aAC5C6wB,GAAWq0C,EAAiBr0C,SAAShyB,IAAIb,KAAKgC,kBACxC,CACN2G,EAAU,GAAIyb,aAAY29C,EAC1Bn+D,GAAY,GAAIogB,cAAahkB,KAAKgC,aAAa,EAC/C4wB,GAAU,GAAI5O,cAAahkB,KAAKgC,aAAa,EAC7C6wB,GAAW,GAAI7O,cAAahkB,KAAKgC,aAAa,EAE9ChC,MAAK2mE,kBAGN,IAAKzgE,EAAI,EAAGA,GAAKlG,KAAKwmE,aAActgE,EAAG,CAEtC,GAAIihE,GAAkB/jE,KAAKgkE,GAAGlhE,EAAElG,KAAKwmE,UACrC,IAAIjgE,IAAYvG,KAAKu3B,QAAQn0B,KAAKqkC,IAAI0/B,EACtC,IAAIE,GAAoBrnE,KAAKu3B,QAAQn0B,KAAKokC,IAAI2/B,EAE9CL,GAAa3gE,CAEb,KAAKnH,EAAI,EAAGA,GAAKgB,KAAKumE,aAAcvnE,EAAG,CACtC,GAAIsoE,GAAkB,EAAElkE,KAAKgkE,GAAGpoE,EAAEgB,KAAKumE,UACvC,IAAItjE,GAAWokE,EAAWjkE,KAAKqkC,IAAI6/B,EACnC,IAAIt/D,GAAgB9B,EAAIlG,KAAKwmE,WAAW,EAAGxmE,KAAKoQ,QAAQ,GAAKpQ,KAAKoQ,QAAQ,CAC1E,IAAIlN,GAAWmkE,EAAWjkE,KAAKokC,IAAI8/B,EACnC,IAAIC,GAAiB,EAAEnkE,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAC/C,IAAIihE,GAAgBpkE,KAAKoB,KAAKtB,EAAEA,EAAID,EAAEA,EAEtC,IAAIjD,KAAKymE,KAAM,CACdQ,EAAK,CACLzmB,GAAKgnB,EAAS,KAAMvkE,EAAEukE,EAAS,CAC/BT,IAASxgE,CACTygE,GAAQ9jE,MAEF,CACN+jE,EAAKO,EAAS,KAAMvkE,EAAEukE,EAAS,CAC/BhnB,GAAK,CACLumB,GAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,GAAKgB,KAAKumE,WAAY,CAEzB3iE,EAAUuC,GAASvC,EAAUkjE,EAC7BljE,GAAUuC,EAAQ,GAAKvC,EAAUkjE,EAAa,EAC9CljE,GAAUuC,EAAQ,GAAKvC,EAAUkjE,EAAa,EAC9Cl0C,GAAQzsB,IAAUysB,EAAQk0C,GAAe7jE,EAAEskE,GAAU,EACrD30C,GAAQzsB,EAAQ,IAAMysB,EAAQk0C,EAAa,GAAOC,EAAMQ,GAAU,EAClE30C,GAAQzsB,EAAQ,IAAMysB,EAAQk0C,EAAa,GAAME,EAAMO,GAAU,EACjE10C,GAAS1sB,IAAU0sB,EAASi0C,IAAeU,EAAS,MAAOtkE,EAAEskE,EAAS,IAAI,EAC1E30C,GAAS1sB,EAAQ,IAAM0sB,EAASi0C,EAAa,GAAKG,GAAI,EACtDp0C,GAAS1sB,EAAQ,IAAM0sB,EAASi0C,EAAa,GAAKtmB,GAAI,OAEhD,CAEN58C,EAAUuC,GAASlD,CACnBW,GAAUuC,EAAQ,GAAMnG,KAAS,KAAG+mE,EAAQ/+D,EAAS++D,CACrDnjE,GAAUuC,EAAQ,GAAMnG,KAAS,KAAGgnE,EAAQA,EAAQh/D,CAEpD4qB,GAAQzsB,GAASlD,EAAEskE,CACnB30C,GAAQzsB,EAAQ,GAAK4gE,EAAMQ,CAC3B30C,GAAQzsB,EAAQ,GAAK6gE,EAAMO,CAE3B10C,GAAS1sB,GAASqhE,EAAS,MAAOtkE,EAAEskE,EAAS,CAC7C30C,GAAS1sB,EAAQ,GAAK8gE,CACtBp0C,GAAS1sB,EAAQ,GAAKq6C,EAGvB,GAAIxhD,EAAI,GAAKkH,EAAI,EAAG,CACnB,GAAInH,IAAYiB,KAAKumE,WAAa,GAAGrgE,EAAIlH,CACzC,IAAIkB,IAAYF,KAAKumE,WAAa,GAAGrgE,EAAIlH,EAAI,CAC7C,IAAIy1B,IAAYz0B,KAAKumE,WAAa,IAAIrgE,EAAI,GAAKlH,EAAI,CACnD,IAAIiB,IAAYD,KAAKumE,WAAa,IAAIrgE,EAAI,GAAKlH,CAE/C,IAAIkH,GAAKlG,KAAKwmE,WAAY,CACzB5iE,EAAUuC,GAASvC,EAAUkjE,EAC7BljE,GAAUuC,EAAQ,GAAKvC,EAAUkjE,EAAa,EAC9CljE,GAAUuC,EAAQ,GAAKvC,EAAUkjE,EAAa,EAE9Cn+D,GAAQk+D,KAAc9nE,CACtB4J,GAAQk+D,KAAcpyC,CACtB9rB,GAAQk+D,KAAc5mE,MAEhB,IAAIiG,GAAK,EAAG,CAClByC,EAAQk+D,KAAc9nE,CACtB4J,GAAQk+D,KAAc3mE,CACtByI,GAAQk+D,KAAcpyC,MAEhB,CACN9rB,EAAQk+D,KAAc9nE,CACtB4J,GAAQk+D,KAAc3mE,CACtByI,GAAQk+D,KAAcpyC,CACtB9rB,GAAQk+D,KAAc9nE,CACtB4J,GAAQk+D,KAAcpyC,CACtB9rB,GAAQk+D,KAAc5mE,GAIxBkG,GAAS,GAKX+gE,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,GAQxCovC,GAAA5lE,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,GAAI/3B,GAAUkH,CACd,IAAI2C,EAGJ,IAAIkuB,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE,IAAIqxD,EAAiBr+D,KAAO7I,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CAC9EoE,EAAMq+D,EAAiBr+D,IAAIhI,IAAIb,KAAKgC,kBAC9B,CACN6G,EAAM,GAAImb,cAAahkB,KAAKgC,aAAa,GtG6pgBjC,GsGzpgBLmE,GAAe,CAGnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAKwmE,aAActgE,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKumE,aAAcvnE,EAAG,CAEtC6J,EAAI1C,KAAanH,EAAEgB,KAAKumE,WAAavmE,KAAKmC,OAC1C0G,GAAI1C,KAAaD,EAAElG,KAAKwmE,WAAaxmE,KAAKoC,SAK5C8kE,EAAiBrkE,OAAOgG,OAElB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAAovC,IA9RqCD,EAgSrCzmE,GAAgCJ,QAAvB8mE,ItGupgBNuB,iDAAiD,mDAAmDC,kDAAkD,SAASppE,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuGp8gBtB,IAAOunE,GAAuBrpE,EAAW,qDvG08gBzC,IuGr8gBMspE,GAAmB,SAAAnnE,GAASX,EAA5B8nE,EAAmBnnE,EA0BxB,SA1BKmnE,GA0BOlwC,EAAoBtzB,EAAqB+hE,EAAuBC,EAAsByB,EAAuBxB,GAA7G,GAAA3uC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAtzB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA+hE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAyB,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAxB,QAAA,GAAkB,CAAlBA,EAAA,KAExH5lE,EAAApB,KAAAU,KAAM,EAAG23B,EAAQtzB,EAAQ+hE,EAAWC,EAAW,MAAOyB,EAAQ,KAAMxB,GAtBrE3lE,OAAAC,eAAWinE,EAAAtnE,UAAA,UvGs9gBJM,IuGt9gBP,WAEC,MAAOb,MAAK+nE,gBvGu9gBNplE,IuGp9gBP,SAAkBC,GAEjB5C,KAAK+nE,eAAiBnlE,CAEtB5C,MAAK0mE,wBvGo9gBC3lE,WAAY,KACZC,aAAc,MuGt8gBtB,OAAA6mE,IA9BkCD,EAgCLnoE,GAAAJ,QAApBwoE,IvG08gBNG,qDAAqD,uDAAuD7wC,kDAAkD,SAAS54B,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGj/gBtB,IAAO6lE,GAAmB3nE,EAAY,iDxGu/gBtC,IwGl/gBMm1B,GAAmB,SAAAhzB,GAASX,EAA5B2zB,EAAmBhzB,EAqBxB,SArBKgzB,GAqBOtvB,EAAoBC,EAAqBsL,EAAoBy2D,EAAsBC,EAAsB4B,EAAsBC,GAA/H,GAAA9jE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAsL,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAy2D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA4B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1IxnE,EAAApB,KAAAU,KAEAA,MAAKgS,OAAS5N,CACdpE,MAAKoQ,QAAU/L,CACfrE,MAAK8P,OAASH,CACd3P,MAAKumE,WAAaH,CAClBpmE,MAAKwmE,WAAaH,CAClBrmE,MAAKmoE,WAAaF,CAClBjoE,MAAKooE,OAASF,EAMfvnE,OAAAC,eAAW8yB,EAAAnzB,UAAA,SxG8+gBJM,IwG9+gBP,WAEC,MAAOb,MAAKgS,QxG++gBNrP,IwG5+gBP,SAAiBC,GAEhB5C,KAAKgS,OAASpP,CAEd5C,MAAK0mE,wBxG4+gBC3lE,WAAY,KACZC,aAAc,MwGv+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,UxG6+gBJM,IwG7+gBP,WAEC,MAAOb,MAAKoQ,SxG8+gBNzN,IwG3+gBP,SAAkBC,GAEjB5C,KAAKoQ,QAAUxN,CAEf5C,MAAK0mE,wBxG2+gBC3lE,WAAY,KACZC,aAAc,MwGt+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,SxG4+gBJM,IwG5+gBP,WAEC,MAAOb,MAAK8P,QxG6+gBNnN,IwG1+gBP,SAAiBC,GAEhB5C,KAAK8P,OAASlN,CAEd5C,MAAK0mE,wBxG0+gBC3lE,WAAY,KACZC,aAAc,MwGh+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,SxG2+gBJM,IwG3+gBP,WAEC,MAAOb,MAAKooE,QxG4+gBNzlE,IwGz+gBP,SAAiBC,GAEhB5C,KAAKooE,OAASxlE,CAEd5C,MAAK0mE,wBxGy+gBC3lE,WAAY,KACZC,aAAc,MwGp+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,axG0+gBJM,IwG1+gBP,WAEC,MAAOb,MAAKumE,YxG2+gBN5jE,IwGx+gBP,SAAqBC,GAEpB5C,KAAKumE,WAAa3jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mBxGw+gBC5lE,WAAY,KACZC,aAAc,MwGn+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,axGy+gBJM,IwGz+gBP,WAEC,MAAOb,MAAKwmE,YxG0+gBN7jE,IwGv+gBP,SAAqBC,GAEpB5C,KAAKwmE,WAAa5jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mBxGu+gBC5lE,WAAY,KACZC,aAAc,MwGl+gBrBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,axGw+gBJM,IwGx+gBP,WAEC,MAAOb,MAAKmoE,YxGy+gBNxlE,IwGt+gBP,SAAqBC,GAEpB5C,KAAKmoE,WAAavlE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mBxGs+gBC5lE,WAAY,KACZC,aAAc,MwGj+gBd0yB,GAAAnzB,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI/E,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAIytB,GAAW+nB,EAAWC,EAAWC,CACrC,IAAIvpE,GAAUkH,EAAUsiE,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWtxC,CAE1B,IAAIuxC,EACJ,IAAIjH,EACJ,IAAIt9D,EAGJkkE,GAAK3oE,KAAKgS,OAAO,CACjB42D,GAAK5oE,KAAKoQ,QAAQ,CAClBy4D,GAAK7oE,KAAK8P,OAAO,CAEjB,IAAIinB,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAEjEpR,KAAgBzE,KAAKumE,WAAa,IAAIvmE,KAAKwmE,WAAa,IAAMxmE,KAAKumE,WAAa,IAAIvmE,KAAKmoE,WAAa,IAAMnoE,KAAKwmE,WAAa,IAAIxmE,KAAKmoE,WAAa,IAAI,CAExJpG,IAAe/hE,KAAKumE,WAAWvmE,KAAKwmE,WAAaxmE,KAAKumE,WAAWvmE,KAAKmoE,WAAanoE,KAAKwmE,WAAWxmE,KAAKmoE,YAAY,EAEpH,IAAI1jE,GAAeyiE,EAAiBziE,aAAeyiE,EAAiBv+D,SAAW,KAAM,CACpFA,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,YACxD/9D,GAAYsjE,EAAiBtjE,UAAU/C,IAAI4D,EAC3CmuB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAI4D,EACvCouB,GAAWq0C,EAAiBr0C,SAAShyB,IAAI4D,OACnC,CACNkE,EAAU,GAAIyb,aAAY29C,EAC1Bn+D,GAAY,GAAIogB,cAAavf,EAAY,EACzCmuB,GAAU,GAAI5O,cAAavf,EAAY,EACvCouB,GAAW,GAAI7O,cAAavf,EAAY,EAExCzE,MAAK2mE,kBAGN8B,EAAO,CACPC,GAAO,CAGPI,GAAK9oE,KAAKgS,OAAOhS,KAAKumE,UACtBwC,GAAK/oE,KAAKoQ,QAAQpQ,KAAKwmE,UACvB/uC,GAAKz3B,KAAK8P,OAAO9P,KAAKmoE,UAEtB,KAAKnpE,EAAI,EAAGA,GAAKgB,KAAKumE,WAAYvnE,IAAK,CACtCgqE,GAAaL,EAAK3pE,EAAE8pE,CAEpB,KAAK5iE,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CAEtCtC,EAAU6kE,GAAQO,CAClBplE,GAAU6kE,EAAO,IAAMG,EAAK1iE,EAAE6iE,CAC9BnlE,GAAU6kE,EAAO,IAAMI,CACvBj2C,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAK,CACpB71C,GAAQ61C,EAAO,IAAM,CACrB51C,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAGR7kE,GAAU6kE,GAAQO,CAClBplE,GAAU6kE,EAAO,IAAMG,EAAK1iE,EAAE6iE,CAC9BnlE,GAAU6kE,EAAO,GAAKI,CACtBj2C,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAK,CACpB71C,GAAQ61C,EAAO,GAAK,CACpB51C,GAAS41C,IAAS,CAClB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIzpE,GAAKkH,EAAG,CACXo6C,EAAK,IAAIthD,EAAI,IAAIgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GAC7CmiE,GAAK,GAAGrpE,GAAGgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GACvCoiE,GAAKhoB,EAAK,CACVioB,GAAKF,EAAK,CAEV1/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUJ,CAClB3/D,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUL,CAClB1/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUH,EAAK,CACvB5/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUpoB,EAAK,IAK1BkoB,GAAO,GAAGxoE,KAAKumE,WAAa,IAAIvmE,KAAKwmE,WAAa,EAElD,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAKumE,WAAYvnE,IAAK,CACtCgqE,GAAaL,EAAK3pE,EAAE8pE,CAEpB,KAAK5iE,EAAI,EAAGA,GAAKlG,KAAKmoE,WAAYjiE,IAAK,CAEtCtC,EAAU6kE,GAAQO,CAClBplE,GAAU6kE,EAAO,GAAKG,CACtBhlE,GAAU6kE,EAAO,IAAMI,EAAK3iE,EAAEuxB,CAC9B7E,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAK,CACpB71C,GAAQ61C,EAAO,GAAK,CACpB51C,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAGR7kE,GAAU6kE,GAAQO,CAClBplE,GAAU6kE,EAAO,IAAMG,CACvBhlE,GAAU6kE,EAAO,IAAMI,EAAK3iE,EAAEuxB,CAC9B7E,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,IAAM,CACrB71C,GAAQ61C,EAAO,GAAK,CACpB51C,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIzpE,GAAKkH,EAAG,CACXo6C,EAAKkoB,EAAM,IAAIxpE,EAAI,IAAIgB,KAAKmoE,WAAa,IAAMjiE,EAAI,GACnDmiE,GAAKG,EAAM,GAAGxpE,GAAGgB,KAAKmoE,WAAa,IAAMjiE,EAAI,GAC7CoiE,GAAKhoB,EAAK,CACVioB,GAAKF,EAAK,CAEV1/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUJ,CAClB3/D,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUL,CAClB1/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUH,EAAK,CACvB5/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUpoB,EAAK,IAK1BkoB,GAAO,GAAGxoE,KAAKumE,WAAa,IAAIvmE,KAAKmoE,WAAa,EAElD,KAAKnpE,EAAI,EAAGA,GAAKgB,KAAKmoE,WAAYnpE,IAAK,CACtCgqE,EAAYH,EAAK7pE,EAAEy4B,CAEnB,KAAKvxB,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CAEtCtC,EAAU6kE,IAASE,CACnB/kE,GAAU6kE,EAAK,IAAMG,EAAK1iE,EAAE6iE,CAC5BnlE,GAAU6kE,EAAK,GAAKO,CACpBp2C,GAAQ61C,IAAS,CACjB71C,GAAQ61C,EAAK,GAAK,CAClB71C,GAAQ61C,EAAK,GAAK,CAClB51C,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAK,GAAK,CACnB51C,GAAS41C,EAAK,IAAM,CACpBA,IAAQ,CAGR7kE,GAAU6kE,GAAQE,CAClB/kE,GAAU6kE,EAAK,IAAMG,EAAK1iE,EAAE6iE,CAC5BnlE,GAAU6kE,EAAK,GAAKO,CACpBp2C,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAK,GAAK,CAClB71C,GAAQ61C,EAAK,GAAK,CAClB51C,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAK,GAAK,CACnB51C,GAAS41C,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAIzpE,GAAKkH,EAAG,CACXo6C,EAAKkoB,EAAM,IAAIxpE,EAAI,IAAIgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GACnDmiE,GAAKG,EAAM,GAAGxpE,GAAGgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GAC7CoiE,GAAKhoB,EAAK,CACVioB,GAAKF,EAAK,CAEV1/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUJ,CAClB3/D,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUpoB,CAClB33C,GAAQ+/D,KAAUH,CAClB5/D,GAAQ+/D,KAAUL,CAClB1/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUH,EAAK,CACvB5/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUL,EAAK,CACvB1/D,GAAQ+/D,KAAUJ,EAAK,CACvB3/D,GAAQ+/D,KAAUpoB,EAAK,IAK1B4mB,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,CAC7C,GAAIkyC,GAAiDpzD,CAErD,IAAIqzD,GAAqBlpE,KAAKwmE,WAAW,EAAKxmE,KAAKumE,WAAW,EAAIvmE,KAAKmoE,WAAW,CAClF,IAAIvkE,EACJ,IAAI0gB,EAEJ1gB,GAAY,GAAIogB,cAAaklD,EAAY,EACzC5kD,GAAY,GAAIN,cAAaklD,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAK1pE,EAAI,EAAGA,EAAIgB,KAAKwmE,aAAcxnE,EAAG,CACrC4E,EAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUzpE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,WAAaoC,CACrDhlE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUzpE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,WAAaoC,CACrDhlE,GAAU6kE,MAAWI,CAErBvkD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUG,EAAK5pE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,UAC7C5iE,GAAU6kE,KAAUI,CAEpBjlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUG,EAAK5pE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,UAC7C5iE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,EAGrB,IAAK1pE,EAAI,EAAGA,EAAIgB,KAAKumE,aAAcvnE,EAAG,CACrC4E,EAAU6kE,KAAUzpE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,WAAaoC,CACpD/kE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,KAAUzpE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,WAAaoC,CACpD/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,MAAWI,CAErBvkD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,KAAUE,EAAK3pE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,UAC5C3iE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUI,CAEpBjlE,GAAU6kE,KAAUE,EAAK3pE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,UAC5C3iE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,EAIrB,IAAK1pE,EAAI,EAAGA,EAAIgB,KAAKwmE,aAAcxnE,EAAG,CACrC4E,EAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUzpE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,WAAaoC,CACrDhlE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUzpE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,WAAaoC,CACrDhlE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUG,EAAK5pE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,UAC7C5iE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUG,EAAK5pE,EAAEgB,KAAKoQ,QAAQpQ,KAAKwmE,UAC7C5iE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,EAGrB,IAAK1pE,EAAI,EAAGA,EAAIgB,KAAKmoE,aAAcnpE,EAAG,CACrC4E,EAAU6kE,KAAUE,CACpB/kE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUzpE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,WAAaU,CAEpDjlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUzpE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,WAAaU,CAEpDvkD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,MAAWE,CACrB/kE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUI,EAAK7pE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,UAE5CvkE,GAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUI,EAAK7pE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,UAE5C7jD,GAAUokD,KAAU,EAKrB,IAAK1pE,EAAI,EAAGA,EAAIgB,KAAKmoE,aAAcnpE,EAAG,CACrC4E,EAAU6kE,MAAWE,CACrB/kE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUI,EAAK7pE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,UAE5CvkE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUI,EAAK7pE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,UAE5C7jD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,MAAWE,CACrB/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUzpE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,WAAaU,CAEpDjlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUzpE,EAAEgB,KAAK8P,OAAO9P,KAAKmoE,WAAaU,CAEpDvkD,GAAUokD,KAAU,EAGrB,IAAK1pE,EAAI,EAAGA,EAAIgB,KAAKumE,aAAcvnE,EAAG,CACrC4E,EAAU6kE,KAAUE,EAAK3pE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,UAC5C3iE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,KAAUE,EAAK3pE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,UAC5C3iE,GAAU6kE,MAAWG,CACrBhlE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,CAEpB9kE,GAAU6kE,KAAUzpE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,WAAaoC,CACpD/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,MAAWI,CAErBjlE,GAAU6kE,KAAUzpE,EAAEgB,KAAKgS,OAAOhS,KAAKumE,WAAaoC,CACpD/kE,GAAU6kE,KAAUG,CACpBhlE,GAAU6kE,KAAUI,CAEpBvkD,GAAUokD,KAAU,EAIrBO,EAAanhE,aAAalE,EAC1BqlE,GAAa5kD,aAAaC,IAOrBoP,GAAAnzB,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,GAAI/3B,GAAUkH,EAAUC,CACxB,IAAI0C,EAEJ,IAAIsgE,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAInlE,EAEJ,IAAIsyB,GAAgB,sBAAuB,CAE1CtyB,IAAgBzE,KAAKumE,WAAa,IAAIvmE,KAAKwmE,WAAa,IAAMxmE,KAAKumE,WAAa,IAAIvmE,KAAKmoE,WAAa,IAAMnoE,KAAKwmE,WAAa,IAAIxmE,KAAKmoE,WAAa,IAAI,CAExJ,IAAIjB,GAA6DrxD,CAEjE,IAAIpR,GAAeyiE,EAAiBziE,aAAeyiE,EAAiBr+D,KAAO,KAAM,CAChFA,EAAMq+D,EAAiBr+D,IAAIhI,IAAI4D,OACzB,CACNoE,EAAM,GAAImb,cAAavf,EAAY,GAGpC,GAAIzE,KAAKooE,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7BnjE,EAAQ,CAGRojE,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWnpE,KAAKumE,UACrBqD,GAAKR,EAAWppE,KAAKwmE,UACrB,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAKumE,WAAYvnE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CACtC2C,EAAI1C,MAAaojE,EAAOvqE,EAAE2qE,GAAK3pE,KAAKmC,OACpC0G,GAAI1C,MAAaqjE,GAAQJ,EAAaljE,EAAE0jE,IAAK5pE,KAAKoC,OAElDyG,GAAI1C,MAAasjE,GAAQN,EAAanqE,EAAE2qE,IAAK3pE,KAAKmC,OAClD0G,GAAI1C,MAAaujE,GAAQN,EAAaljE,EAAE0jE,IAAK5pE,KAAKoC,SAKpDmnE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWnpE,KAAKumE,UACrBqD,GAAKR,EAAWppE,KAAKmoE,UACrB,KAAKnpE,EAAI,EAAGA,GAAKgB,KAAKumE,WAAYvnE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAKmoE,WAAYjiE,IAAK,CACtC2C,EAAI1C,MAAaojE,EAAOvqE,EAAE2qE,GAAI3pE,KAAKmC,OACnC0G,GAAI1C,MAAaqjE,GAAQJ,EAAaljE,EAAE0jE,IAAK5pE,KAAKoC,OAElDyG,GAAI1C,MAAasjE,EAAOzqE,EAAE2qE,GAAI3pE,KAAKmC,OACnC0G,GAAI1C,MAAaujE,EAAOxjE,EAAE0jE,GAAI5pE,KAAKoC,SAKrCmnE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWnpE,KAAKmoE,UACrByB,GAAKR,EAAWppE,KAAKwmE,UACrB,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAKmoE,WAAYnpE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CACtC2C,EAAI1C,MAAaojE,EAAOvqE,EAAE2qE,GAAI3pE,KAAKmC,OACnC0G,GAAI1C,MAAaqjE,GAAQJ,EAAaljE,EAAE0jE,IAAK5pE,KAAKoC,OAElDyG,GAAI1C,MAAasjE,GAAQN,EAAanqE,EAAE2qE,IAAK3pE,KAAKmC,OAClD0G,GAAI1C,MAAaujE,GAAQN,EAAaljE,EAAE0jE,IAAK5pE,KAAKoC,SAIpD8kE,EAAiBrkE,OAAOgG,OAElB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAArD,IAjnBkCwyC,EAmnBlCzmE,GAA6BJ,QAApBq0B,IxG24gBNg0C,iDAAiD,mDAAmDM,sDAAsD,SAASzpE,EAAQkB,EAAOJ,GACrL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyGxgiBtB,IAAO6lE,GAAmB3nE,EAAY,iDzG8giBtC,IyGzgiBMqpE,GAAuB,SAAAlnE,GAASX,EAAhC6nE,EAAuBlnE,EAyJ5B,SAzJKknE,GAyJOiC,EAAuBC,EAA0BzlE,EAAqB+hE,EAAuBC,EAAsB0D,EAA0BC,EAA6BC,EAA8B3D,GAAxM,GAAAuD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAzlE,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA+hE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA0D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA3D,QAAA,GAAkB,CAAlBA,EAAA,KAEnN5lE,EAAApB,KAAAU,KA9IOA,MAAAgC,aAAsB,CAgJ7BhC,MAAKkqE,WAAaL,CAClB7pE,MAAK+nE,eAAiB+B,CACtB9pE,MAAKoQ,QAAU/L,CACfrE,MAAKmqE,YAAc/D,CACnBpmE,MAAKoqE,YAAc/D,CACnBrmE,MAAKqqE,WAAaN,CAClB/pE,MAAKsqE,cAAgBN,CACrBhqE,MAAKuqE,eAAiBN,CACtBjqE,MAAKymE,KAAOH,EAnJb3lE,OAAAC,eAAWgnE,EAAArnE,UAAA,azG8hiBJM,IyG9hiBP,WAEC,MAAOb,MAAKkqE,YzG+hiBNvnE,IyG5hiBP,SAAqBC,GAEpB5C,KAAKkqE,WAAatnE,CAClB5C,MAAK0mE,wBzG6hiBC3lE,WAAY,KACZC,aAAc,MyGxhiBrBL,QAAAC,eAAWgnE,EAAArnE,UAAA,gBzG8hiBJM,IyG9hiBP,WAEC,MAAOb,MAAK+nE,gBzG+hiBNplE,IyG5hiBP,SAAwBC,GAEvB5C,KAAK+nE,eAAiBnlE,CACtB5C,MAAK0mE,wBzG6hiBC3lE,WAAY,KACZC,aAAc,MyGxhiBrBL,QAAAC,eAAWgnE,EAAArnE,UAAA,UzG8hiBJM,IyG9hiBP,WAEC,MAAOb,MAAKoQ,SzG+hiBNzN,IyG5hiBP,SAAkBC,GAEjB5C,KAAKoQ,QAAUxN,CACf5C,MAAK0mE,wBzG6hiBC3lE,WAAY,KACZC,aAAc,MyGxhiBrBL,QAAAC,eAAWgnE,EAAArnE,UAAA,azG8hiBJM,IyG9hiBP,WAEC,MAAOb,MAAKmqE,azG+hiBNxnE,IyG5hiBP,SAAqBC,GAEpB5C,KAAKwqE,aAAa5nE,IzG6hiBZ7B,WAAY,KACZC,aAAc,MyG3hiBd4mE,GAAArnE,UAAAiqE,aAAP,SAAoB5nE,GAEnB5C,KAAKmqE,YAAcvnE,CACnB5C,MAAK0mE,sBACL1mE,MAAK2mE,kBAMNhmE,QAAAC,eAAWgnE,EAAArnE,UAAA,azG4hiBJM,IyG5hiBP,WAEC,MAAOb,MAAKoqE,azG6hiBNznE,IyG1hiBP,SAAqBC,GAGpB5C,KAAKyqE,aAAa7nE,IzG0hiBZ7B,WAAY,KACZC,aAAc,MyGvhiBd4mE,GAAArnE,UAAAkqE,aAAP,SAAoB7nE,GAEnB5C,KAAKoqE,YAAcxnE,CACnB5C,MAAK0mE,sBACL1mE,MAAK2mE,kBAONhmE,QAAAC,eAAWgnE,EAAArnE,UAAA,azGuhiBJM,IyGvhiBP,WAEC,MAAOb,MAAKqqE,YzGwhiBN1nE,IyGrhiBP,SAAqBC,GAEpB5C,KAAKqqE,WAAaznE,CAClB5C,MAAK0mE,wBzGshiBC3lE,WAAY,KACZC,aAAc,MyGjhiBrBL,QAAAC,eAAWgnE,EAAArnE,UAAA,gBzGuhiBJM,IyGvhiBP,WAEC,MAAOb,MAAKsqE,ezGwhiBN3nE,IyGrhiBP,SAAwBC,GAEvB5C,KAAKsqE,cAAgB1nE,CACrB5C,MAAK0mE,wBzGshiBC3lE,WAAY,KACZC,aAAc,MyGjhiBrBL,QAAAC,eAAWgnE,EAAArnE,UAAA,OzGuhiBJM,IyGvhiBP,WAEC,MAAOb,MAAKymE,MzGwhiBN9jE,IyGrhiBP,SAAeC,GAEd5C,KAAKymE,KAAO7jE,CACZ5C,MAAK0mE,wBzGshiBC3lE,WAAY,KACZC,aAAc,MyGt/hBd4mE,GAAArnE,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI/E,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAI7zB,EACJ,IAAIkH,EACJ,IAAIjD,EACJ,IAAIC,EACJ,IAAIqD,EACJ,IAAIkiE,EACJ,IAAIC,EAEJ,IAAI/wC,EACJ,IAAI+yC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI9I,GAAoB,CAExB,IAAIgF,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIgE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAI9D,EACJ,IAAIzmB,EAGJxgD,MAAKgC,aAAe,CzGs/hBd,IyGn/hBFgpE,GAA8B,EAAE5nE,KAAKgkE,GAAGpnE,KAAKmqE,WAEjD,IAAIpzC,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE,IAAI7V,KAAKuqE,eAAgB,CACxBvqE,KAAKgC,eAAiBhC,KAAKoqE,YAAc,IAAIpqE,KAAKmqE,YAAc,EAChEpI,IAAc/hE,KAAKoqE,YAAYpqE,KAAKmqE,YAAY,EAEjD,GAAInqE,KAAKqqE,WAAY,CACpBrqE,KAAKgC,cAAgB,GAAGhC,KAAKmqE,YAAc,EAC3CpI,IAAc/hE,KAAKmqE,YAAY,EAEhC,GAAInqE,KAAKsqE,cAAe,CACvBtqE,KAAKgC,cAAgB,GAAGhC,KAAKmqE,YAAc,EAC3CpI,IAAc/hE,KAAKmqE,YAAY,EAIhC,GAAInqE,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CACtDkE,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,YACxD/9D,GAAYsjE,EAAiBtjE,UAAU/C,IAAIb,KAAKgC,aAChD4wB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAIb,KAAKgC,aAC5C6wB,GAAWq0C,EAAiBr0C,SAAShyB,IAAIb,KAAKgC,kBACxC,CACN2G,EAAU,GAAIyb,aAAY29C,EAC1Bn+D,GAAY,GAAIogB,cAAahkB,KAAKgC,aAAa,EAC/C4wB,GAAU,GAAI5O,cAAahkB,KAAKgC,aAAa,EAC7C6wB,GAAW,GAAI7O,cAAahkB,KAAKgC,aAAa,EAE9ChC,MAAK2mE,kBAGN8B,EAAO,CACPC,GAAO,CAGP,IAAI1oE,KAAKqqE,YAAcrqE,KAAKkqE,WAAa,EAAG,CAE3C3jE,GAAK,GAAIvG,KAAKoQ,OAGd,IAAIpQ,KAAKymE,KAAM,CACdQ,EAAK,CACLzmB,GAAK,CACLumB,IAASxgE,CACTygE,GAAQ,MAEF,CACNC,EAAK,CACLzmB,IAAM,CACNumB,GAAQ,CACRC,GAAQzgE,EAGT3C,EAAU6kE,GAAQ,CAClB7kE,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,CACtBp0C,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAKxB,CACpBr0C,GAAQ61C,EAAO,GAAKjoB,CACpB3tB,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAK9rE,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAGvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAIjD,KAAKkqE,WAAW9mE,KAAKqkC,IAAIijC,EAC7BxnE,GAAIlD,KAAKkqE,WAAW9mE,KAAKokC,IAAIkjC,EAE7B,IAAI1qE,KAAKymE,KAAM,CACdM,GAASxgE,CACTygE,GAAQ9jE,MACF,CACN6jE,EAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,GAAKgB,KAAKmqE,YAAa,CAC1BvmE,EAAU6kE,GAAQ7kE,EAAUkjE,EAAa,EACzCljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7CljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,OAEvC,CACNljE,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,EAGvBp0C,EAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAKxB,CACpBr0C,GAAQ61C,EAAO,GAAKjoB,CACpB3tB,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIzpE,EAAI,EAAG,CAEV2J,EAAQ+/D,KAAUoC,EAAkB,CACpCniE,GAAQ+/D,KAAUqC,CAClBpiE,GAAQ+/D,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAI9qE,KAAKsqE,eAAiBtqE,KAAK+nE,eAAiB,EAAG,CAElDxhE,EAAI,GAAIvG,KAAKoQ,OAEb02D,GAAagE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAI9qE,KAAKymE,KAAM,CACdQ,GAAM,CACNzmB,GAAK,CACLumB,IAASxgE,CACTygE,GAAQ,MACF,CACNC,EAAK,CACLzmB,GAAK,CACLumB,GAAQ,CACRC,GAAQzgE,EAGT,GAAIvH,EAAI,EAAG,CACV4E,EAAU6kE,GAAQ,CAClB7kE,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,CACtBp0C,GAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAKxB,CACpBr0C,GAAQ61C,EAAO,GAAKjoB,CACpB3tB,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAK9rE,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAGvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAIjD,KAAK+nE,eAAe3kE,KAAKqkC,IAAIijC,EACjCxnE,GAAIlD,KAAK+nE,eAAe3kE,KAAKokC,IAAIkjC,EAEjC,IAAI1qE,KAAKymE,KAAM,CACdM,GAASxgE,CACTygE,GAAQ9jE,MACF,CACN6jE,EAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,GAAKgB,KAAKmqE,YAAa,CAC1BvmE,EAAU6kE,GAAQ7kE,EAAUkjE,EAAa,EACzCljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7CljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,OACvC,CACNljE,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,EAGvBp0C,EAAQ61C,GAAQ,CAChB71C,GAAQ61C,EAAO,GAAKxB,CACpBr0C,GAAQ61C,EAAO,GAAKjoB,CACpB3tB,GAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIzpE,EAAI,EAAG,CAEV2J,EAAQ+/D,KAAUoC,EAAkB,CACpCniE,GAAQ+/D,KAAUoC,CAClBniE,GAAQ+/D,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAM3qE,KAAK+nE,eAAiB/nE,KAAKkqE,UACjCU,GAAcD,EAAG3qE,KAAKoQ,OACtBy6D,GAAeD,GAAe,EAAI,EAAI5qE,KAAKoQ,QAAQu6D,CAGnD,IAAI3qE,KAAKuqE,eAAgB,CACxB,GAAIxrE,EACJ,IAAImB,EACJ,IAAIu0B,EACJ,IAAIx0B,EACJ,IAAIgrE,GAAYC,EAAYC,EAAgBC,CAE5C,KAAKllE,EAAI,EAAGA,GAAKlG,KAAKoqE,cAAelkE,EAAG,CACvCyxB,EAAS33B,KAAKkqE,WAAehkE,EAAElG,KAAKoqE,aAAcpqE,KAAKkqE,WAAalqE,KAAK+nE,eACzExhE,KAAMvG,KAAKoQ,QAAQ,GAAMlK,EAAElG,KAAKoqE,YAAYpqE,KAAKoQ,OAEjD02D,GAAagE,EAAgB,CAE7B,KAAK9rE,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAEvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAI00B,EAAOv0B,KAAKqkC,IAAIijC,EACpBxnE,GAAIy0B,EAAOv0B,KAAKokC,IAAIkjC,EACpBO,GAAMJ,EAAYznE,KAAKqkC,IAAIijC,EAC3BQ,GAAML,EAAYznE,KAAKokC,IAAIkjC,EAE3B,IAAI1qE,KAAKymE,KAAM,CACdQ,EAAK,CACLzmB,IAAMyqB,CACNlE,IAASxgE,CACTygE,GAAQ9jE,CACRioE,GAAUP,CACVQ,GAAUF,MAEJ,CACNjE,GAAMgE,CACNzqB,GAAK,CACLumB,GAAQ7jE,CACR8jE,GAAQzgE,CACR4kE,GAAUD,CACVE,GAAUR,EAGX,GAAI5rE,GAAKgB,KAAKmqE,YAAa,CAC1BvmE,EAAU6kE,GAAQ7kE,EAAUkjE,EAC5BljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7CljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7Cl0C,GAAQ61C,GAAQwC,CAChBr4C,GAAQ61C,EAAO,GAAKmC,CACpBh4C,GAAQ61C,EAAO,GAAKyC,CACpBr4C,GAAS41C,GAAQyC,CACjBr4C,GAAS41C,EAAO,GAAKxB,CACrBp0C,GAAS41C,EAAO,GAAKjoB,MACf,CACN58C,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,CACtBp0C,GAAQ61C,GAAQwC,CAChBr4C,GAAQ61C,EAAO,GAAK0C,CACpBv4C,GAAQ61C,EAAO,GAAK2C,CACpBv4C,GAAS41C,IAASyC,CAClBr4C,GAAS41C,EAAO,GAAKxB,CACrBp0C,GAAS41C,EAAO,GAAKjoB,EAEtBioB,GAAQ,CAGR,IAAIzpE,EAAI,GAAKkH,EAAI,EAAG,CACnBnH,EAAI+rE,CACJ5qE,GAAI4qE,EAAkB,CACtBr2C,GAAIv0B,EAAIF,KAAKmqE,YAAc,CAC3BlqE,GAAIlB,EAAIiB,KAAKmqE,YAAc,CAE3BxhE,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUxoE,CAClByI,GAAQ+/D,KAAUj0C,CAElB9rB,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUj0C,CAClB9rB,GAAQ+/D,KAAUzoE,EAGnB6qE,MAMH5D,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,CAC7C,GAAIkyC,GAAiDpzD,CAErD,IAAIqzD,GAAqBlpE,KAAKoqE,YAAYpqE,KAAKmqE,YAAY,EAAInqE,KAAKmqE,WACpE,IAAIvmE,GAAyB,GAAIogB,cAAaklD,EAAY,EAC1D,IAAI5kD,GAAyB,GAAIN,cAAaklD,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAInxC,GAAU,EACd,KAAKrxB,EAAI,EAAGA,GAAKlG,KAAKoqE,cAAelkE,EAAG,CAEvCyxB,EAAS33B,KAAKkqE,WAAehkE,EAAElG,KAAKoqE,aAAcpqE,KAAKkqE,WAAalqE,KAAK+nE,eACzExhE,KAAMvG,KAAKoQ,QAAQ,GAAMlK,EAAElG,KAAKoqE,YAAYpqE,KAAKoQ,OAEjD,KAAKpR,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAEvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAI00B,EAAOv0B,KAAKqkC,IAAIijC,EACpBxnE,GAAIy0B,EAAOv0B,KAAKokC,IAAIkjC,EAEpB,IAAI1qE,KAAKymE,KAAM,CACdM,GAASxgE,CACTygE,GAAQ9jE,MACF,CACN6jE,EAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,EAAI,EAAG,CAEV4E,EAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,CAEpB1iD,GAAUokD,KAAU,CAGpB,IAAIxiE,EAAI,EAAG,CACV,GAAImlE,GAAenlE,GAAK,EAAI,GAAK,GAAGlG,KAAKmqE,YAAYnrE,GAAK,GAAGA,GAAK,EAAIgB,KAAKmqE,YAAY,EACvFvmE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EACrCznE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EACrCznE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EAErCznE,GAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,CAEpB1iD,GAAUokD,KAAU,GAMtB,GAAI1pE,EAAIgB,KAAKmqE,YAAa,CACzBvmE,EAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,IAMvBiC,EAAanhE,aAAalE,EAC1BqlE,GAAa5kD,aAAaC,IAOrBsjD,GAAArnE,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,GAAI/3B,EACJ,IAAIkH,EACJ,IAAIjD,EACJ,IAAIC,EACJ,IAAIwnE,EACJ,IAAI7hE,EAEJ,IAAIkuB,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE,IAAIqxD,EAAiBr+D,KAAO7I,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CAC9EoE,EAAMq+D,EAAiBr+D,IAAIhI,IAAIb,KAAKgC,kBAC9B,CACN6G,EAAM,GAAImb,cAAahkB,KAAKgC,aAAa,GzG87hBjC,GyG17hBLgpE,GAA8B,EAAE5nE,KAAKgkE,GAAGpnE,KAAKmqE,WzG47hBxC,IyGz7hBLhkE,GAAe,CAGnB,IAAInG,KAAKqqE,WAAY,CAEpBxhE,EAAI1C,KAAW,GAAInG,KAAKmC,OACxB0G,GAAI1C,KAAW,GAAInG,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAEvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAI,GAAM,IAAMG,KAAKqkC,IAAIijC,EACzBxnE,GAAI,GAAM,GAAIE,KAAKokC,IAAIkjC,EAEvB7hE,GAAI1C,KAAWlD,EAAEjD,KAAKmC,OACtB0G,GAAI1C,KAAWjD,EAAElD,KAAKoC,SAKxB,GAAIpC,KAAKsqE,cAAe,CAEvBzhE,EAAI1C,KAAW,GAAInG,KAAKmC,OACxB0G,GAAI1C,KAAW,GAAInG,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAEvC0rE,EAAkB1rE,EAAEgsE,CACpB/nE,GAAI,GAAM,GAAIG,KAAKqkC,IAAIijC,EACvBxnE,GAAI,GAAM,GAAIE,KAAKokC,IAAIkjC,EAEvB7hE,GAAI1C,KAAWlD,EAAEjD,KAAKmC,OACtB0G,GAAI1C,KAAWjD,EAAElD,KAAKoC,SAKxB,GAAIpC,KAAKuqE,eAAgB,CACxB,IAAKrkE,EAAI,EAAGA,GAAKlG,KAAKoqE,cAAelkE,EAAG,CACvC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKmqE,cAAenrE,EAAG,CAEvC6J,EAAI1C,KAAanH,EAAEgB,KAAKmqE,YAAcnqE,KAAKmC,OAC3C0G,GAAI1C,KAAaD,EAAElG,KAAKoqE,YAAcpqE,KAAKoC,UAM9C8kE,EAAiBrkE,OAAOgG,OAElB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAA6wC,IA5oBsC1B,EA8oBLzmE,GAAAJ,QAAxBuoE,IzG86hBNF,iDAAiD,mDAAmD4D,mDAAmD,SAAS/sE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0GtkjBtB,IAAO6lE,GAAmB3nE,EAAY,iD1G4kjBtC,I0GvkjBMgtE,GAAoB,SAAA7qE,GAASX,EAA7BwrE,EAAoB7qE,EAkBzB,SAlBK6qE,GAkBOnnE,EAAoBC,EAAqB+hE,EAAsBC,EAAsBC,EAAoBkF,GAAzG,GAAApnE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA+hE,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAkF,QAAA,GAA2B,CAA3BA,EAAA,MAGpH9qE,EAAApB,KAAAU,KAEAA,MAAKumE,WAAaH,CAClBpmE,MAAKwmE,WAAaH,CAClBrmE,MAAKymE,KAAOH,CACZtmE,MAAKgS,OAAS5N,CACdpE,MAAKoQ,QAAU/L,CACfrE,MAAKyrE,aAAeD,EAOrB7qE,OAAAC,eAAW2qE,EAAAhrE,UAAA,a1GkkjBJM,I0GlkjBP,WAEC,MAAOb,MAAKumE,Y1GmkjBN5jE,I0GhkjBP,SAAqBC,GAGpB5C,KAAKumE,WAAa3jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB1G+jjBC5lE,WAAY,KACZC,aAAc,M0GxjjBrBL,QAAAC,eAAW2qE,EAAAhrE,UAAA,a1G+jjBJM,I0G/jjBP,WAEC,MAAOb,MAAKwmE,Y1GgkjBN7jE,I0G7jjBP,SAAqBC,GAGpB5C,KAAKwmE,WAAa5jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB1G4jjBC5lE,WAAY,KACZC,aAAc,M0GtjjBrBL,QAAAC,eAAW2qE,EAAAhrE,UAAA,O1G4jjBJM,I0G5jjBP,WAEC,MAAOb,MAAKymE,M1G6jjBN9jE,I0G1jjBP,SAAeC,GAEd5C,KAAKymE,KAAO7jE,CAEZ5C,MAAK0mE,wB1G0jjBC3lE,WAAY,KACZC,aAAc,M0GrjjBrBL,QAAAC,eAAW2qE,EAAAhrE,UAAA,e1G2jjBJM,I0G3jjBP,WAEC,MAAOb,MAAKyrE,c1G4jjBN9oE,I0GzjjBP,SAAuBC,GAEtB5C,KAAKyrE,aAAe7oE,CAEpB5C,MAAK0mE,wB1GyjjBC3lE,WAAY,KACZC,aAAc,M0GpjjBrBL,QAAAC,eAAW2qE,EAAAhrE,UAAA,S1G0jjBJM,I0G1jjBP,WAEC,MAAOb,MAAKgS,Q1G2jjBNrP,I0GxjjBP,SAAiBC,GAEhB5C,KAAKgS,OAASpP,CAEd5C,MAAK0mE,wB1GwjjBC3lE,WAAY,KACZC,aAAc,M0GnjjBrBL,QAAAC,eAAW2qE,EAAAhrE,UAAA,U1GyjjBJM,I0GzjjBP,WAEC,MAAOb,MAAKoQ,S1G0jjBNzN,I0GvjjBP,SAAkBC,GAEjB5C,KAAKoQ,QAAUxN,CAEf5C,MAAK0mE,wB1GujjBC3lE,WAAY,KACZC,aAAc,M0GljjBduqE,GAAAhrE,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI1F,GAAUC,CACd,IAAI6+D,EACJ,IAAI2J,EACJ,IAAIC,GAAY3rE,KAAKumE,WAAa,CAElC,IAAIkC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAI90C,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAEjE,IAAIpR,IAAsBzE,KAAKwmE,WAAa,GAAGmF,CAC/C,IAAI/nE,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAI7yB,KAAKyrE,aACRhnE,GAAe,CAEhBs9D,GAAa/hE,KAAKwmE,WAAWxmE,KAAKumE,WAAW,CAE7C,IAAIvmE,KAAKyrE,aACR1J,GAAc,CAEf,IAAImF,EAAiBv+D,SAAW,MAAQo5D,GAAcmF,EAAiBv+D,QAAQpJ,OAAQ,CACtFoJ,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,iBAClD,CACNh5D,EAAU,GAAIyb,aAAY29C,EAE1B/hE,MAAK2mE,kBAGN,GAAIliE,GAAeyiE,EAAiBziE,YAAa,CAChDb,EAAYsjE,EAAiBtjE,UAAU/C,IAAI4D,EAC3CmuB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAI4D,EACvCouB,GAAWq0C,EAAiBr0C,SAAShyB,IAAI4D,OACnC,CACNb,EAAY,GAAIogB,cAAavf,EAAY,EACzCmuB,GAAU,GAAI5O,cAAavf,EAAY,EACvCouB,GAAW,GAAI7O,cAAavf,EAAY,EAExCzE,MAAK2mE,kBAGN+B,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM7rE,KAAKwmE,aAAcqF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAM5rE,KAAKumE,aAAcqF,EAAI,CACzC3oE,GAAK2oE,EAAG5rE,KAAKumE,WAAa,IAAIvmE,KAAKgS,MACnC9O,IAAK2oE,EAAG7rE,KAAKwmE,WAAa,IAAIxmE,KAAKoQ,OAEnCxM,GAAU6kE,GAAQxlE,CAClB,IAAIjD,KAAKymE,KAAM,CACd7iE,EAAU6kE,EAAO,GAAK,CACtB7kE,GAAU6kE,EAAO,GAAKvlE,MAChB,CACNU,EAAU6kE,EAAO,GAAKvlE,CACtBU,GAAU6kE,EAAO,GAAK,EAGvB71C,EAAQ61C,GAAQ,CAEhB,IAAIzoE,KAAKymE,KAAM,CACd7zC,EAAQ61C,EAAO,GAAK,CACpB71C,GAAQ61C,EAAO,GAAK,MACd,CACN71C,EAAQ61C,EAAO,GAAK,CACpB71C,GAAQ61C,EAAO,IAAM,EAGtB51C,EAAS41C,GAAQ,CACjB51C,GAAS41C,EAAO,GAAK,CACrB51C,GAAS41C,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAIzoE,KAAKyrE,aAAc,CAEtB,IAAK,GAAIzsE,GAAWypE,EAAMzpE,EAAIypE,EAAO,IAAKzpE,EAAG,CAC5C4E,EAAU5E,GAAK4E,EAAU5E,EAAI,EAC7B4zB,GAAQ5zB,IAAM4zB,EAAQ5zB,EAAI,EAC1B6zB,GAAS7zB,IAAM6zB,EAAS7zB,EAAI,GAG7BypE,GAAQ,EAIT,GAAImD,GAAM5rE,KAAKumE,YAAcsF,GAAM7rE,KAAKwmE,WAAY,CAEnDkF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAc9rE,KAAKyrE,aAAc,EAAI,CAEzC9iE,GAAQ+/D,KAAUgD,EAAKI,CACvBnjE,GAAQ+/D,MAAWgD,EAAOC,GAAIG,CAC9BnjE,GAAQ+/D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCnjE,GAAQ+/D,KAAUgD,EAAKI,CACvBnjE,GAAQ+/D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCnjE,GAAQ+/D,MAAWgD,EAAO,GAAGI,CAE7B,IAAI9rE,KAAKyrE,aAAc,CAEtB9iE,EAAQ+/D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCnjE,GAAQ+/D,MAAWgD,EAAOC,GAAIG,EAAO,CACrCnjE,GAAQ+/D,KAAUgD,EAAKI,EAAO,CAC9BnjE,GAAQ+/D,MAAWgD,EAAO,GAAGI,EAAO,CACpCnjE,GAAQ+/D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCnjE,GAAQ+/D,KAAUgD,EAAKI,EAAO,KAOlC5E,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,CAC7C,GAAIkyC,GAAiDpzD,CAErD,IAAIqzD,GAAsBlpE,KAAKwmE,WAAa,EAAKmF,CACjD,IAAI/nE,EACJ,IAAI0gB,EAEJ,IAAIqkD,GAAY3oE,KAAKgS,OAAO,CAC5B,IAAI42D,GAAY5oE,KAAKoQ,QAAQ,CAE7BxM,GAAY,GAAIogB,cAAaklD,EAAY,EACzC5kD,GAAY,GAAIN,cAAaklD,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM7rE,KAAKwmE,aAAcqF,EAAI,CACzCjoE,EAAU6kE,MAAWE,CACrB/kE;EAAU6kE,KAAU,CACpB7kE,GAAU6kE,KAAUoD,EAAG7rE,KAAKoQ,QAAUw4D,CAEtChlE,GAAU6kE,KAAUE,CACpB/kE,GAAU6kE,KAAU,CACpB7kE,GAAU6kE,KAAUoD,EAAG7rE,KAAKoQ,QAAUw4D,CAEtCtkD,GAAUokD,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAM5rE,KAAKumE,aAAcqF,EAAI,CACzChoE,EAAU6kE,KAAUmD,EAAG5rE,KAAKgS,OAAS22D,CACrC/kE,GAAU6kE,KAAU,CACpB7kE,GAAU6kE,MAAWG,CAErBhlE,GAAU6kE,KAAUmD,EAAG5rE,KAAKgS,OAAS22D,CACrC/kE,GAAU6kE,KAAU,CACpB7kE,GAAU6kE,KAAUG,CAEpBtkD,GAAUokD,KAAU,EAIrBO,EAAanhE,aAAalE,EAC1BqlE,GAAa5kD,aAAaC,IAOrBinD,GAAAhrE,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,GAAIluB,EACJ,IAAIpE,EAEJ,IAAIsyB,GAAgB,sBAAuB,CAE1CtyB,GAAgBzE,KAAKwmE,WAAa,IAAMxmE,KAAKumE,WAAa,EAE1D,IAAIvmE,KAAKyrE,aACRhnE,GAAe,CAEhB,IAAIyiE,GAA6DrxD,CAEjE,IAAIqxD,EAAiBr+D,KAAOpE,GAAeyiE,EAAiBziE,YAAa,CACxEoE,EAAMq+D,EAAiBr+D,IAAIhI,IAAI4D,OACzB,CACNoE,EAAM,GAAImb,cAAavf,EAAY,EACnCzE,MAAK0mE,uBAGN,GAAIvgE,GAAe,CAEnB,KAAK,GAAI0lE,GAAY,EAAGA,GAAM7rE,KAAKwmE,aAAcqF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAM5rE,KAAKumE,aAAcqF,EAAI,CACpD/iE,EAAI1C,GAAUylE,EAAG5rE,KAAKumE,WAAYvmE,KAAKmC,OACvC0G,GAAI1C,EAAQ,IAAM,EAAI0lE,EAAG7rE,KAAKwmE,YAAYxmE,KAAKoC,OAC/C+D,IAAS,CAET,IAAInG,KAAKyrE,aAAc,CACtB5iE,EAAI1C,GAAUylE,EAAG5rE,KAAKumE,WAAYvmE,KAAKmC,OACvC0G,GAAI1C,EAAM,IAAM,EAAI0lE,EAAG7rE,KAAKwmE,YAAYxmE,KAAKoC,OAC7C+D,IAAS,IAKZ+gE,EAAiBrkE,OAAOgG,OAGlB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAAw0C,IAtWmCrF,EAwWnCzmE,GAA8BJ,QAArBksE,I1GigjBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAASxtE,EAAQkB,EAAOJ,GACpL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Gt3jBtB,IAAOunE,GAAuBrpE,EAAW,qD3G43jBzC,I2Gv3jBMytE,GAAsB,SAAAtrE,GAASX,EAA/BisE,EAAsBtrE,EAiD3B,SAjDKsrE,GAiDOr0C,EAAqBs0C,EAAmB3F,GAAxC,GAAA3uC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAs0C,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA3F,QAAA,GAAkB,CAAlBA,EAAA,KAEnD5lE,EAAApB,KAAAU,KAAM23B,EAAQ,EAAG,EAAGs0C,EAAO,EAAG,KAAM,MAAO,MAAO3F,GA7CnD3lE,OAAAC,eAAWorE,EAAAzrE,UAAA,U3Gm4jBJM,I2Gn4jBP,WAEC,MAAOb,MAAK+nE,gB3Go4jBNplE,I2Gj4jBP,SAAkBC,GAEjB5C,KAAK+nE,eAAiBnlE,CACtB5C,MAAK0mE,wB3Gk4jBC3lE,WAAY,KACZC,aAAc,M2G73jBrBL,QAAAC,eAAWorE,EAAAzrE,UAAA,S3Gm4jBJM,I2Gn4jBP,WAEC,MAAOb,MAAKmqE,a3Go4jBNxnE,I2Gj4jBP,SAAiBC,GAEhB5C,KAAKwqE,aAAa5nE,I3Gk4jBZ7B,WAAY,KACZC,aAAc,M2G73jBrBL,QAAAC,eAAWorE,EAAAzrE,UAAA,gB3Gm4jBJM,I2Gn4jBP,WAEC,MAAOb,MAAKoqE,a3Go4jBNznE,I2Gj4jBP,SAAwBC,GAEvB5C,KAAKyqE,aAAa7nE,I3Gk4jBZ7B,WAAY,KACZC,aAAc,M2Gt3jBtB,OAAAgrE,IArDqCpE,EAuDrCnoE,GAAgCJ,QAAvB2sE,I3G03jBNhE,qDAAqD,uDAAuDN,kDAAkD,SAASnpE,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4G77jBtB,IAAO6rE,GAAgB3tE,EAAa,8CACpC,IAAOkjB,GAAmBljB,EAAY,6CAGtC,IAAOgiB,GAAQhiB,EAAe,mCAE9B,IAAOwyB,GAAmBxyB,EAAY,8CACtC,IAAOwlB,GAAexlB,EAAa,0CACnC,IAAO43C,GAAI53C,EAAgB,mCAE3B,IAAOunE,GAAUvnE,EAAc,wC5G+7jB/B,I4G17jBM2nE,GAAmB,SAAAxlE,GAASX,EAA5BmmE,EAAmBxlE,EA0GxB,SA1GKwlE,GA0GO38D,EAA8BwtB,GAA9B,GAAAxtB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAwtB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzCr2B,EAAApB,KAAAU,KAxGMA,MAAAmsE,WAAqB,IACrBnsE,MAAAosE,SAAmB,IACnBpsE,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAMhBpC,MAAAqsE,mBAA6B,IAiGpCrsE,MAAKi3C,UAAY,GAAI12B,EACrBvgB,MAAKonB,UAAY7d,CACjBvJ,MAAKssE,cAAgBv1C,EA7FtBp2B,OAAAC,eAAWslE,EAAA3lE,UAAA,a5G+7jBJM,I4G/7jBP,WAEC,MAAOqlE,GAAoBhlE,W5Gg8jBrBH,WAAY,KACZC,aAAc,M4G37jBrBL,QAAAC,eAAWslE,EAAA3lE,UAAA,gB5Gi8jBJM,I4Gj8jBP,WAEC,MAAOb,MAAKssE,e5Gk8jBN3pE,I4G/7jBP,SAAwBC,GAEvB,GAAI5C,KAAKssE,eAAiB1pE,EACzB,MAED5C,MAAKssE,cAAgB1pE,CAErB5C,MAAKusE,0B5G87jBCxrE,WAAY,KACZC,aAAc,M4G57jBrBL,QAAAC,eAAWslE,EAAA3lE,UAAA,Y5G+7jBJM,I4G/7jBP,WAECb,KAAKmV,YAEL,OAAOnV,MAAKi3C,W5G+7jBNl2C,WAAY,KACZC,aAAc,M4G17jBrBL,QAAAC,eAAWslE,EAAA3lE,UAAA,Y5Gg8jBJM,I4Gh8jBP,WAEC,MAAOb,MAAKonB,W5Gi8jBNzkB,I4G97jBP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKonB,UACjB,MAEDpnB,MAAKonB,UAAYxkB,CAEjB,IAAI4M,GAAaxP,KAAK+lE,UAAUxmE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IACvBgB,KAAK+lE,UAAU/mE,GAAIuK,SAAWvJ,KAAKonB,W5G67jBtCrmB,WAAY,KACZC,aAAc,M4G37jBrBL,QAAAC,eAAWslE,EAAA3lE,UAAA,U5G87jBJM,I4G97jBP,WAEC,MAAOb,MAAKmC,S5G+7jBNQ,I4G57jBP,SAAkBC,GAEjB,GAAI5C,KAAKmC,QAAUS,EAClB,MAED5C,MAAKmC,QAAUS,CAEf5C,MAAK2mE,mB5G27jBC5lE,WAAY,KACZC,aAAc,M4Gx7jBrBL,QAAAC,eAAWslE,EAAA3lE,UAAA,U5G27jBJM,I4G37jBP,WAEC,MAAOb,MAAKoC,S5G47jBNO,I4Gz7jBP,SAAkBC,GAEjB,GAAI5C,KAAKoC,QAAUQ,EAClB,MAED5C,MAAKoC,QAAUQ,CAEf5C,MAAK2mE,mB5Gw7jBC5lE,WAAY,KACZC,aAAc,M4Gn6jBdklE,GAAA3lE,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,KAAM,IAAItV,GAOJykD,GAAA3lE,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,KAAM,IAAItV,GAMJykD,GAAA3lE,UAAAgsE,uBAAP,WAECvsE,KAAKqsE,mBAAqB,IAC1BrsE,MAAKmsE,WAAa,IAClBnsE,MAAKosE,SAAW,KAMVlG,GAAA3lE,UAAAmmE,qBAAP,WAEC1mE,KAAKmsE,WAAa,KAMZjG,GAAA3lE,UAAAomE,gBAAP,WAEC3mE,KAAKosE,SAAW,KAMTlG,GAAA3lE,UAAAisE,mBAAR,WAGC,GAAIxsE,KAAKqK,aACRrK,KAAKi3C,UAAUp2B,kBAAkB7gB,KAAKqK,aAEvC,IAAIrK,KAAKssE,eAAiB,sBAAuB,CAChD,GAAIpF,GAAuC,GAAIn2C,GAAoB,GAAIm7C,GACvEhF,GAAiBx0C,kBAAoB,KACrCw0C,GAAiBv0C,mBAAqB,KACtCu0C,GAAiBx+D,cAAgB,KACjC1I,MAAKi3C,UAAUx2B,eAAeymD,EAC9BlnE,MAAKqK,aAAe68D,MACd,IAAIlnE,KAAKssE,eAAiB,kBAAmB,CACnDtsE,KAAKi3C,UAAUx2B,eAAezgB,KAAKqK,aAAe,GAAI0Z,GAAgB,GAAImoD,KAG3ElsE,KAAKqsE,mBAAqB,MAOnBnG,GAAA3lE,UAAAksE,eAAR,WAECzsE,KAAK4mE,gBAAgB5mE,KAAKqK,aAAcrK,KAAKssE,cAE7CtsE,MAAKmsE,WAAa,MAMXjG,GAAA3lE,UAAAmsE,UAAR,WAEC1sE,KAAKynE,WAAWznE,KAAKqK,aAAcrK,KAAKssE,cAExCtsE,MAAKosE,SAAW,MAGVlG,GAAA3lE,UAAA4U,WAAP,WAEC,GAAInV,KAAKqsE,mBACRrsE,KAAKwsE,oBAEN,IAAIxsE,KAAKmsE,WACRnsE,KAAKysE,gBAEN,IAAIzsE,KAAKosE,SACRpsE,KAAK0sE,YAIAxG,GAAA3lE,UAAAylE,eAAP,WAEC,GAAI2G,GAAY,GAAIx2B,GAAKn2C,KAAKi3C,UAAWj3C,KAAKonB,UAC9CulD,GAAKz3D,eAAiBlV,IAEtB,OAAO2sE,GA3NMzG,GAAAhlE,UAAmB,yBAsOlC,OAAAglE,IAxOkCJ,EA0OLrmE,GAAAJ,QAApB6mE,I5Gw4jBN0G,8CAA8CxrE,UAAUoiB,6CAA6CpiB,UAAUif,mCAAmC,mCAAmCsD,0CAA0C,0CAA0CmN,8CAA8C,8CAA8CmlB,mCAAmC,mCAAmC4vB,wCAAwC,0CAA0C9tC,oDAAoD,SAASx5B,EAAQkB,EAAOJ,GAC5kB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6GjokBtB,IAAO6lE,GAAmB3nE,EAAY,iD7GuokBtC,I6GlokBM84B,GAAqB,SAAA32B,GAASX,EAA9Bs3B,EAAqB32B,EA6E1B,SA7EK22B,GA6EOM,EAAoByuC,EAAuBC,EAAuBC,GAAlE,GAAA3uC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAyuC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7E5lE,EAAApB,KAAAU,KAEAA,MAAKu3B,QAAUI,CACf33B,MAAKumE,WAAaH,CAClBpmE,MAAKwmE,WAAaH,CAClBrmE,MAAKymE,KAAOH,EA1Eb3lE,OAAAC,eAAWy2B,EAAA92B,UAAA,U7GipkBJM,I6GjpkBP,WAEC,MAAOb,MAAKu3B,S7GkpkBN50B,I6G/okBP,SAAkBC,GAEjB5C,KAAKu3B,QAAU30B,CAEf5C,MAAK0mE,wB7G+okBC3lE,WAAY,KACZC,aAAc,M6G1okBrBL,QAAAC,eAAWy2B,EAAA92B,UAAA,a7GgpkBJM,I6GhpkBP,WAEC,MAAOb,MAAKumE,Y7GipkBN5jE,I6G9okBP,SAAqBC,GAEpB5C,KAAKumE,WAAa3jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB7G8okBC5lE,WAAY,KACZC,aAAc,M6GzokBrBL,QAAAC,eAAWy2B,EAAA92B,UAAA,a7G+okBJM,I6G/okBP,WAEC,MAAOb,MAAKwmE,Y7GgpkBN7jE,I6G7okBP,SAAqBC,GAEpB5C,KAAKwmE,WAAa5jE,CAElB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB7G6okBC5lE,WAAY,KACZC,aAAc,M6GxokBrBL,QAAAC,eAAWy2B,EAAA92B,UAAA,O7G8okBJM,I6G9okBP,WAEC,MAAOb,MAAKymE,M7G+okBN9jE,I6G5okBP,SAAeC,GAEd5C,KAAKymE,KAAO7jE,CAEZ5C,MAAK0mE,wB7G4okBC3lE,WAAY,KACZC,aAAc,M6GrnkBdq2B,GAAA92B,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI/E,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAI7zB,EACJ,IAAIkH,EACJ,IAAIuiE,GAAaC,CAEjB,IAAI3B,EACJ,IAAIC,EACJ,IAAIviE,EAGJ,IAAIsyB,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAEjEpR,IAAezE,KAAKwmE,WAAa,IAAIxmE,KAAKumE,WAAa,EAEvD,IAAI9hE,GAAeyiE,EAAiBziE,aAAeyiE,EAAiBv+D,SAAW,KAAM,CACpFA,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,YACxD/9D,GAAYsjE,EAAiBtjE,UAAU/C,IAAI4D,EAC3CmuB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAI4D,EACvCouB,GAAWq0C,EAAiBr0C,SAAShyB,IAAI4D,OACnC,CACNkE,EAAU,GAAIyb,cAAapkB,KAAKwmE,WAAa,GAAGxmE,KAAKumE,WAAW,EAChE3iE,GAAY,GAAIogB,cAAavf,EAAY,EACzCmuB,GAAU,GAAI5O,cAAavf,EAAY,EACvCouB,GAAW,GAAI7O,cAAavf,EAAY,EAExCzE,MAAK2mE,kBAGN8B,EAAO,CACPC,GAAO,CAEP,IAAI5B,EACJ,IAAIG,EACJ,IAAIzmB,EAEJ,KAAKt6C,EAAI,EAAGA,GAAKlG,KAAKwmE,aAActgE,EAAG,CAEtC4gE,EAAa2B,CAEb,IAAItB,GAAkB/jE,KAAKgkE,GAAGlhE,EAAElG,KAAKwmE,UACrC,IAAIjgE,IAAYvG,KAAKu3B,QAAQn0B,KAAKqkC,IAAI0/B,EACtC,IAAIE,GAAoBrnE,KAAKu3B,QAAQn0B,KAAKokC,IAAI2/B,EAE9C,KAAKnoE,EAAI,EAAGA,GAAKgB,KAAKumE,aAAcvnE,EAAG,CACtC,GAAIsoE,GAAkB,EAAElkE,KAAKgkE,GAAGpoE,EAAEgB,KAAKumE,UACvC,IAAItjE,GAAWokE,EAAWjkE,KAAKqkC,IAAI6/B,EACnC,IAAIpkE,GAAWmkE,EAAWjkE,KAAKokC,IAAI8/B,EACnC,IAAIC,GAAiB,EAAEnkE,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAC/C,IAAIihE,GAAgBpkE,KAAKoB,KAAKtB,EAAEA,EAAID,EAAEA,EAEtC,IAAIjD,KAAKymE,KAAM,CAEdQ,EAAK,CACLzmB,GAAKgnB,EAAS,KAAMvkE,EAAEukE,EAAS,CAC/BT,IAASxgE,CACTygE,GAAQ9jE,MAEF,CACN+jE,EAAKO,EAAS,KAAMvkE,EAAEukE,EAAS,CAC/BhnB,GAAK,CACLumB,GAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,GAAKgB,KAAKumE,WAAY,CACzB3iE,EAAU6kE,GAAQ7kE,EAAUkjE,EAC5BljE,GAAU6kE,EAAK,GAAK7kE,EAAUkjE,EAAa,EAC3CljE,GAAU6kE,EAAK,GAAK7kE,EAAUkjE,EAAa,EAC3Cl0C,GAAQ61C,GAAQ71C,EAAQk0C,GAAe7jE,EAAEskE,EAAS,EAClD30C,GAAQ61C,EAAK,GAAK71C,EAAQk0C,EAAa,GAAOC,EAAMQ,EAAS,EAC7D30C,GAAQ61C,EAAK,GAAK71C,EAAQk0C,EAAa,GAAME,EAAMO,EAAS,EAC5D10C,GAAS41C,GAAQjB,EAAS,MAAOtkE,EAAEskE,EAAS,CAC5C30C,GAAS41C,EAAK,GAAKxB,CACnBp0C,GAAS41C,EAAK,GAAKjoB,MAEb,CAEN58C,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAK,GAAK1B,CACpBnjE,GAAU6kE,EAAK,GAAKzB,CACpBp0C,GAAQ61C,GAAQxlE,EAAEskE,CAClB30C,GAAQ61C,EAAK,GAAK1B,EAAMQ,CACxB30C,GAAQ61C,EAAK,GAAKzB,EAAMO,CACxB10C,GAAS41C,GAAQjB,EAAS,MAAOtkE,EAAEskE,EAAS,CAC5C30C,GAAS41C,EAAK,GAAKxB,CACnBp0C,GAAS41C,EAAK,GAAKjoB,EAGpB,GAAIxhD,EAAI,GAAKkH,EAAI,EAAG,CAEnB,GAAInH,IAAYiB,KAAKumE,WAAa,GAAGrgE,EAAIlH,CACzC,IAAIkB,IAAYF,KAAKumE,WAAa,GAAGrgE,EAAIlH,EAAI,CAC7C,IAAIy1B,IAAYz0B,KAAKumE,WAAa,IAAIrgE,EAAI,GAAKlH,EAAI,CACnD,IAAIiB,IAAYD,KAAKumE,WAAa,IAAIrgE,EAAI,GAAKlH,CAE/C,IAAIkH,GAAKlG,KAAKwmE,WAAY,CAEzB5iE,EAAU6kE,GAAQ7kE,EAAUkjE,EAC5BljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7CljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAE7Cn+D,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUj0C,CAClB9rB,GAAQ+/D,KAAUzoE,MAEZ,IAAIiG,GAAK,EAAG,CAElByC,EAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUxoE,CAClByI,GAAQ+/D,KAAUj0C,MAEZ,CACN9rB,EAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUxoE,CAClByI,GAAQ+/D,KAAUj0C,CAClB9rB,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUj0C,CAClB9rB,GAAQ+/D,KAAUzoE,GAIpBwoE,GAAQ,GAIVvB,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,CAE7C,GAAIkyC,GAAiDpzD,CAErD,IAAIqzD,GAAqBlpE,KAAKwmE,WAAWxmE,KAAKumE,WAAW,EAAIvmE,KAAKumE,UAClE,IAAI3iE,GAAyB,GAAIogB,cAAaklD,EAAY,EAC1D,IAAI5kD,GAAyB,GAAIN,cAAaklD,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAKxiE,EAAI,EAAGA,GAAKlG,KAAKwmE,aAActgE,EAAG,CAEtC,GAAIihE,GAAkB/jE,KAAKgkE,GAAGlhE,EAAElG,KAAKwmE,UACrC,IAAIjgE,IAAYvG,KAAKu3B,QAAQn0B,KAAKqkC,IAAI0/B,EACtC,IAAIE,GAAoBrnE,KAAKu3B,QAAQn0B,KAAKokC,IAAI2/B,EAE9C,KAAKnoE,EAAI,EAAGA,GAAKgB,KAAKumE,aAAcvnE,EAAG,CACtC,GAAIsoE,GAAkB,EAAElkE,KAAKgkE,GAAGpoE,EAAEgB,KAAKumE,UACvC,IAAItjE,GAAWokE,EAAWjkE,KAAKqkC,IAAI6/B,EACnC,IAAIpkE,GAAWmkE,EAAWjkE,KAAKokC,IAAI8/B,EAEnC,IAAItnE,KAAKymE,KAAM,CACdM,GAASxgE,CACTygE,GAAQ9jE,MAEF,CACN6jE,EAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,EAAI,EAAG,CAEV4E,EAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,CAEpB1iD,GAAUokD,KAAU,CAGpB,IAAIxiE,EAAI,EAAG,CACV,GAAImlE,GAAenlE,GAAK,EAAI,GAAK,GAAGlG,KAAKumE,WAAWvnE,GAAK,GAAGA,GAAK,EAAIgB,KAAKumE,WAAW,EACrF3iE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EACrCznE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EACrCznE,GAAU6kE,GAAQ7kE,EAAU6kE,KAAS4C,EAErCznE,GAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,CAEpB1iD,GAAUokD,KAAU,GAMtB,GAAI1pE,EAAIgB,KAAKumE,WAAY,CACxB3iE,EAAU6kE,KAAUxlE,CACpBW,GAAU6kE,KAAU1B,CACpBnjE,GAAU6kE,KAAUzB,IAMvBiC,EAAanhE,aAAalE,EAC1BqlE,GAAa5kD,aAAaC,IAOrB+S,GAAA92B,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAEzC,GAAI/3B,GAAUkH,CACd,IAAIzB,IAAsBzE,KAAKwmE,WAAa,IAAIxmE,KAAKumE,WAAa,EAClE,IAAI19D,EAGJ,IAAIkuB,GAAgB,sBAAuB,CAE1CtyB,GAAezE,KAAKwmE,WAAa,IAAIxmE,KAAKumE,WAAa,EAEvD,IAAIW,GAA6DrxD,CAEjE,IAAIpR,GAAeyiE,EAAiBziE,aAAeyiE,EAAiBr+D,KAAO,KAAM,CAChFA,EAAMq+D,EAAiBr+D,IAAIhI,IAAI4D,OACzB,CACNoE,EAAM,GAAImb,cAAavf,EAAY,GAGpC,GAAI0B,GAAe,CACnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAKwmE,aAActgE,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKumE,aAAcvnE,EAAG,CACtC6J,EAAI1C,KAAanH,EAAEgB,KAAKumE,WAAavmE,KAAKmC,OAC1C0G,GAAI1C,KAAaD,EAAElG,KAAKwmE,WAAaxmE,KAAKoC,SAI5C8kE,EAAiBrkE,OAAOgG,OAElB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAAM,IAhVoC6uC,EAkVpCzmE,GAA+BJ,QAAtBg4B,I7GwkkBNqwC,iDAAiD,mDAAmDmF,mDAAmD,SAAStuE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Gr6kBtB,IAAO6lE,GAAmB3nE,EAAY,iD9G26kBtC,I8Gt6kBMuuE,GAAoB,SAAApsE,GAASX,EAA7B+sE,EAAoBpsE,EAyFzB,SAzFKosE,GAyFOn1C,EAAoBo1C,EAAwBC,EAAuBC,EAAsB3G,GAAzF,GAAA3uC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAo1C,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA3G,QAAA,GAAkB,CAAlBA,EAAA,KAEpG5lE,EAAApB,KAAAU,KApFOA,MAAAgC,aAAsB,CAsF7BhC,MAAKu3B,QAAUI,CACf33B,MAAKktE,YAAcH,CACnB/sE,MAAKmtE,WAAaH,CAClBhtE,MAAKotE,WAAaH,CAClBjtE,MAAKymE,KAAOH,EArFb3lE,OAAAC,eAAWksE,EAAAvsE,UAAA,U9Gs7kBJM,I8Gt7kBP,WAEC,MAAOb,MAAKu3B,S9Gu7kBN50B,I8Gp7kBP,SAAkBC,GAEjB5C,KAAKu3B,QAAU30B,CACf5C,MAAK0mE,wB9Gq7kBC3lE,WAAY,KACZC,aAAc,M8Gh7kBrBL,QAAAC,eAAWksE,EAAAvsE,UAAA,c9Gs7kBJM,I8Gt7kBP,WAEC,MAAOb,MAAKktE,a9Gu7kBNvqE,I8Gp7kBP,SAAsBC,GAErB5C,KAAKktE,YAActqE,CACnB5C,MAAK0mE,wB9Gq7kBC3lE,WAAY,KACZC,aAAc,M8Gh7kBrBL,QAAAC,eAAWksE,EAAAvsE,UAAA,a9Gs7kBJM,I8Gt7kBP,WAEC,MAAOb,MAAKmtE,Y9Gu7kBNxqE,I8Gp7kBP,SAAqBC,GAEpB5C,KAAKmtE,WAAavqE,CAClB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB9Gq7kBC5lE,WAAY,KACZC,aAAc,M8Gh7kBrBL,QAAAC,eAAWksE,EAAAvsE,UAAA,a9Gs7kBJM,I8Gt7kBP,WAEC,MAAOb,MAAKotE,Y9Gu7kBNzqE,I8Gp7kBP,SAAqBC,GAEpB5C,KAAKotE,WAAaxqE,CAClB5C,MAAK0mE,sBACL1mE,MAAK2mE,mB9Gq7kBC5lE,WAAY,KACZC,aAAc,M8Gh7kBrBL,QAAAC,eAAWksE,EAAAvsE,UAAA,O9Gs7kBJM,I8Gt7kBP,WAEC,MAAOb,MAAKymE,M9Gu7kBN9jE,I8Gp7kBP,SAAeC,GAEd5C,KAAKymE,KAAO7jE,CACZ5C,MAAK0mE,wB9Gq7kBC3lE,WAAY,KACZC,aAAc,M8G55kBd8rE,GAAAvsE,UAAAqmE,gBAAP,SAAuB/wD,EAAwBkhB,GAE9C,GAAIpuB,EACJ,IAAI/E,EACJ,IAAIgvB,EACJ,IAAIC,EAEJ,IAAI7zB,GAAUkH,CACd,IAAIjD,GAAUC,EAAUqD,EAAUO,EAAWC,EAAWw5D,EAAW8M,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAI3G,GAAoB,CAExB,IAAIhrC,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE7V,MAAKgC,cAAgBhC,KAAKotE,WAAa,IAAIptE,KAAKmtE,WAAa,EAC7DpL,GAAa/hE,KAAKotE,WAAWptE,KAAKmtE,WAAW,CAG7C,IAAIntE,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CACtDkE,EAAUu+D,EAAiBv+D,QAAQ9H,IAAIqmE,EAAiBvF,YACxD/9D,GAAYsjE,EAAiBtjE,UAAU/C,IAAIb,KAAKgC,aAChD4wB,GAAUs0C,EAAiBt0C,QAAQ/xB,IAAIb,KAAKgC,aAC5C6wB,GAAWq0C,EAAiBr0C,SAAShyB,IAAIb,KAAKgC,kBACxC,CACN2G,EAAU,GAAIyb,aAAY29C,EAC1Bn+D,GAAY,GAAIogB,cAAahkB,KAAKgC,aAAa,EAC/C4wB,GAAU,GAAI5O,cAAahkB,KAAKgC,aAAa,EAC7C6wB,GAAW,GAAI7O,cAAahkB,KAAKgC,aAAa,EAE9ChC,MAAK2mE,kBAIN8B,EAAO,CACPC,GAAO,C9G25kBE,I8Gx5kBL6E,GAA+B,EAAEnqE,KAAKgkE,GAAGpnE,KAAKmtE,UAClD,IAAIK,GAA+B,EAAEpqE,KAAKgkE,GAAGpnE,KAAKotE,UAElD,IAAIrG,GAAcC,CAClB,IAAIC,GAAWzmB,EAAWitB,EAAWC,CACrC,IAAI5G,GAAoB,CACxB,IAAIgE,GAAyB,C9Gy5kBpB,I8Gt5kBL/rE,GAAUmB,EAAUu0B,EAAUx0B,EAAUV,CAE5C,KAAK2G,EAAI,EAAGA,GAAKlG,KAAKotE,aAAclnE,EAAG,CAEtC4gE,EAAagE,EAAgB,CAE7B,KAAK9rE,EAAI,EAAGA,GAAKgB,KAAKmtE,aAAcnuE,EAAG,CAGtCquE,EAAmBruE,EAAEuuE,CACrBD,GAAmBpnE,EAAEsnE,CAErBjuE,GAAS6D,KAAKqkC,IAAI6lC,EAClBxmE,GAAKvH,EAAO6D,KAAKqkC,IAAI4lC,EACrBtmE,GAAKxH,EAAO6D,KAAKokC,IAAI6lC,EACrB9M,GAAKn9D,KAAKokC,IAAI8lC,EAEdrqE,GAAIjD,KAAKu3B,QAAQn0B,KAAKqkC,IAAI4lC,GAAoBrtE,KAAKktE,YAAYpmE,CAC/D5D,GAAIlD,KAAKu3B,QAAQn0B,KAAKokC,IAAI6lC,GAAoBrtE,KAAKktE,YAAYnmE,CAC/DR,GAAKL,GAAKlG,KAAKotE,WAAa,EAAIptE,KAAKktE,YAAY3M,CAEjD,IAAIvgE,KAAKymE,KAAM,CAEdgH,GAAMlN,CACNmN,GAAK3mE,CACLkgE,GAAK,CACLzmB,GAAMjhD,EAAQuH,EAAGvH,EAAS0D,EAAEjD,KAAKu3B,OACjCwvC,IAASxgE,CACTygE,GAAQ9jE,MAEF,CACNuqE,EAAK1mE,CACL2mE,GAAKnN,CACL0G,GAAM1nE,EAAQuH,EAAGvH,EAAS0D,EAAEjD,KAAKu3B,OACjCipB,GAAK,CACLumB,GAAQ7jE,CACR8jE,GAAQzgE,EAGT,GAAIvH,GAAKgB,KAAKmtE,WAAY,CACzBvpE,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,EAC7CljE,GAAU6kE,EAAO,GAAK7kE,EAAUkjE,EAAa,OACvC,CACNljE,EAAU6kE,GAAQxlE,CAClBW,GAAU6kE,EAAO,GAAK1B,CACtBnjE,GAAU6kE,EAAO,GAAKzB,EAGvBp0C,EAAQ61C,GAAQ3hE,CAChB8rB,GAAQ61C,EAAO,GAAKgF,CACpB76C,GAAQ61C,EAAO,GAAKiF,CACpB76C,GAAS41C,KAAUlpE,EAAQwH,EAAGxH,EAAS2D,EAAElD,KAAKu3B,QAC9C1E,GAAS41C,EAAO,GAAKxB,CACrBp0C,GAAS41C,EAAO,GAAKjoB,CAErBioB,IAAQ,CAGR,IAAIzpE,EAAI,GAAKkH,EAAI,EAAG,CACnBnH,EAAI+rE,CACJ5qE,GAAI4qE,EAAkB,CACtBr2C,GAAIv0B,EAAIF,KAAKmtE,WAAa,CAC1BltE,GAAIlB,EAAIiB,KAAKmtE,WAAa,CAE1BxkE,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUxoE,CAClByI,GAAQ+/D,KAAUj0C,CAElB9rB,GAAQ+/D,KAAU3pE,CAClB4J,GAAQ+/D,KAAUj0C,CAClB9rB,GAAQ+/D,KAAUzoE,EAGnB6qE,KAKF5D,EAAiBt+D,WAAWD,EAE5Bu+D,GAAiBp/D,aAAalE,EAC9BsjE,GAAiBz1C,WAAWmB,EAC5Bs0C,GAAiBv1C,YAAYkB,OAEvB,IAAIkE,GAAgB,kBAAmB,GAQxC+1C,GAAAvsE,UAAAknE,WAAP,SAAkB5xD,EAAwBkhB,GAGzC,GAAI/3B,GAAUkH,CACd,IAAI2C,EAGJ,IAAIkuB,GAAgB,sBAAuB,CAE1C,GAAImwC,GAA6DrxD,CAGjE,IAAIqxD,EAAiBr+D,KAAO7I,KAAKgC,cAAgBklE,EAAiBziE,YAAa,CAC9EoE,EAAMq+D,EAAiBr+D,IAAIhI,IAAIb,KAAKgC,kBAC9B,CACN6G,EAAM,GAAImb,cAAahkB,KAAKgC,aAAa,G9Gk4kBjC,G8G93kBLmE,GAAe,CAGnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAKotE,aAAclnE,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKmtE,aAAcnuE,EAAG,CAEtC6J,EAAI1C,KAAanH,EAAEgB,KAAKmtE,WAAantE,KAAKmC,OAC1C0G,GAAI1C,KAAaD,EAAElG,KAAKotE,WAAaptE,KAAKoC,SAK5C8kE,EAAiBrkE,OAAOgG,OAElB,IAAIkuB,GAAgB,kBAAmB,GAIhD,OAAA+1C,IA5RmC5G,EA8RLzmE,GAAAJ,QAArBytE,I9G43kBNpF,iDAAiD,mDAAmDiG,yCAAyC,SAASpvE,EAAQkB,EAAOJ,SAElKuuE,+CAA+C,SAASrvE,EAAQkB,EAAOJ,GAI7E,G+GnqlBMwuE,GAAmB,WAAzB,QAAMA,MAEEA,EAAAttE,UAAAutE,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAKzK,KAAM,CACxB,MAAOyK,GAIRG,EAAOH,CACPE,GAAOF,EAAKzK,IAEZ,OAAO2K,EAAM,CACZA,EAAOA,EAAK3K,IACZ,IAAI2K,EAAM,CACTC,EAAOA,EAAK5K,IACZ2K,GAAOA,EAAK3K,MAId0K,EAAQE,EAAK5K,IACb4K,GAAK5K,KAAO,IAGZyK,GAAO/tE,KAAK8tE,uBAAuBC,EACnCC,GAAQhuE,KAAK8tE,uBAAuBE,E/GgqlB9B,I+G7plBF3oB,EACJ,IAAI8oB,EACJ,IAAI/uE,EAEJ,KAAK2uE,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKK,OAASJ,EAAMI,OAAQ,CAC/BhvE,EAAI2uE,CACJA,GAAOA,EAAKzK,SACN,CACNlkE,EAAI4uE,CACJA,GAAQA,EAAM1K,KAGf,IAAKje,EACJA,EAASjmD,MACT+uE,GAAK7K,KAAOlkE,CAEb+uE,GAAO/uE,EAGR,GAAI2uE,EACHI,EAAK7K,KAAOyK,MAAW,IAAIC,EAC3BG,EAAK7K,KAAO0K,CAEb,OAAO3oB,GAGDwoB,GAAAttE,UAAA8tE,sBAAP,SAA6BN,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAKzK,KAAM,CACxB,MAAOyK,GAIRG,EAAOH,CACPE,GAAOF,EAAKzK,IAEZ,OAAO2K,EAAM,CACZA,EAAOA,EAAK3K,IACZ,IAAI2K,EAAM,CACTC,EAAOA,EAAK5K,IACZ2K,GAAOA,EAAK3K,MAId0K,EAAQE,EAAK5K,IACb4K,GAAK5K,KAAO,IAGZyK,GAAO/tE,KAAKquE,sBAAsBN,EAClCC,GAAQhuE,KAAKquE,sBAAsBL,E/GqplB7B,I+GlplBF3oB,EACJ,IAAI8oB,EACJ,IAAI/uE,EACJ,IAAIkvE,GAAa,CAEjB,KAAKP,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,C/GoplB7C,G+G/olBLO,GAAaR,EAAKS,aACtB,IAAIC,GAAaT,EAAMQ,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYX,EAAKY,QACrB,IAAIC,GAAYZ,EAAMW,QAEtB,IAAID,GAAME,EAAI,CACb,GAAIb,EAAKK,OAASJ,EAAMI,OACvBE,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZlvE,EAAI2uE,CACJA,GAAOA,EAAKzK,SACN,CACNlkE,EAAI4uE,CACJA,GAAQA,EAAM1K,KAGf,IAAKje,EAAQ,CACZA,EAASjmD,CACT+uE,GAAO/uE,MACD,CACN+uE,EAAK7K,KAAOlkE,CACZ+uE,GAAO/uE,GAIT,GAAI2uE,EACHI,EAAK7K,KAAOyK,MAAW,IAAIC,EAC3BG,EAAK7K,KAAO0K,CAEb,OAAO3oB,GAET,OAAAwoB,KAE6BpuE,GAAAJ,QAApBwuE,O/GmplBHgB,8CAA8C,SAAStwE,EAAQkB,EAAOJ,GAI5E,GgHlzlBMyvE,GAAkB,WAAxB,QAAMA,MAEEA,EAAAvuE,UAAAutE,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDe,GAAAvuE,UAAA8tE,sBAAP,SAA6BN,GAE5B,MAAOA,GAET,OAAAe,KAEArvE,GAA4BJ,QAAnByvE,OhHkzlBHC,yCAAyC,SAASxwE,EAAQkB,EAAOJ,GAKvE,GiHt0lBM2vE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAAhgC,OAAgB,QAC/B,OAAAggC,KAEAvvE,GAAuBJ,QAAd2vE,OjHw0lBHE,gCAAgC,SAAS3wE,EAAQkB,EAAOJ,GAC9D,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkHx2lBtB,IAAOG,GAASjC,EAAe,oCAG/B,IAAO4wE,GAAS5wE,EAAe,8ClHk3lB/B,IkHv2lBM6wE,GAAI,SAAA1uE,GAASX,EAAbqvE,EAAI1uE,EAgBT,SAhBK0uE,KAkBJ1uE,EAAApB,KAAAU,KAdOA,MAAAqvE,aAAgC,GAAI7pE,OAiB5C7E,OAAAC,eAAWwuE,EAAA7uE,UAAA,elHk2lBJM,IkHl2lBP,WAEC,MAAOb,MAAKqvE,clHm2lBNtuE,WAAY,KACZC,aAAc,MkH/1lBrBL,QAAAC,eAAWwuE,EAAA7uE,UAAA,alHq2lBJM,IkHr2lBP,WAEC,MAAOuuE,GAAKluE,WlHs2lBNH,WAAY,KACZC,aAAc,MkHl2lBdouE,GAAA7uE,UAAAU,QAAP,YAOOmuE,GAAA7uE,UAAA+uE,eAAP,SAAsBC,GAErB,GAAI//D,GAAaxP,KAAKqvE,aAAa9vE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,IAAOxQ,EAAG,CACpC,GAAGgB,KAAKqvE,aAAarwE,GAAGurB,MAAMglD,EAC7B,MAAOvvE,MAAKqvE,aAAarwE,GAE3B,GAAIwwE,GAAuB,GAAIL,EAC/BK,GAAWjlD,KAAKglD,CAChBvvE,MAAKqvE,aAAahpE,KAAKmpE,EACvB,OAAOA,GAnDMJ,GAAAluE,UAAmB,cAsDlC,OAAAkuE,IAxDmB5uE,EA0DnBf,GAAcJ,QAAL+vE,IlHq2lBNjuE,oCAAoCC,UAAUquE,8CAA8C,gDAAgDC,uCAAuC,SAASnxE,EAAQkB,EAAOJ,GAI9M,GmH96lBMswE,GAAW,WAAjB,QAAMA,MASSA,EAAArlC,KAAc,MAUdqlC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEqBlwE,GAAAJ,QAAZswE,OnH+6lBHG,8CAA8C,SAASvxE,EAAQkB,EAAOJ,GA2B5E,GoH78lBM0wE,GAAkB,WAuBvB,QAvBKA,GAuBO7uB,GAPLlhD,KAAAohD,iBAA+B,GAAI57C,MAInCxF,MAAAqhD,cAA4B,GAAI77C,MAKtCxF,MAAKshD,WAAW,CAChBthD,MAAKkhD,QAAUA,CACf,IAAIlhD,KAAKkhD,SAAW,KAAM,CACzB,GAAIS,GAA0B3hD,KAAKkhD,QAAQt9C,UAAU/C,IAAIb,KAAKkhD,QAAQz8C,YACtE,KAAK,GAAIgD,GAAW,EAAGA,EAAIk6C,EAAWpiD,OAAO,EAAGkI,IAAK,CACpD,GAAGk6C,EAAWl6C,EAAE,GAAGzH,KAAKshD,WACvBthD,KAAKshD,WAAWK,EAAWl6C,EAAE,KAKlC,MAAAsoE,KAEAtwE,GAA4BJ,QAAnB0wE,OpH+7lBHN,+CAA+C,SAASlxE,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqHzgmBtB,IAAOG,GAASjC,EAAe,oCAM/B,IAAOwxE,GAAkBxxE,EAAa,6CrHghmBtC,IqHrgmBMyxE,GAAmB,SAAAtvE,GAASX,EAA5BiwE,EAAmBtvE,EAmBxB,SAnBKsvE,KAqBJtvE,EAAApB,KAAAU,KACAA,MAAKiwE,YAAc,GAAIzqE,MACvBxF,MAAKkwE,gBAAkB,GAAIvvE,OAC3BX,MAAKmwE,UAAU,CACfnwE,MAAKowE,UAAU,EAMTJ,EAAAzvE,UAAAU,QAAP,YAKAN,QAAAC,eAAIovE,EAAAzvE,UAAA,YrHy/lBGM,IqHz/lBP,WACC,MAAOb,MAAKmwE,WrH2/lBNxtE,IqHx/lBP,SAAaC,GACZ5C,KAAKmwE,UAAUvtE,GrH0/lBT7B,WAAY,KACZC,aAAc,MqHx/lBrBL,QAAAC,eAAIovE,EAAAzvE,UAAA,YrH2/lBGM,IqH3/lBP,WACC,MAAOb,MAAKowE,WrH6/lBNztE,IqH1/lBP,SAAaC,GACZ5C,KAAKowE,UAAUxtE,GrH4/lBT7B,WAAY,KACZC,aAAc,MqH3/lBdgvE,GAAAzvE,UAAA8vE,eAAP,WAEC,MAAOrwE,MAAKiwE,YAEND,GAAAzvE,UAAAq/C,iBAAP,WAEC,MAAO5/C,MAAKswE,cAENN,GAAAzvE,UAAAgwE,qBAAP,SAA4B3tE,GAE3B5C,KAAKwwE,kBAAkB5tE,EAEjBotE,GAAAzvE,UAAAihD,qBAAP,WAEC,MAAOxhD,MAAKwwE,kBAENR,GAAAzvE,UAAAkwE,iBAAP,SAAwBC,GAEvB1wE,KAAKswE,cAAcI,EAKbV,GAAAzvE,UAAAugD,oBAAP,SAA2B6vB,GAE1B,MAAO3wE,MAAKkwE,gBAAgBS,GAKtBX,GAAAzvE,UAAAqwE,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIf,GAAqCc,EACvFA,GAAOtmD,KAAKomD,CACZ3wE,MAAKiwE,YAAY5pE,KAAKyqE,EACtB9wE,MAAKkwE,gBAAgBS,GAAMG,EAG7B,OAAAd,IAzFkCxvE,EA2FlCf,GAA6BJ,QAApB2wE,IrHu/lBN7uE,oCAAoCC,UAAU0uE,6CAA6C,+CAA+CiB,6CAA6C,SAASxyE,EAAQkB,EAAOJ,GAKlN,GsHrmmBM2xE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAA1mC,KAAc,MAOd0mC,GAAAG,MAAe,OAC9B,OAAAH,KAEAvxE,GAA2BJ,QAAlB2xE,OtHqmmBHvsB,yCAAyC,SAASlmD,EAAQkB,EAAOJ,GAOvE,GuHvomBM++C,GAAa,WAAnB,QAAMA,MAKSA,EAAAgzB,QAAiB,SAKjBhzB,GAAAizB,MAAe,OAKfjzB,GAAAG,OAAgB,OAC/B,OAAAH,KAEuB3+C,GAAAJ,QAAd++C,OvHwomBHkzB,2CAA2C,SAAS/yE,EAAQkB,EAAOJ,GAKzE,GwHjqmBMkyE,GAAe,WAArB,QAAMA,KAMEvxE,KAAAixE,OAAgB,QAMhBjxE,MAAAwxE,QAAiB,SAMjBxxE,MAAAkxE,KAAc,MAMdlxE,MAAAmxE,MAAe,QACvB,MAAAI,KAEA9xE,GAAyBJ,QAAhBkyE,OxHiqmBHE,sCAAsC,SAASlzE,EAAQkB,EAAOJ,GACpE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyHrsmBtB,IAAOG,GAASjC,EAAe,oCzHkumB/B,IyHnsmBMmzE,GAAU,SAAAhxE,GAASX,EAAnB2xE,EAAUhxE,EAiPf,SAjPKgxE,GAiPOC,EAAiCjyB,EAAkBnU,EAAiCqmC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyBtwB,EAAuBuwB,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAAjyB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAnU,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAAqmC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAtwB,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAuwB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3S1xE,EAAApB,KAAAU,KAjFMA,MAAAqyE,SAAiC,GAAI7sE,MAkF3CxF,MAAKsyE,UAAYX,CACjB3xE,MAAK0/C,KAAOA,CACZ1/C,MAAK4xE,KAAOA,CACZ5xE,MAAK6xE,OAASA,CACd7xE,MAAK8xE,UAAYA,CACjB9xE,MAAK+xE,IAAMA,CACX/xE,MAAKgyE,YAAcA,CACnBhyE,MAAK0hD,MAAQA,CACb1hD,MAAKiyE,WAAaA,CAClBjyE,MAAKkyE,YAAcA,CACnBlyE,MAAKmyE,OAASA,CACdnyE,MAAKoyE,QAAUA,EAMhBzxE,OAAAC,eAAW8wE,EAAAnxE,UAAA,azH8gmBJM,IyH9gmBP,WAEC,MAAO6wE,GAAWxwE,WzH+gmBZH,WAAY,KACZC,aAAc,MyHrxmBP0wE,GAAAxwE,UAAmB,oBAuQlC,OAAAwwE,IAzQyBlxE,EA2QzBf,GAAoBJ,QAAXqyE,IzHmhmBNvwE,oCAAoCC,YAAYmxE,+CAA+C,SAASh0E,EAAQkB,EAAOJ,GAM1H,G0H9zmBMmzE,GAAmB,WAAzB,QAAMA,MASSA,EAAAxjC,OAAgB,QAOhBwjC,GAAAC,UAAmB,WAClC,OAAAD,KAEA/yE,GAA6BJ,QAApBmzE,O1Hg0mBHE,2CAA2C,SAASn0E,EAAQkB,EAAOJ,GAOzE,G2Hz1mBMszE,GAAe,WA4DpB,QA5DKA,GA4DO1vE,EAAgBmB,EAAoBC,EAAqBuuE,EAAqBC,EAAsBT,GAApG,GAAAnvE,QAAA,GAAc,CAAdA,EAAAoqC,IAAgB,GAAAjpC,QAAA,GAAkB,CAAlBA,EAAAipC,IAAoB,GAAAhpC,QAAA,GAAmB,CAAnBA,EAAAgpC,IAAqB,GAAAulC,QAAA,GAAmB,CAAnBA,EAAAvlC,IAAqB,GAAAwlC,QAAA,GAAoB,CAApBA,EAAAxlC,IAAsB,GAAA+kC,QAAA,GAAoB,CAApBA,EAAA/kC,KAIjH,MAAAslC,KAEAlzE,GAAyBJ,QAAhBszE,O3HszmBHrpB,+CAA+C,SAAS/qD,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Hn4mBrB,IAAOyyE,GAASv0E,EAAc,iCAC/B,IAAOowD,GAAOpwD,EAAe,+BAE7B,IAAOW,GAAKX,EAAe,+BAC3B,IAAOw0E,GAAUx0E,EAAc,mCAE/B,IAAOswD,GAAWtwD,EAAc,0CAEhC,IAAMspD,GAAe,SAAAnnD,GAASX,EAAxB8nD,EAAennD,EAyCpB,SAzCKmnD,GAyCOmrB,GAEXtyE,EAAApB,KAAAU,KAEA,IAAIgzE,YAAkBrkB,GACrB3uD,KAAK8wD,UAAY,GAAIgiB,GAAUE,OAE/BhzE,MAAK8wD,UAAYkiB,EAtCnBryE,OAAAC,eAAWinD,EAAAtnD,UAAA,a5Hs4mBJM,I4Ht4mBP,WAEC,MAAOgnD,GAAgB3mD,W5Hu4mBjBH,WAAY,KACZC,aAAc,M4Hj4mBrBL,QAAAC,eAAWinD,EAAAtnD,UAAA,a5Hw4mBJM,I4Hx4mBP,WAEC,MAAOb,MAAKizE,Y5Hy4mBNtwE,I4Ht4mBP,SAAqBC,GAEpB,GAAI5C,KAAKizE,YAAcrwE,EACtB,MAED,KAAKmwE,EAAWG,eAAetwE,EAAMwyD,SACpC,KAAM,IAAIl2D,GAAM,oFAEjBc,MAAKizE,WAAarwE,CAElB5C,MAAKmzE,SAASnzE,KAAKizE,WAAWliB,KAAK3sD,MAAOpE,KAAKizE,WAAWliB,KAAK1sD,OAE/DrE,MAAKozE,qB5Hm4mBCryE,WAAY,KACZC,aAAc,M4Ht6mBP6mD,GAAA3mD,UAAmB,2BAiDlC,OAAA2mD,IAnD8BgH,EAqD9BpvD,GAAyBJ,QAAhBwoD,I5H03mBNqH,+BAA+B9tD,UAAUiyE,iCAAiCjyE,UAAUi6B,+BAA+Bj6B,UAAUkyE,mCAAmClyE,UAAUguD,0CAA0C,4CAA4C7F,iDAAiD,SAAShrD,EAAQkB,EAAOJ,GAC5U,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6H57mBtB,IAAOkzE,GAAWh1E,EAAc,mCAChC,IAAO44D,GAAS54D,EAAc,iCAE9B,IAAOswD,GAAWtwD,EAAc,0CAGhC,IAAMupD,GAAiB,SAAApnD,GAASX,EAA1B+nD,EAAiBpnD,EAoCtB,SApCKonD,GAoCOkrB,GAEXtyE,EAAApB,KAAAU,KAEA,IAAIgzE,YAAkB7b,GACrBn3D,KAAK+3D,YAAc,GAAIwb,GAAYP,OAEnChzE,MAAK+3D,YAAcib,EAjCrBryE,OAAAC,eAAWknD,EAAAvnD,UAAA,a7H+7mBJM,I6H/7mBP,WAEC,MAAOinD,GAAkB5mD,W7Hg8mBnBH,WAAY,KACZC,aAAc,M6H17mBrBL,QAAAC,eAAWknD,EAAAvnD,UAAA,e7Hi8mBJM,I6Hj8mBP,WAEC,MAAOb,MAAKwzE,c7Hk8mBN7wE,I6H/7mBP,SAAuBC,GAEtB,GAAI5C,KAAKwzE,cAAgB5wE,EACxB,MAED5C,MAAKwzE,aAAe5wE,CAEpB5C,MAAKozE,qB7H87mBCryE,WAAY,KACZC,aAAc,M6H59mBP8mD,GAAA5mD,UAAmB,6BA2ClC,OAAA4mD,IA7CgC+G,EA+ChCpvD,GAA2BJ,QAAlByoD,I7Hs7mBNmQ,iCAAiC72D,UAAUqyE,mCAAmCryE,UAAUguD,0CAA0C,4CAA4CA,2CAA2C,SAAS7wD,EAAQkB,EAAOJ,GACpP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8H/+mBtB,IAAOG,GAASjC,EAAc,oC9Hq/mB9B,I8H9+mBMswD,GAAW,SAAAnuD,GAASX,EAApB8uD,EAAWnuD,EAoBhB,SApBKmuD,KAsBJnuD,EAAApB,KAAAU,KApBOA,MAAA0zE,WAA+B,GAAIluE,MAEpCxF,MAAAgS,OAAgB,CAChBhS,MAAAoQ,QAAiB,EAExBzP,OAAAC,eAAIiuD,EAAAtuD,UAAA,S9Hm/mBGM,I8Hn/mBP,WAEC,MAAOb,MAAKgS,Q9Ho/mBNjR,WAAY,KACZC,aAAc,M8Hl/mBrBL,QAAAC,eAAIiuD,EAAAtuD,UAAA,U9Hq/mBGM,I8Hr/mBP,WAEC,MAAOb,MAAKoQ,S9Hs/mBNrP,WAAY,KACZC,aAAc,M8Hz+mBd6tD,GAAAtuD,UAAA6yE,kBAAP,WAEC,GAAI5jE,GAAaxP,KAAK0zE,WAAWn0E,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwQ,EAAKxQ,IAC/BgB,KAAK0zE,WAAW10E,GAAGmnB,aAOd0oC,GAAAtuD,UAAAozE,eAAP,WAEC,MAAO3zE,KAAK0zE,WAAWn0E,OACtBS,KAAK0zE,WAAW,GAAGzyE,UAMd4tD,GAAAtuD,UAAAU,QAAP,WAEC,MAAOjB,KAAK0zE,WAAWn0E,OACtBS,KAAK0zE,WAAW,GAAGzyE,UAId4tD,GAAAtuD,UAAAqzE,eAAP,SAAsBC,GAErB7zE,KAAK0zE,WAAWrtE,KAAKwtE,EAErB,OAAOA,GAGDhlB,GAAAtuD,UAAAuzE,kBAAP,SAAyBD,GAExB7zE,KAAK0zE,WAAWz2D,OAAOjd,KAAK0zE,WAAW12D,QAAQ62D,GAAY,EAE3D,OAAOA,GAGDhlB,GAAAtuD,UAAA4yE,SAAP,SAAgB/uE,EAAcC,GAE7BrE,KAAKgS,OAAS5N,CACdpE,MAAKoQ,QAAU/L,EAGjB,OAAAwqD,IA3E0BruD,EA6E1Bf,GAAqBJ,QAAZwvD,I9Hi+mBN1tD,oCAAoCC,YAAY2yE,kDAAkD,SAASx1E,EAAQkB,EAAOJ,GAC7H,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+H3jnBtB,IAAO2zE,GAAaz1E,EAAc,4C/HiknBlC,I+H5jnBM01E,GAAkB,SAAAvzE,GAASX,EAA3Bk0E,EAAkBvzE,EAEvB,SAFKuzE,KAIJvzE,EAAApB,KAAAU,MAEF,MAAAi0E,IANiCD,EAQjCv0E,GAA4BJ,QAAnB40E,I/H6jnBNC,4CAA4C,8CAA8CA,6CAA6C,SAAS31E,EAAQkB,EAAOJ,GgItknBlK,GAAOwlE,GAAkBtmE,EAAa,6ChI2knBtC,IgInknBMy1E,GAAa,WAelB,QAfKA,KASGh0E,KAAAm0E,eAAwB,CACzBn0E,MAAAo0E,cAAuB,CACvBp0E,MAAAq0E,yBAAkC,CAMxCr0E,MAAKs0E,qBAAuB,GAAIzP,GAMjClkE,OAAAC,eAAWozE,EAAAzzE,UAAA,UhIujnBJM,IgIvjnBP,WAEC,MAAOb,MAAKgjC,UhIwjnBNrgC,IgIrjnBP,SAAkBC,GAEjB5C,KAAKgjC,SAAWpgC,CAChB5C,MAAKu0E,YAAcv0E,KAAKgjC,SAAS21B,ehIsjnB3B53D,WAAY,KACZC,aAAc,MgIjjnBrBL,QAAAC,eAAWozE,EAAAzzE,UAAA,chIujnBJM,IgIvjnBP,WAEC,MAAOb,MAAKw0E,mBhIwjnBN7xE,IgIrjnBP,SAAsBC,GAErB5C,KAAKw0E,kBAAoB5xE,GhIsjnBnB7B,WAAY,KACZC,aAAc,MgIjjnBrBL,QAAAC,eAAWozE,EAAAzzE,UAAA,chIujnBJM,IgIvjnBP,WAEC,MAAOb,MAAKy0E,chIwjnBN1zE,WAAY,KACZC,aAAc,MgInjnBrBL,QAAAC,eAAWozE,EAAAzzE,UAAA,ehIyjnBJM,IgIzjnBP,WAEC,MAAOb,MAAKo0E,ehI0jnBNrzE,WAAY,KACZC,aAAc,MgIrjnBrBL,QAAAC,eAAWozE,EAAAzzE,UAAA,0BhI2jnBJM,IgI3jnBP,WAEC,MAAOb,MAAKq0E,0BhI4jnBNtzE,WAAY,KACZC,aAAc,MgIvjnBdgzE,GAAAzzE,UAAAoZ,MAAP,WAEC3Z,KAAKo0E,cAAgBp0E,KAAKq0E,yBAA2B,CACrDr0E,MAAKu0E,YAAcv0E,KAAKw0E,kBAAmBx0E,KAAKw0E,kBAAsBx0E,KAAKgjC,SAAUhjC,KAAKgjC,SAAS21B,cAAgB,IACnH34D,MAAKm0E,eAAiBn0E,KAAKu0E,YAAav0E,KAAKu0E,YAAYh1E,OAAS,CAClES,MAAKy0E,aAAe,IACpBz0E,MAAKs0E,qBAAqBrP,UAQpB+O,GAAAzzE,UAAA67D,UAAP,SAAiBX,GAEhB,GAAIiZ,GAAgB10E,KAAK4b,MAAMgkB,kBAAoB67B,EAAK77B,kBAAoB67B,EAAKtnC,YAAYn0B,KAAKu0E,YAAav0E,KAAKm0E,eAEpH1Y,GAAK77B,iBAAmB5/B,KAAK4b,MAAMgkB,gBAEnC,OAAO80C,GAODV,GAAAzzE,UAAA87D,sBAAP,SAA6B94C,IAStBywD,GAAAzzE,UAAAi8D,YAAP,SAAmBj5C,GAElBvjB,KAAKo0E,eAEL,IAAI7wD,EAAOvF,mBACVhe,KAAKq0E,0BAEN,IAAIrP,GAAsBhlE,KAAKs0E,qBAAqB3Y,SACpDqJ,GAAKzhD,OAASA,CAEdyhD,GAAK1B,KAAOtjE,KAAKy0E,YACjBz0E,MAAKy0E,aAAezP,EAOdgP,GAAAzzE,UAAAq9D,gBAAP,SAAuBr6C,IAShBywD,GAAAzzE,UAAAy+D,gBAAP,SAAuBz7C,IAShBywD,GAAAzzE,UAAAo/D,YAAP,SAAmBp8C,IAIpB,OAAAywD,KAEAv0E,GAAuBJ,QAAd20E,IhI4inBNrP,6CAA6C,+CAA+CgQ,+CAA+C,SAASp2E,EAAQkB,EAAOJ,GACtK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiIptnBtB,IAAO2zE,GAAaz1E,EAAc,4CjI0tnBlC,IiIhtnBMq2E,GAAe,SAAAl0E,GAASX,EAAxB60E,EAAel0E,EAsDpB,SAtDKk0E,KAwDJl0E,EAAApB,KAAAU,KAhDMA,MAAA60E,YAAqB,CAEpB70E,MAAA80E,sBAA+B,CAC/B90E,MAAA+0E,gBAAyB,CACzB/0E,MAAAg1E,gBAAyB,CA8ChCh1E,MAAKi1E,SAAW,GAAIzvE,MACpBxF,MAAKk1E,mBAAqB,GAAI1vE,MAC9BxF,MAAKm1E,aAAe,GAAI3vE,MACxBxF,MAAKo1E,aAAe,GAAI5vE,MAExBxF,MAAK08D,kBAAoB,KA9C1B/7D,OAAAC,eAAWg0E,EAAAr0E,UAAA,qBjIitnBJM,IiIjtnBP,WAEC,MAAOb,MAAKk1E,oBjIktnBNn0E,WAAY,KACZC,aAAc,MiI7snBrBL,QAAAC,eAAWg0E,EAAAr0E,UAAA,ejImtnBJM,IiIntnBP,WAEC,MAAOb,MAAKo1E,cjIotnBNr0E,WAAY,KACZC,aAAc,MiI/snBrBL,QAAAC,eAAWg0E,EAAAr0E,UAAA,UjIqtnBJM,IiIrtnBP,WAEC,MAAOb,MAAKi1E,UjIstnBNl0E,WAAY,KACZC,aAAc,MiIjtnBrBL,QAAAC,eAAWg0E,EAAAr0E,UAAA,ejIutnBJM,IiIvtnBP,WAEC,MAAOb,MAAKm1E,cjIwtnBNp0E,WAAY,KACZC,aAAc,MiIntnBrBL,QAAAC,eAAWg0E,EAAAr0E,UAAA,UjIytnBJM,IiIztnBP,WAEC,MAAOb,MAAKq1E,UjI0tnBNt0E,WAAY,KACZC,aAAc,MiIxsnBd4zE,GAAAr0E,UAAA87D,sBAAP,SAA6B94C,GAE5BvjB,KAAKk1E,mBAAoBl1E,KAAK80E,yBAA+CvxD,EAOvEqxD,GAAAr0E,UAAAq9D,gBAAP,SAAuBr6C,GAEtBvjB,KAAKo1E,aAAcp1E,KAAKg1E,mBAAmCzxD,EAOrDqxD,GAAAr0E,UAAAy+D,gBAAP,SAAuBz7C,GAEtBvjB,KAAKm1E,aAAcn1E,KAAK+0E,mBAAmCxxD,EAOrDqxD,GAAAr0E,UAAAo/D,YAAP,SAAmBp8C,GAElBvjB,KAAKq1E,SAAoB9xD,EAMnBqxD,GAAAr0E,UAAAoZ,MAAP,WAECjZ,EAAAH,UAAMoZ,MAAKra,KAAAU,KAEXA,MAAKq1E,SAAW,IAEhB,IAAIr1E,KAAK60E,YAAc,EACtB70E,KAAKi1E,SAAS11E,OAASS,KAAK60E,YAAc,CAE3C,IAAI70E,KAAK80E,sBAAwB,EAChC90E,KAAKk1E,mBAAmB31E,OAASS,KAAK80E,sBAAwB,CAE/D,IAAI90E,KAAK+0E,gBAAkB,EAC1B/0E,KAAKm1E,aAAa51E,OAASS,KAAK+0E,gBAAkB,CAEnD,IAAI/0E,KAAKg1E,gBAAkB,EAC1Bh1E,KAAKo1E,aAAa71E,OAASS,KAAKg1E,gBAAkB,EAErD,OAAAJ,IA3H8BZ,EA6H9Bv0E,GAAyBJ,QAAhBu1E,IjIksnBNV,4CAA4C,8CAA8C3P,gDAAgD,SAAShmE,EAAQkB,EAAOJ,GACrK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkI/0nBtB,IAAO2K,GAAQzM,EAAgB,gCAG/B,IAAOy1E,GAAaz1E,EAAc,4ClIy1nBlC,IkI50nBMqkE,GAAgB,SAAAliE,GAASX,EAAzB6iE,EAAgBliE,EAoCrB,SApCKkiE,KAsCJliE,EAAApB,KAAAU,KApCOA,MAAAs1E,aAAwB,GAAItqE,EAC5BhL,MAAAu1E,cAAyB,GAAIvqE,EAE9BhL,MAAA4/B,iBAA0B,EAKjCj/B,OAAAC,eAAWgiE,EAAAriE,UAAA,elIi1nBJM,IkIj1nBP,WAEC,MAAOb,MAAKs1E,clIk1nBN3yE,IkI/0nBP,SAAuBC,GAEtB5C,KAAKs1E,aAAe1yE,GlIg1nBd7B,WAAY,KACZC,aAAc,MkI30nBrBL,QAAAC,eAAWgiE,EAAAriE,UAAA,gBlIi1nBJM,IkIj1nBP,WAEC,MAAOb,MAAKu1E,elIk1nBN5yE,IkI/0nBP,SAAwBC,GAEvB5C,KAAKu1E,cAAgB3yE,GlIg1nBf7B,WAAY,KACZC,aAAc,MkIj0nBd4hE,GAAAriE,UAAA67D,UAAP,SAAiBX,GAEhB,MAAOA,GAAKmB,kBAAkB58D,KAAKs1E,aAAct1E,KAAKu1E,eAExD,OAAA3S,IAlD+BoR,EAoDLv0E,GAAAJ,QAAjBujE,IlIy0nBN9iD,gCAAgC1e,UAAU8yE,4CAA4C,8CAA8Cpa,qDAAqD,SAASv7D,EAAQkB,EAAOJ,GACpN,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmIj5nBtB,IAAO2zE,GAAaz1E,EAAc,4CnIu5nBlC,ImIl5nBMg7D,GAAqB,SAAA74D,GAASX,EAA9Bw5D,EAAqB74D,EAE1B,SAFK64D,KAIJ74D,EAAApB,KAAAU,MAMMu5D,EAAAh5D,UAAA67D,UAAP,SAAiBX,GAEhB,GAAIiZ,GAAgB10E,KAAK4b,MAAMgkB,kBAAoB67B,EAAK77B,kBAAoB67B,EAAKa,iBAEjF,KAAKoY,EAAO,CACXjZ,EAAK77B,iBAAmB5/B,KAAK4b,MAAMgkB,gBAEnC,OAAO,OAGR,MAAOl/B,GAAAH,UAAM67D,UAAS98D,KAAAU,KAACy7D,GAEzB,OAAAlC,IAtBoCya,EAwBLv0E,GAAAJ,QAAtBk6D,InI84nBN2a,4CAA4C,8CAA8CsB,iCAAiC,SAASj3E,EAAQkB,EAAOJ,GoI56nBtJ,GAAOsvD,GAAOpwD,EAAe,+BAC7B,IAAOu0E,GAASv0E,EAAc,iCAC9B,IAAOk3E,GAASl3E,EAAc,kCAE9B,IAAOomD,GAASpmD,EAAc,sCAC9B,IAAOspD,GAAetpD,EAAa,8CpIg7nBnC,IoI36nBMm3E,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqB/3C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH83C,GAAAE,UAAd,SAAwBh4C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB63C,GACnB,MAAO73C,EAER,OAAmBA,GAcL83C,GAAAG,MAAf,SAAqBxsD,GAEpB,GAAI9pB,GAAwB8pB,EAAI9pB,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIgB,KAAK81E,UAAU94D,QAAQqM,EAAI0sD,OAAO/2E,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGM02E,GAAAM,SAAd,SAAuBp4C,GAEtB,SAAU,IAAU,SACnB,MAAOx6B,MAAKC,MAAeu6B,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOx6B,MAAKC,MAAMD,KAAK6yE,SAAS,SAEjC,IAAIj2E,KAAKk2E,aAAe,KAAM,CAC7Bl2E,KAAKk2E,YAAc,GAAIv1E,OACvBX,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,aAAe,MAChCl2E,MAAKk2E,YAAY,kBAAoB,OACrCl2E,MAAKk2E,YAAY,kBAAoB,QACrCl2E,MAAKk2E,YAAY,mBAAqB,OACtCl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,iBAAmB,OACpCl2E,MAAKk2E,YAAY,gBAAkB,OACnCl2E,MAAKk2E,YAAY,QAAU,GAC3Bl2E,MAAKk2E,YAAY,YAAc,GAC/Bl2E,MAAKk2E,YAAY,cAAgB,GACjCl2E,MAAKk2E,YAAY,QAAU,GAC3Bl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,eAAiB,KAClCl2E,MAAKk2E,YAAY,gBAAkB,OACnCl2E,MAAKk2E,YAAY,WAAa,OAC9Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,iBAAmB,QACpCl2E,MAAKk2E,YAAY,mBAAqB,OACtCl2E,MAAKk2E,YAAY,iBAAmB,OACpCl2E,MAAKk2E,YAAY,YAAc,KAC/Bl2E,MAAKk2E,YAAY,QAAU,KAC3Bl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,iBAAmB,KACpCl2E,MAAKk2E,YAAY,QAAU,KAC3Bl2E,MAAKk2E,YAAY,QAAU,KAC3Bl2E;KAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,oBAAsB,OACvCl2E,MAAKk2E,YAAY,gBAAkB,OACnCl2E,MAAKk2E,YAAY,kBAAoB,OACrCl2E,MAAKk2E,YAAY,YAAc,OAC/Bl2E,MAAKk2E,YAAY,aAAe,KAChCl2E,MAAKk2E,YAAY,SAAW,KAC5Bl2E,MAAKk2E,YAAY,eAAiB,OAClCl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,QAAU,KAC3Bl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,eAAiB,KAClCl2E,MAAKk2E,YAAY,qBAAuB,KACxCl2E,MAAKk2E,YAAY,kBAAoB,OACrCl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,SAAW,OAC5Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,iBAAmB,QACpCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,QAAU,QAC3Bl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,iBAAmB,QACpCl2E,MAAKk2E,YAAY,kBAAoB,QACrCl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,OAAS,QAC1Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,eAAiB,OAClCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,QAAU,QAC3Bl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,WAAa,OAC9Bl2E,MAAKk2E,YAAY,UAAY,OAC7Bl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,OAAS,QAC1Bl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,QAAU,QAC3Bl2E,MAAKk2E,YAAY,iBAAmB,QACpCl2E,MAAKk2E,YAAY,mBAAqB,QACtCl2E,MAAKk2E,YAAY,UAAY,OAC7Bl2E,MAAKk2E,YAAY,eAAiB,OAClCl2E,MAAKk2E,YAAY,gBAAkB,OACnCl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,UAAY,OAC7Bl2E,MAAKk2E,YAAY,cAAgB,OACjCl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,gBAAkB,QACnCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,QAAU,QAC3Bl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,wBAA0B,QAC3Cl2E,MAAKk2E,YAAY,gBAAkB,QACnCl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,eAAiB,QAClCl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,WAAa,QAC9Bl2E,MAAKk2E,YAAY,gBAAkB,QACnCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,iBAAmB,QACpCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,QAAU,QAC3Bl2E,MAAKk2E,YAAY,SAAW,QAC5Bl2E,MAAKk2E,YAAY,cAAgB,QACjCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,aAAe,QAChCl2E,MAAKk2E,YAAY,UAAY,QAC7Bl2E,MAAKk2E,YAAY,YAAc,QAC/Bl2E,MAAKk2E,YAAY,QAAU,OAC3Bl2E,MAAKk2E,YAAY,kBAAoB,OACrCl2E,MAAKk2E,YAAY,aAAe,OAChCl2E,MAAKk2E,YAAY,WAAa,OAC9Bl2E,MAAKk2E,YAAY,iBAAmB,OACpCl2E,MAAKk2E,YAAY,SAAW,CAC5Bl2E,MAAKk2E,YAAY,eAAiB,WAGnC,GAAIl2E,KAAKk2E,YAAYt4C,IAAS,KAC7B,MAAO59B,MAAKk2E,YAAYt4C,EAEzB,IAAeA,EAAMr+B,QAAU,GAAMS,KAAK61E,MAAMj4C,GAC/C,MAAOhR,UAAS,KAAOgR,GAGzB,MAAO,MAGM83C,GAAAnqC,MAAd,SAAoB3N,GAEnB,GAAIynB,GAAyBrlD,KAAKg2E,SAASp4C,EAE3C,IAAIynB,GAAU,KACb,KAAM,IAAIV,GAAU,wBAA0B/mB,EAE/C,OAAOynB,GAGMqwB,GAAAS,SAAd,SAAuB5rD,GAEtB,GAAIvqB,KAAKo2E,YAAY7rD,GACpB,MAAOA,EAER,IAAI86B,GAAarlD,KAAKq2E,SAAS9rD,EAE/B,IAAI86B,GAAU,KACb,MAAOA,EAER,KACCA,EAASixB,OAAO/rD,EAChBvqB,MAAKq2E,SAAS9rD,GAAQ86B,CACtB,OAAOA,GACN,MAAO7mD,IAGTwB,KAAKo2E,YAAY7rD,GAAQ,IAEzB,OAAOA,GAGMmrD,GAAAtgB,QAAd,SAAsBx3B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO59B,KAAKm2E,SAASv4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOp/B,GACRo/B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB+wB,GACnB,MAAO/wB,EAER,IAAIA,YAAgBiqB,GACnBjqB,EAA0BA,EAAMkzB,SAEjC,IAAIlzB,YAAgBk1C,GACnB,MAAoBl1C,GAAMw3B,OAE3B,MAAM,IAAIzQ,GAAU,gCAAkC/mB,GAGzC83C,GAAAa,cAAd,SAA4B34C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO59B,KAAKm2E,SAASv4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOp/B,GACRo/B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBiqB,GACnB,MAAOjqB,EAER,KACC,GAAI44C,GAAcd,EAAKtgB,QAAQx3B,EAC/B,OAAO,IAAIiqB,GAAgB2uB,GAC1B,MAAOh4E,IAGT,KAAM,IAAImmD,GAAU,kCAAoC/mB,GA1S1C83C,GAAAI,UAAmB,wBAEnBJ,GAAAU,YAAqB,GAAIz1E,OACzB+0E,GAAAW,SAAkB,GAAI11E,OAyStC,OAAA+0E,KAEAj2E,GAAcJ,QAALq2E,IpIm4nBNxmB,+BAA+B9tD,UAAUiyE,iCAAiCjyE,UAAUq1E,kCAAkCr1E,UAAUsjD,sCAAsC,sCAAsC4E,8CAA8C,gDAAgDx/C,6CAA6C,SAASvL,EAAQkB,EAAOJ,GqI9roBlX,GAAO6sE,GAAgB3tE,EAAa,8CAIpC,IAAOoD,GAAgBpD,EAAa,8CACpC,IAAOmD,GAAgBnD,EAAa,8CACpC,IAAOm4E,GAAgBn4E,EAAa,8CACpC,IAAOslB,GAAetlB,EAAa,6CAEnC,IAAOyM,GAAQzM,EAAe,gCAE9B,IAAMsD,GAAgB,WAAtB,QAAMA,MAQSA,EAAAsxB,oBAAd,SAAkCwjD,EAAkCC,EAAqCC,EAAyBn0E,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIW,GAAsBguE,EAAgB91E,IAAI6B,EAAOsF,EACrD,IAAIpE,GAAyBgzE,EAAmB/1E,IAAI+1E,EAAmBl0E,MAEvE,IAAIm0E,GAAU,KACbA,EAAS,GAAIH,GAAiBh0E,EAAQsF,OAClC,IAAI6uE,EAAOn0E,MAAQA,EAAQsF,EAC/B6uE,EAAOn0E,MAAQA,EAAQsF,CAExB,IAAI8uE,GAAkBH,EAAgB7yE,UACtC,IAAIizE,GAAqBH,EAAmB9yE,UAE5C,IAAIkzE,GAA2BH,EAAOh2E,IAAI6B,EAAOsF,EAGjDtF,IAASo0E,CAET,IAAI93E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,EAEJ,IAAI8wE,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAI1yE,GAAWC,EAAWuwB,CAC1B,IAAI51B,EAEJ,OAAOjB,EAAI0D,EAAO,CACjByD,EAAQwC,EAAQ3J,KAAK+3E,CACrBE,GAAKrzE,EAAUuC,EACfixE,GAAKxzE,EAAUuC,EAAQ,EACvBoxE,GAAK3zE,EAAUuC,EAAQ,EACvBA,GAAQwC,EAAQ3J,KAAK+3E,CACrBG,GAAKtzE,EAAUuC,EACfkxE,GAAKzzE,EAAUuC,EAAQ,EACvBqxE,GAAK5zE,EAAUuC,EAAQ,EACvBA,GAAQwC,EAAQ3J,KAAK+3E,CACrBI,GAAKvzE,EAAUuC,EACfmxE,GAAK1zE,EAAUuC,EAAQ,EACvBsxE,GAAK7zE,EAAUuC,EAAQ,EACvBuxE,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACXlyE,GAAKuyE,EAAIE,EAAMH,EAAII,CACnBzyE,GAAKoyE,EAAIK,EAAMH,EAAIC,CACnBhiD,GAAK8hD,EAAIE,EAAMH,EAAII,CACnB73E,GAAImD,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKuwB,EAAGA,EAGjCmhD,GAAY9wE,KAAOb,CACnB2xE,GAAY9wE,KAAOZ,CACnB0xE,GAAY9wE,KAAO2vB,CACnBmhD,GAAY9wE,KAAOjG,EAGpB42E,EAAOl0E,IAAIq0E,EAAahvE,EAExB,OAAO6uE,GAGMh1E,GAAAqwB,gBAAd,SAA8BykD,EAAkCqB,EAAuCnB,EAAyB90E,GAE/H,GAAI4G,GAAsBguE,EAAgB91E,IAAI81E,EAAgBj0E,MAC9D,IAAIs0E,GAA2BgB,EAAqBn3E,IAAIm3E,EAAqBt1E,MAE7E,IAAIm0E,GAAU,KACbA,EAAS,GAAIn1E,GAAiBK,EAE/B,IAAI+0E,GAAkBH,EAAgB7yE,UACtC,IAAIm0E,GAAmBpB,EAAO/yE,UAE9B,IAAI8uB,GAAuBikD,EAAOh2E,IAAIg2E,EAAOn0E,MAE7C,IAAI1D,GAAW,CACf,IAAIwQ,GAAaqnE,EAAOn0E,MAAMu1E,CAG9B,OAAOj5E,EAAIwQ,EAAK,CACfojB,EAAQ5zB,KAAO,CACf4zB,GAAQ5zB,KAAO,CACf4zB,GAAQ5zB,KAAO,EAGhBA,EAAI,CACJwQ,GAAMmnE,EAAgBj0E,MAAMo0E,CAC5B,IAAI3wE,EACJ,IAAI+xE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAOp5E,EAAIwQ,EAAK,CACfrJ,EAAQwC,EAAQ3J,KAAKi5E,CACrBrlD,GAAQzsB,IAAU6wE,EAAYkB,EAC9BtlD,GAAQzsB,EAAQ,IAAM6wE,EAAYmB,EAClCvlD,GAAQzsB,EAAQ,IAAM6wE,EAAYoB,EAClCjyE,GAAQwC,EAAQ3J,KAAKi5E,CACrBrlD,GAAQzsB,IAAU6wE,EAAYkB,EAC9BtlD,GAAQzsB,EAAQ,IAAM6wE,EAAYmB,EAClCvlD,GAAQzsB,EAAQ,IAAM6wE,EAAYoB,EAClCjyE,GAAQwC,EAAQ3J,KAAKi5E,CACrBrlD,GAAQzsB,IAAU6wE,EAAYkB,EAC9BtlD,GAAQzsB,EAAQ,IAAM6wE,EAAYmB,EAClCvlD,GAAQzsB,EAAQ,IAAM6wE,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPp5E,EAAI,CACJwQ,GAAMqnE,EAAOn0E,MAAMu1E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIt4E,EAGJ,OAAOjB,EAAIwQ,EAAK,CACf6oE,EAAKzlD,EAAQ5zB,EACbs5E,GAAK1lD,EAAQ5zB,EAAI,EACjBu5E,GAAK3lD,EAAQ5zB,EAAI,EACjBiB,GAAI,EAAImD,KAAKoB,KAAK6zE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC3lD,GAAQ5zB,KAAOq5E,EAAGp4E,CAClB2yB,GAAQ5zB,KAAOs5E,EAAGr4E,CAClB2yB,GAAQ5zB,KAAOu5E,EAAGt4E,EAGnB42E,EAAOl0E,IAAIiwB,EAEX,OAAOikD,GAGMh1E,GAAAqxB,qBAAd,SAAmCyjD,EAAkCC,EAAqC4B,EAA+B3B,EAAyBn0E,EAAcsF,EAAmBywE,GAAnB,GAAAzwE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAywE,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAI9vE,GAAsBguE,EAAgB91E,IAAI6B,EAAOsF,EACrD,IAAIpE,GAAyBgzE,EAAmB/1E,IAAI+1E,EAAmBl0E,MACvE,IAAImG,GAAmB2vE,EAAa33E,IAAI23E,EAAa91E,MAErD,IAAIm0E,GAAU,KACbA,EAAS,GAAIn1E,GAAiBgB,EAAQsF,OAClC,IAAI6uE,EAAOn0E,MAAQA,EAAQsF,EAC/B6uE,EAAOn0E,MAAQA,EAAQsF,CAExB,IAAI+uE,GAAqBH,EAAmB9yE,UAC5C,IAAIg+D,GAAe0W,EAAa10E,UAChC,IAAIgzE,GAAkBH,EAAgB7yE,UAEtC,IAAI40E,GAA4B7B,EAAOh2E,IAAI6B,EAAOsF,EAElD,IAAIhJ,GAAW,CACf,IAAIs7B,EACJ,IAAIC,EACJ,IAAIo+C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAI1yE,GAAWC,EAAWuwB,CAG1BnzB,IAASo0E,CAET,OAAO93E,EAAI0D,EAAO,CACjB43B,EAAS3xB,EAAQ3J,EACjBu7B,GAAS5xB,EAAQ3J,EAAI,EACrB25E,GAAShwE,EAAQ3J,EAAI,EAErB65E,GAAKhwE,EAAIyxB,EAAOwnC,EAAQ,EACxBgX,GAAMjwE,EAAI0xB,EAAOunC,EAAQ,GAAK+W,CAC9BE,GAAMlwE,EAAI8vE,EAAO7W,EAAQ,GAAK+W,CAE9BD,GAAKt+C,EAAOy8C,CACZkC,GAAKr1E,EAAUg1E,EACfM,GAAKt1E,EAAUg1E,EAAK,EACpBO,GAAKv1E,EAAUg1E,EAAK,EACpBA,GAAKr+C,EAAOw8C,CACZW,GAAM9zE,EAAUg1E,GAAMK,CACtBtB,GAAM/zE,EAAUg1E,EAAK,GAAKM,CAC1BtB,GAAMh0E,EAAUg1E,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAMj0E,EAAUg1E,GAAMK,CACtBnB,GAAMl0E,EAAUg1E,EAAK,GAAKM,CAC1BnB,GAAMn0E,EAAUg1E,EAAK,GAAKO,CAE1B9zE,GAAK0zE,EAAIrB,EAAMoB,EAAIjB,CACnBvyE,GAAKyzE,EAAIpB,EAAMmB,EAAIhB,CACnBjiD,GAAKkjD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAE51E,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKuwB,EAAGA,EAEvC6iD,GAAa15E,KAAOg6E,EAAM3zE,CAC1BqzE,GAAa15E,KAAOg6E,EAAM1zE,CAC1BozE,GAAa15E,KAAOg6E,EAAMnjD,EAG3BghD,EAAOl0E,IAAI+1E,EAAc1wE,EAEzB,OAAO6uE,GAGMh1E,GAAAswB,iBAAd,SAA+BwkD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyB90E,GAExK,GAAI4G,GAAsBguE,EAAgB91E,IAAI81E,EAAgBj0E,MAC9D,IAAIg2E,GAA4BU,EAAsBv4E,IAAIu4E,EAAsB12E,MAChF,IAAIs0E,GAA2BgB,EAAqBn3E,IAAIm3E,EAAqBt1E,MAE7E,IAAIm0E,GAAU,KACbA,EAAS,GAAIn1E,GAAiBK,EAE/B,IAAI+0E,GAAkBH,EAAgB7yE,UACtC,IAAIm0E,GAAmBpB,EAAO/yE,UAE9B,IAAI+uB,GAAwBgkD,EAAOh2E,IAAIg2E,EAAOn0E,MAE9C,IAAI1D,GAAW,CACf,IAAIwQ,GAAaqnE,EAAOn0E,MAAMu1E,CAG9B,OAAOj5E,EAAIwQ,EAAK,CACfqjB,EAAS7zB,KAAO,CAChB6zB,GAAS7zB,KAAO,CAChB6zB,GAAS7zB,KAAO,EAGjB,GAAIq6E,EACJ,IAAIlzE,EACJ,IAAI+xE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBt6E,GAAI,CACJwQ,GAAMmnE,EAAgBj0E,MAAMo0E,CAG5B,OAAO93E,EAAIwQ,EAAK,CACf6pE,EAASrC,EAAYsC,EACrBnzE,GAAQwC,EAAQ3J,KAAKi5E,CACrBplD,GAAS1sB,MAAYuyE,EAAaR,GAAImB,CACtCxmD,GAAS1sB,MAAYuyE,EAAaP,GAAIkB,CACtCxmD,GAAS1sB,IAAUuyE,EAAaN,GAAIiB,CACpClzE,GAAQwC,EAAQ3J,KAAKi5E,CACrBplD,GAAS1sB,MAAYuyE,EAAaR,GAAImB,CACtCxmD,GAAS1sB,MAAYuyE,EAAaP,GAAIkB,CACtCxmD,GAAS1sB,IAAUuyE,EAAaN,GAAIiB,CACpClzE,GAAQwC,EAAQ3J,KAAKi5E,CACrBplD,GAAS1sB,MAAYuyE,EAAaR,GAAImB,CACtCxmD,GAAS1sB,MAAYuyE,EAAaP,GAAIkB,CACtCxmD,GAAS1sB,IAAUuyE,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPt6E,EAAI,CACJwQ,GAAMqnE,EAAOn0E,MAAMu1E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIt4E,EAGJ,OAAOjB,EAAIwQ,EAAK,CACf6oE,EAAKxlD,EAAS7zB,EACds5E,GAAKzlD,EAAS7zB,EAAI,EAClBu5E,GAAK1lD,EAAS7zB,EAAI,EAClBiB,GAAI,EAAImD,KAAKoB,KAAK6zE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC1lD,GAAS7zB,KAAOq5E,EAAGp4E,CACnB4yB,GAAS7zB,KAAOs5E,EAAGr4E,CACnB4yB,GAAS7zB,KAAOu5E,EAAGt4E,EAGpB42E,EAAOl0E,IAAIkwB,EAEX,OAAOgkD,GAIMh1E,GAAA0G,YAAd,SAA0BouE,EAAkCE,EAAyB90E,EAAqCW,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAI6uE,GAAU,KACbA,EAAS,GAAIl1E,GAAiBI,EAE/B,IAAIk2E,GAAmBpB,EAAO/yE,UAE9B,IAAI+E,GAAmBguE,EAAOh2E,IAAI6B,EAAOsF,EAEzC,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIsJ,GAAa9M,EAAMu1E,CAEvB,OAAOj5E,EAAIwQ,EAAK,CACf3G,EAAI7J,KAAOkH,EAAE,EACb2C,GAAI7J,KAAO,GAAOkH,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGN2wE,EAAOl0E,IAAIkG,EAAKb,EAEhB,OAAO6uE,GAGMh1E,GAAA4iB,eAAd,SAA6BkyD,EAAkCE,EAAwB90E,EAAqCW,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAI6uE,GAAU,KACbA,EAAS,GAAIhzD,GAAgB9hB,EAE9B,IAAIoE,GAAe,CACnB,IAAIoe,GAAoB,GAAIC,YAAW9hB,EAAM,EAE7C,OAAOyD,EAAQzD,EAAM,EAAG,CACvB,GAAIyD,EAAM,EAAI,EAAG,CAChBoe,EAAOpe,GAAS,GAChBoe,GAAOpe,EAAQ,GAAK,GACpBoe,GAAOpe,EAAQ,GAAK,GACpBoe,GAAOpe,EAAQ,GAAK,QACd,CACNoe,EAAOpe,GAAS,GAChBoe,GAAOpe,EAAQ,GAAK,GACpBoe,GAAOpe,EAAQ,GAAK,GACpBoe,GAAOpe,EAAQ,GAAK,IAGrBA,GAAS,EAGV0wE,EAAOl0E,IAAI4hB,EAAQvc,EAEnB,OAAO6uE,GAGMh1E,GAAAoH,SAAd,SAAuBF,EAAeC,EAAe6tE,EAAyBn0E,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAI6uE,EAAOn0E,MAAQA,EAAQsF,EAC1B6uE,EAAOn0E,MAAQA,EAAQsF,CAExB,IAAIiwE,GAAmBpB,EAAO/yE,UAE9B,IAAI+E,GAAmBguE,EAAOh2E,IAAI6B,EAAOsF,EAEzC,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIsJ,GAAa9M,EAAMu1E,CAEvB,OAAOj5E,EAAIwQ,EAAK,CACf3G,EAAI7J,MAAQ+J,CACZF,GAAI7J,MAAQgK,EAGb6tE,EAAOl0E,IAAIkG,EAAKb,GAGHnG,GAAAqH,MAAd,SAAoBA,EAAc2tE,EAAyBn0E,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAI6uE,EAAOn0E,MAAQA,EAAQsF,EAC1B6uE,EAAOn0E,MAAQA,EAAQsF,CAExB,IAAIiwE,GAAmBpB,EAAO/yE,UAE9B,IAAIF,GAAyBizE,EAAOh2E,IAAI6B,EAAOsF,EAE/C,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIsJ,GAAa9M,EAAMu1E,CAEvB,OAAOj5E,EAAIwQ,EAAK,CACf5L,EAAU5E,MAAQkK,CAClBtF,GAAU5E,MAAQkK,CAClBtF,GAAU5E,MAAQkK,EAGnB2tE,EAAOl0E,IAAIiB,EAAWoE,GAGTnG,GAAAsH,oBAAd,SAAkCC,EAAoBwtE,EAAqC2C,EAAmCC,EAAoC92E,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAIpE,GAAyBgzE,EAAmB/1E,IAAI6B,EAAOsF,EAC3D,IAAI+uE,GAAqBH,EAAmB9yE,UAE5C,IAAI8uB,EACJ,IAAI6mD,EAEJ,IAAIF,EAAkB,CACrB3mD,EAAU2mD,EAAiB14E,IAAI6B,EAAOsF,EACtCyxE,GAAYF,EAAiBz1E,WAG9B,GAAI+uB,EACJ,IAAI6mD,EAEJ,IAAIF,EAAmB,CACtB3mD,EAAW2mD,EAAkB34E,IAAI6B,EAAOsF,EACxC0xE,GAAaF,EAAkB11E,WAGhC,GAAI9E,EACJ,IAAIqhE,EACJ,IAAIC,EACJ,IAAIqZ,GAAkB,GAAI3uE,EAC1B,IAAI4uE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAexwE,EAAUX,OACzBmxE,GAAajpE,QACbipE,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKh7E,EAAI,EAAGA,EAAI0D,IAAS1D,EAAG,CAE3BqhE,EAAKyZ,EAAM,CACXxZ,GAAKwZ,EAAM,CACXH,GAAO12E,EAAIW,EAAUk2E,EACrBH,GAAOz2E,EAAIU,EAAUy8D,EACrBsZ,GAAOpzE,EAAI3C,EAAU08D,EACrBqZ,GAASvwE,EAAUmJ,gBAAgBonE,EACnC/1E,GAAUk2E,GAAOH,EAAO12E,CACxBW,GAAUy8D,GAAMsZ,EAAOz2E,CACvBU,GAAU08D,GAAMqZ,EAAOpzE,CACvBuzE,IAAO/C,CAEP,IAAInkD,EAAS,CAEZytC,EAAK0Z,EAAM,CACXzZ,GAAKyZ,EAAM,CACXJ,GAAO12E,EAAI2vB,EAAQmnD,EACnBJ,GAAOz2E,EAAI0vB,EAAQytC,EACnBsZ,GAAOpzE,EAAIqsB,EAAQ0tC,EACnBqZ,GAASC,EAAa7vC,qBAAqB4vC,EAC3CA,GAAOlhE,WACPma,GAAQmnD,GAAOJ,EAAO12E,CACtB2vB,GAAQytC,GAAMsZ,EAAOz2E,CACrB0vB,GAAQ0tC,GAAMqZ,EAAOpzE,CACrBwzE,IAAON,EAGR,GAAI5mD,EAAU,CAEbwtC,EAAK2Z,EAAM,CACX1Z,GAAK0Z,EAAM,CACXL,GAAO12E,EAAI4vB,EAASmnD,EACpBL,GAAOz2E,EAAI2vB,EAASwtC,EACpBsZ,GAAOpzE,EAAIssB,EAASytC,EACpBqZ,GAASC,EAAa7vC,qBAAqB4vC,EAC3CA,GAAOlhE,WACPoa,GAASmnD,GAAOL,EAAO12E,CACvB4vB,GAASwtC,GAAMsZ,EAAOz2E,CACtB2vB,GAASytC,GAAMqZ,EAAOpzE,CACtByzE,IAAON,GAIT9C,EAAmBj0E,IAAIiB,EAAWoE,EAElC,IAAIuxE,EACHA,EAAiB52E,IAAIiwB,EAAS5qB,EAE/B,IAAIwxE,EACHA,EAAkB72E,IAAIkwB,EAAU7qB,GAKpBnG,GAAAo4E,cAAd,SAA4BtD,EAAgClyE,EAAoBy1E,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAIp4B,GAA0B40B,EAAgB50B,MAC9C,IAAIggB,GAAoB4U,EAAgBp3E,MAGxC26E,GAAc36E,OAAS,CAGvB,IAAIwiE,EAAalgE,EAAiBu4E,eAAiB31E,EAAc5C,EAAiBw4E,YACjF,MAAOt4B,EAER,IAAI/iD,EACJ,IAAI2J,GAAoCguE,EAAgB91E,IAAI81E,EAAgBj0E,MAAOy3E,EACnF,IAAIG,GAA6B,GAAI90E,MACrC,IAAI+0E,GAA0B14E,EAAiB24E,UAG/CD,GAAUh7E,OAASwiE,CACnB,KAAK/iE,EAAI,EAAGA,EAAI+iE,EAAY/iE,IAC3Bu7E,EAAUv7E,IAAM,CAEjB,IAAIy7E,EACJ,IAAIC,EACJ,IAAIv0E,GAAe,CACnB,IAAIw0E,GAAsBR,EAAYxD,EAAgB7yE,UAItD9E,GAAI,CACJ,OAAOA,EAAI+iE,EAAa4Y,GAAgB37E,EAAI,EAAI6C,EAAiBu4E,eAAiBj0E,EAAQ,EAAItE,EAAiBw4E,YAAa,CAC3HI,EAAgB9xE,EAAQ3J,EAExB,IAAIu7E,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAav0E,GACbo0E,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAat7E,KAAO07E,EAGrB34B,EAAS,GAAImqB,GAAiByK,EAAgBj3B,KAAKi3B,EAAgB7yE,WAAYw2E,EAAa/6E,OAAOo3E,EAAgB7yE,WAEnH6yE,GAAkBA,EAAgBluE,MAAMs5C,EACxC40B,GAAgBh0E,IAAI23E,EAEpB,OAAOv4B,GAGMlgD,GAAA+4E,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAc36E,OAClB,MAAOs7E,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAIvtC,GAAsBstC,EAAaE,UAEvC,IAAIC,GAAwB,GAAIx2D,YAAW01D,EAAc36E,OAAOu7E,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAIz7E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIsJ,GAAa0qE,EAAc36E,MAC/B,KAAKP,EAAI,EAAGA,EAAIwQ,EAAKxQ,IAAK,CACzB07E,EAAa17E,EAAE87E,CACfL,GAAgBP,EAAcl7E,GAAG87E,CAEjC,KAAK50E,EAAI,EAAGA,EAAI40E,EAAQ50E,IACvB80E,EAAWN,EAAax0E,GAAKqnC,EAASktC,EAAgBv0E,GAGxD20E,EAAe,GAAI3O,GAAiB4O,EAAQtrE,EAC5CqrE,GAAaE,WAAaC,CAE1B,OAAOH,GAxjBOh5E,GAAAw4E,YAAqB,KAErBx4E,GAAAu4E,cAAuB,QAEvBv4E,GAAA24E,WAA2B,GAAIh1E,MAsjB/C,OAAA3D,KAEApC,GAA0BJ,QAAjBwC,IrIkkoBN+qE,8CAA8CxrE,UAAUwjB,6CAA6CxjB,UAAUuI,8CAA8CvI,UAAUwI,8CAA8CxI,UAAU65E,8CAA8C75E,UAAU0e,gCAAgC1e,YAAY85E,yCAAyC,SAAS38E,EAAQkB,EAAOJ",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tpublic _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _explicitColorTransform:ColorTransform;\r\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._explicitColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n        this._explicitColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\r\n\t\t//newInstance.name = this.name;\r\n\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\t\tnewInstance.masks = this._explicitMasks? this._explicitMasks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._explicitMaskId == -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\r\n\t\tif(this._iColorTransform)\r\n\t\t\tthis._iColorTransform.clear();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic get _iColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._explicitColorTransform;\r\n\t}\r\n\r\n\tpublic set _iColorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._explicitColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tvar dif:number = (this._hierarchicalPropsDirty ^ bitFlag) & bitFlag;\r\n\t\tif (!dif)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= bitFlag;\r\n\r\n\t\tif (dif & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartition();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled()\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible()\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId()\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks()\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform()\r\n\t{\r\n\t\tif (this._inheritColorTransform && this._pParent) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = !this._maskMode;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n *\r\n */\r\nclass HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}\r\n\r\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar child_depths = target_mc.getChildDepths();\r\n\t\tvar sessionID_depths:Object = {};\r\n\t\tvar i:number;\r\n\t\tvar end_index:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc._children[i];\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\tsessionID_depths[child._depthID] = child._sessionID;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar targetFrame_first_sessionID:number=0;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\t\t\tvar start_index:number;\r\n\t\t\tvar idx:number;\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\r\n\t\t\t\t\tdelete child_depths[depth];\r\n\t\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\r\n\t\t\t\t\tidx = i*2;\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\tchild_depths[depth] = target;\r\n\t\t\t\t\tsessionID_depths[depth] = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(k==target_keyframe_idx){\r\n\t\t\t\t\ttargetFrame_first_sessionID=start_index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tdepth = child._depthID;\r\n\t\t\tif (sessionID_depths[depth] == child._sessionID)\r\n\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\telse\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t}\r\n\r\n\t\t// we need to addchild the objects that was added befor targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\r\n\t\tfor (var key in sessionID_depths) {\r\n\t\t\tif(parseInt(key)<targetFrame_first_sessionID){\r\n\t\t\t\tchild = child_depths[key];\r\n\t\t\t\tchild._sessionID = sessionID_depths[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\t\tfor (var key in sessionID_depths) {\r\n\t\t\tif(parseInt(key)>=targetFrame_first_sessionID) {\r\n\t\t\t\tchild = child_depths[key];\r\n\t\t\t\tchild._sessionID = sessionID_depths[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\t\t\ttarget._sessionID = i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\r\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\r\n\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\r\n\r\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\r\n\r\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\r\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\r\n\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttarget.maskMode = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 201:\r\n\t\t\t\t\t\t\ttarget.masks = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "/**\r\n *\r\n */\r\nclass TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n}\r\n\r\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._displayObject._iColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tthis._displayObject._iColorTransform = val;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _active_depths:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._active_depths[depth] = child;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this._active_depths[depth];\r\n\t}\r\n\r\n\tpublic getChildDepths():Object\r\n\t{\r\n\t\treturn this._active_depths;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\t//check to make sure _active_depths wasn't modified with a new child\r\n\t\tif (this._active_depths[child._depthID] == this)\r\n\t\t\tdelete this._active_depths[child._depthID];\r\n\r\n\t\tchild._depthID = -16384;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tif (!this._active_depths[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._active_depths[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\t(this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localTouchPoint:TouchPoint;\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalTouchPoint = new TouchPoint();\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoint.x = localPosition.x;\r\n\t\t\tlocalTouchPoint.y = localPosition.y;\r\n\t\t\tlocalTouchPoints.push(localTouchPoint);\r\n\t\t}\r\n\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this._children[i].clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!this.getBox().contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the geometry thing\r\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\r\n\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Object;\r\n    private _active_session_ids:Object;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids = {};\r\n        this._potentialInstances = {};\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string)\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex():number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex():number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public exit_frame():void\r\n    {\r\n        this._skipAdvance = false;\r\n\r\n        var child:DisplayObject;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\r\n            child = this._children[i];\r\n            if(child.isAsset(MovieClip))\r\n                (<MovieClip> child).exit_frame();\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        super.reset();\r\n\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)\r\n            this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n\r\n        this._skipAdvance = true;\r\n\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n            var skip_script:boolean=false;\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this._timeline.numFrames){\r\n                value = this._timeline.numFrames - 1;\r\n                skip_script=true;\r\n            }\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\r\n        child.reset();// this takes care of transform and visibility\r\n\r\n        super.addChildAtDepth(child, depth, true);\r\n\r\n        this._active_session_ids[child._sessionID] = child;\r\n\r\n\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject = super.removeChildAtInternal(index);\r\n\r\n        if(child.adapter)\r\n            child.adapter.freeFromScript();\r\n\r\n        this.adapter.unregisterScriptObject(child);\r\n\r\n        delete this._active_session_ids[child._sessionID];\r\n\r\n        child._sessionID = -1;\r\n\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n\r\n        FrameScriptManager.execute_intervals();\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\r\n\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n\r\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop)\r\n                advance = false;\r\n\r\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n\r\n            if (advance) {\r\n                this._currentFrameIndex++;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\r\n                    this.currentFrameIndex = 0;\r\n                } else if (oldFrameIndex != this._currentFrameIndex){ // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n        }\r\n\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len:number = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i <  len; ++i) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i < len; i++) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\r\n\t\tif(!this._iColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n\t\tthis._iColorTransform.color = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\r\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\r\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\r\n\t\t\t\tvar line_width:number = 0;\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t\t}\r\n\t\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t\t}\r\n\t\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len:number = this.numChildren;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n\r\n        if (this._pEntityNode)\r\n            this._pEntityNode.acceptTraverser(traverser);\r\n\r\n        var i:number;\r\n        for (i = 0; i < this._numChildMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n\r\n        for (i = 0; i < this._pNumChildNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = node.displayObject._depthID;\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "Array",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\t//check if nmot solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = this.name;\n\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = this.name;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\t\treturn child;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar obj:any;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
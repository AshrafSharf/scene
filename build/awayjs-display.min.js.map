{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_available",
    "push",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_orientationMatrix",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "clear",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_clearInterfaces",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "_meshes",
    "pop",
    "isAsset",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "getNewSubMesh",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_subGeometry",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "getClass",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "newSubMesh",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<CurveSubMesh> = new Array<CurveSubMesh>();\n\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic subGeometry:CurveSubGeometry;\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tCurveSubMesh._available.push(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tpublic _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D;\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotDirty:boolean;\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._matrix3D.rawData[12];\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[12] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._matrix3D.rawData[13];\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[13] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._matrix3D.rawData[14];\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[14] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\t}\n\n\tpublic clear()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t\tthis._explicitColorTransform = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._matrix3D.rawData[12] == dx && this._matrix3D.rawData[13] == dy && this._matrix3D.rawData[14] == dz)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._matrix3D.rawData[12] += x*len;\n\t\tthis._matrix3D.rawData[13] += y*len;\n\t\tthis._matrix3D.rawData[14] += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis._clearInterfaces();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (this._pivot)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tpublic updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\n\t\t\tthis._pRenderables[i].dispose();\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<LineSubMesh> = new Array<LineSubMesh>();\n\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic subGeometry:LineSubGeometry;\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tLineSubMesh._available.push(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this.parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic parentMesh:Mesh;\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this.parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.parentMesh = parentMesh;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tthis.parentMesh = null;\n\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this.parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.splice(this._renderables.indexOf(renderable), 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\n\t\t\tthis._renderables[i].dispose();\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild._elementsDirty = true;\n\n\t\tchild.invalidatePosition();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child._iColorTransform || (child._iColorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild._elementsDirty = true;\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._displayObject = null;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<TriangleSubMesh> = new Array<TriangleSubMesh>();\n\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic subGeometry:TriangleSubGeometry;\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tTriangleSubMesh._available.push(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.clear();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i]._clearInterfaces();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tif (this.isAsset(Mesh))\n\t\t\tnewInstance.geometry = this._geometry;\n\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subMesh:ISubMesh = SubMeshPool.getNewSubMesh(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._clearInterfaces();\n\t}\n}\n\nexport = Mesh;",
    "import Event                        = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset                       = require(\"awayjs-core/lib/library/IAsset\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.clear();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public clear()\n    {\n        super.clear();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public _clearInterfaces()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            } else {\n                instance._clearInterfaces();\n            }\n        }\n\n        super._clearInterfaces();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.clear();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renders.length - 1; i >= 0; i--)\n\t\t\tthis._renders[i].dispose();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static getNewSubMesh(subGeometry:SubGeometryBase, parentMesh:Mesh, material:MaterialBase = null):ISubMesh\n\t{\n\t\tvar subMeshClass:ISubMeshClass = SubMeshPool.classPool[subGeometry.assetType];\n\n\t\tif (!subMeshClass._available.length)\n\t\t\treturn new subMeshClass(subGeometry, parentMesh, material);\n\n\t\tvar newSubMesh:ISubMesh = subMeshClass._available.pop();\n\n\t\tnewSubMesh.subGeometry = subGeometry;\n\t\tnewSubMesh.parentMesh = parentMesh;\n\t\tnewSubMesh.material = material;\n\n\t\treturn newSubMesh;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}